{
  "version": 3,
  "sources": ["../../src/webflow-blog/github-gist.ts"],
  "sourcesContent": ["\n/*\n * webflow-blog\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Blog Utilities\n */\n\n\n\n/*\n * GitHub Gist.\n */\n\nexport class GitHubGist {\n    \n    urlTemplate;\n\n    // Initialize\n    constructor() {\n    }\n\n    init() {\n        this.initCopyGist();\n    }\n        \n    initCopyGist() {\n\n        document.querySelectorAll('[wfu-gist-copy]').forEach((el: HTMLElement) => {\n            el.addEventListener('click', (e: Event) => {\n                \n//                console.log(\"clicked\"); \n                \n                let a: string | null = el.getAttribute('wfu-gist-copy');\n//                console.log(a); \n                \n                let gist: Element | null = document.querySelector(`[wfu-gist=\"${a}\"]`);\n                \n                if (gist !== null) {\n                    this.copyToClipboard(this.getGistCode(gist));\n                }\n                \n            });\n        });\n\n    }\n\n    copyToClipboard(text: string) {\n\n        navigator.clipboard.writeText(text).then(() => {\n//            console.log('Copying to clipboard was successful!');\n        }, (err: any) => {\n            console.error('Could not copy text: ', err);\n        });\n\n    }\n\n    getGistCode(el: Element | null): string {\n    \n        if(!el) return;\n        \n        // Extract the GIST content\n        let code = el.querySelector(\".gist-file\")?.textContent || '';\n        \n        // Remove whitespace-only lines\n        let cleanString = code.replace(/\\n\\s*\\n/g, '\\n');\n        \n//        console.log(cleanString);\n  \n        // Trim the last four lines \n        let lines = cleanString.split('\\n');\n        lines = lines.slice(0, -4);  \n        let finalString = lines.join('\\n');\n    \n//        console.log(finalString);\n        \n        // Trim 10 pre-whitespaces\n        let finalLines = finalString.split('\\n').map((line: string) => {\n            return line.startsWith('          ') ? line.slice(10) : line;\n        });\n        let trimmedString = finalLines.join('\\n');\n    \n//        console.log(trimmedString);\n\n        return trimmedString;\n    }\n    \n}\n\nwindow[\"GitHubGist\"] = GitHubGist;\n\n\n\n\n// // Register\n// window[\"sa5\"] = window[\"sa5\"] || {};\n// window[\"sa5\"][\"Sa5Blog\"] = Sa5Blog;"],
  "mappings": ";;AAgBO,MAAM,aAAN,MAAiB;AAAA,IAKpB,cAAc;AAAA,IACd;AAAA,IAEA,OAAO;AACH,WAAK,aAAa;AAAA,IACtB;AAAA,IAEA,eAAe;AAEX,eAAS,iBAAiB,iBAAiB,EAAE,QAAQ,CAAC,OAAoB;AACtE,WAAG,iBAAiB,SAAS,CAAC,MAAa;AAIvC,cAAI,IAAmB,GAAG,aAAa,eAAe;AAGtD,cAAI,OAAuB,SAAS,cAAc,cAAc,KAAK;AAErE,cAAI,SAAS,MAAM;AACf,iBAAK,gBAAgB,KAAK,YAAY,IAAI,CAAC;AAAA,UAC/C;AAAA,QAEJ,CAAC;AAAA,MACL,CAAC;AAAA,IAEL;AAAA,IAEA,gBAAgB,MAAc;AAE1B,gBAAU,UAAU,UAAU,IAAI,EAAE,KAAK,MAAM;AAAA,MAE/C,GAAG,CAAC,QAAa;AACb,gBAAQ,MAAM,yBAAyB,GAAG;AAAA,MAC9C,CAAC;AAAA,IAEL;AAAA,IAEA,YAAY,IAA4B;AA3D5C;AA6DQ,UAAG,CAAC;AAAI;AAGR,UAAI,SAAO,QAAG,cAAc,YAAY,MAA7B,mBAAgC,gBAAe;AAG1D,UAAI,cAAc,KAAK,QAAQ,YAAY,IAAI;AAK/C,UAAI,QAAQ,YAAY,MAAM,IAAI;AAClC,cAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,UAAI,cAAc,MAAM,KAAK,IAAI;AAKjC,UAAI,aAAa,YAAY,MAAM,IAAI,EAAE,IAAI,CAAC,SAAiB;AAC3D,eAAO,KAAK,WAAW,YAAY,IAAI,KAAK,MAAM,EAAE,IAAI;AAAA,MAC5D,CAAC;AACD,UAAI,gBAAgB,WAAW,KAAK,IAAI;AAIxC,aAAO;AAAA,IACX;AAAA,EAEJ;AAEA,SAAO,gBAAgB;",
  "names": []
}
