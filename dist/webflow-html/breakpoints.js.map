{
  "version": 3,
  "sources": ["../../src/webflow-core.ts", "../../src/webflow-html/breakpoints.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n/*\n * Debugging class.\n */\nexport interface Sa5Handler {\n    [0]: string;\n    [1]: Function;\n}\n\nexport class Sa5Core {\n\n    init() {\n\n        this.initDebugMode();\n\n    }\n\n    initDebugMode() {\n\n        const debugParamKey = 'debug'; // ?debug=true\n\n//        var wfuDebugValue = Boolean(localStorage.setItem('wfuDebug', 'true')); \n\n        let params = new URLSearchParams(window.location.search);\n        let hasDebug = params.has(debugParamKey);\n\n        if (hasDebug) {\n            let wfuDebug = new Sa5Debug(`sa5 init`);\n            wfuDebug.persistentDebug = this.stringToBoolean(params.get(debugParamKey));\n        }\n\n    }\n\n    stringToBoolean(str: string): boolean {\n        const truthyValues: string[] = ['1', 'true', 'yes'];\n        const falsyValues: string[] = ['0', 'false', 'no'];\n      \n        if (truthyValues.indexOf(str.toLowerCase()) !== -1) {\n            return true;\n        // } else if (falsyValues.indexOf(str.toLowerCase()) !== -1) {\n        //     return false;\n        } else {\n            return false;\n        }\n    }\n\n}\n\nexport class Sa5Debug {\n    \n    private localStorageDebugFlag: string = 'sa5-debug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"sa5-core debug enabled (persistent).\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"sa5-core debug disabled (persistent).\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n\n/*\n * webflow-html\n * Breakpoints\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n */\n\n\nimport { Sa5Debug } from '../webflow-core';\n\n\ninterface Config {\n    handleBreakpointChange?: ((breakpointName: string, e: MediaQueryListEvent) => void) | null;\n}\n\n// Webflow breakpoints\nexport const sa5Breakpoints = {\n    large1920: '(min-width: 1920px)',\n    large1440: '(min-width: 1440px) and (max-width: 1919px)',\n    large1280: '(min-width: 1280px) and (max-width: 1439px)',\n    desktop: '(min-width: 992px) and (max-width: 1279px)',\n    tablet: '(min-width: 768px) and (max-width: 991px)',\n    mobileLandscape: '(min-width: 480px) and (max-width: 767px)',\n    mobilePortrait: '(max-width: 479px)'\n}\n\n\nexport class Sa5Breakpoints {\n    config: Config;\n\n    constructor(config: Config) {\n        this.config = config;\n    }\n\n    init() {\n\n        // Initialize debugging\n        let debug = new Sa5Debug(\"sa5-html\");\n        debug.debug (\"Breakpoints initialized.\", this.config);\n    \n        // Create MediaQueryList and attach listeners for each breakpoint\n        for (let device in sa5Breakpoints) {\n            let mediaQueryList = window.matchMedia(sa5Breakpoints[device]);\n\n            // Register internal handler\n            mediaQueryList.addEventListener('change', this.handleBreakpointChange);\n\n            if (mediaQueryList.matches) {\n                this.handleBreakpointChange(\n                { \n                    media: mediaQueryList.media, \n                    matches: mediaQueryList.matches \n                } as MediaQueryListEvent); \n            }\n\n/*\n            // If a handler is defined, we install it\n            if(this.config.handleBreakpointChange) {\n\n                // Install change listener\n                mediaQueryList.addEventListener('change', this.config.handleBreakpointChange);\n\n\n                if (device)\n                // Call the callback now to initialize current breakpoint\n                this.config.handleBreakpointChange({ \n                    media: mediaQueryList.media, \n                    matches: mediaQueryList.matches \n                } as MediaQueryListEvent); \n\n            }\n*/\n\n        }\n\n    }\n\n    // Breakpoint changed\n    handleBreakpointChange = ((e: MediaQueryListEvent) => {\n\n        // We only want matching events \n        if (!e.matches)\n            return;\n\n        // Identify breakpoint\n        var device = null;\n        for (let d in sa5Breakpoints) {\n            if (e.media == sa5Breakpoints[d]) {\n                console.log(`Current device: ${d}`);\n                device = d; \n            }\n          }\n\n        // Notify any config-specified handler\n        if(this.config.handleBreakpointChange) \n            this.config.handleBreakpointChange(\n                device as string, \n                e\n/*                { \n                media: e.media, \n                matches: e.matches \n            } as MediaQueryListEvent\n            */\n            ); \n/*\n        // Notify any globally registered handlers \n        if(this.config.handleBreakpointChange) \n            this.config.handleBreakpointChange({ \n                media: e.media, \n                matches: e.matches \n            } as MediaQueryListEvent); \n  */\n\n    });\n\n}\n\n// Register\nwindow[\"sa5\"] = window[\"sa5\"] || {};\nwindow[\"sa5\"][\"Sa5Breakpoints\"] = Sa5Breakpoints;\n\n\n  \n"],
  "mappings": ";;AA2DO,MAAM,WAAN,MAAe;AAAA,IAyClB,YAAY,OAAe;AAvC3B,WAAQ,wBAAgC;AAExC,WAAQ,WAAoB;AAwCxB,WAAK,SAAS;AAAA,IAElB;AAAA,IArCA,IAAI,kBAA2B;AAC3B,aAAO,QAAQ,aAAa,QAAQ,KAAK,qBAAqB,CAAC;AAAA,IACnE;AAAA,IACA,IAAI,gBAAgB,QAAiB;AACjC,UAAI,QAAQ;AACR,qBAAa,QAAQ,KAAK,uBAAuB,MAAM;AACvD,gBAAQ,MAAO,sCAAsC;AAAA,MACzD,OAAO;AACH,qBAAa,WAAW,KAAK,qBAAqB;AAClD,gBAAQ,MAAO,uCAAuC;AAAA,MAC1D;AAAA,IACJ;AAAA,IAGA,IAAI,UAAmB;AAInB,UAAI,gBAAgB,QAAQ,aAAa,QAAQ,KAAK,qBAAqB,CAAC;AAI5E,sBAAgB,iBAAiB,KAAK;AAEtC,aAAO;AAAA,IACX;AAAA,IACA,IAAI,QAAQ,QAAiB;AACzB,WAAK,WAAW;AAAA,IACpB;AAAA,IAaA,MAAM,MAAM;AACR,UAAI,KAAK;AACL,gBAAQ,MAAM,IAAI;AAAA,IAC1B;AAAA,IAGA,WAAW;AACP,UAAI,KAAK;AACL,gBAAQ,SAAS;AAAA,IACzB;AAAA,IAGA,SAAS,MAAmB;AAExB,UAAI,KAAK;AAGL,gBAAQ,MAAM,KAAK,QAAQ,GAAG,IAAI;AAAA,IAE1C;AAAA,EAEJ;;;AC9GO,MAAM,iBAAiB;AAAA,IAC1B,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,EACpB;AAGO,MAAM,iBAAN,MAAqB;AAAA,IAGxB,YAAY,QAAgB;AAgD5B,oCAA0B,CAAC,MAA2B;AAGlD,YAAI,CAAC,EAAE;AACH;AAGJ,YAAI,SAAS;AACb,iBAAS,KAAK,gBAAgB;AAC1B,cAAI,EAAE,SAAS,eAAe,IAAI;AAC9B,oBAAQ,IAAI,mBAAmB,GAAG;AAClC,qBAAS;AAAA,UACb;AAAA,QACF;AAGF,YAAG,KAAK,OAAO;AACX,eAAK,OAAO;AAAA,YACR;AAAA,YACA;AAAA,UAMJ;AAAA,MAUR;AAlFI,WAAK,SAAS;AAAA,IAClB;AAAA,IAEA,OAAO;AAGH,UAAI,QAAQ,IAAI,SAAS,UAAU;AACnC,YAAM,MAAO,4BAA4B,KAAK,MAAM;AAGpD,eAAS,UAAU,gBAAgB;AAC/B,YAAI,iBAAiB,OAAO,WAAW,eAAe,OAAO;AAG7D,uBAAe,iBAAiB,UAAU,KAAK,sBAAsB;AAErE,YAAI,eAAe,SAAS;AACxB,eAAK;AAAA,YACL;AAAA,cACI,OAAO,eAAe;AAAA,cACtB,SAAS,eAAe;AAAA,YAC5B;AAAA,UAAwB;AAAA,QAC5B;AAAA,MAoBJ;AAAA,IAEJ;AAAA,EAwCJ;AAGA,SAAO,SAAS,OAAO,UAAU,CAAC;AAClC,SAAO,OAAO,oBAAoB;",
  "names": []
}
