{
  "version": 3,
  "sources": ["../../src/webflow-core/debug.ts", "../../src/globals.ts", "../../src/webflow-core/designer.ts", "../../src/webflow-core.ts", "../../src/webflow-html/breakpoints.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Debug Utilities\n */\n\n\n\nexport class Sa5Debug {\n    \n    private localStorageDebugFlag: string = 'sa5-debug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"sa5-core debug enabled (persistent).\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"sa5-core debug disabled (persistent).\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n/**\n * SA5 Globals\n * \n */\n\nexport enum Sa5GlobalEvent {\n\n    EVENT_USER_CHANGED = 'userInfoChanged',\n    EVENT_DATASTORE_LOADED = 'datastoreLoaded',\n    EVENT_SLIDE_CHANGED = 'slideChanged', \n    EVENT_VIDEO_TIME_UPDATE = 'videoTimeUpdate', \n    \n}\n\nexport enum Sa5ScriptType {\n\n    SCRIPT_TYPE_DATA_ITEM = 'wfu-data-item', \n    SCRIPT_TYPE_SA5_DATA_ITEM = 'sygnal/sa5-data-proto', // 'sygnal/sa5-data', \n\n}\n\nexport namespace Sa5Attribute {\n    export function getBracketed(attr: Sa5Attribute): string {\n        return `[${attr}]`;\n    }\n}\n\nexport enum Sa5Attribute {\n\n    // Video\n    ATTR_VIDEO = 'wfu-video',\n    ATTR_VIDEO_DATA_POSTER_URL = 'wfu-data-poster-url', \n\n    // Designer\n    ATTR_DESIGN = 'wfu-design',\n\n    // Elements \n    ATTR_ELEMENT_SLIDER = 'wfu-slider',\n    ATTR_ELEMENT_TABS = 'wfu-tabs',\n    ATTR_ELEMENT_BUTTON = 'wfu-button', \n        ATTR_BUTTON_ENABLED = 'wfu-button-enabled', \n        ATTR_BUTTON_DISABLED_CLASS = 'wfu-button-disabled-class',\n\n    // Data\n    ATTR_DATA = 'wfu-data',\n    ATTR_DATA_TYPE = 'wfu-data-type',\n    ATTR_DATA_DSN = 'wfu-data-dsn',\n    ATTR_DATA_ITEM_ID = 'wfu-data-item-id',\n    \n    // Data-binding\n    ATTR_DATABIND = 'wfu-bind',\n    ATTR_DATABIND_CONTENT = 'wfu-bind-content',\n    ATTR_DATABIND_CONTEXT_DSN = 'wfu-bind-dsn',\n    ATTR_DATABIND_CONTEXT_ITEM_ID = 'wfu-bind-item-id',\n\n    // Pre-loaders\n    ATTR_PRELOAD = 'wfu-preload', \n\n    // Interactions\n    ATTR_IX_TRIGGER = 'wfu-ix-trigger',\n    ATTR_IX_ID = 'wfu-ix-id',\n\n    // Sort\n    ATTR_SORT = 'wfu-sort',\n\n    // Filter\n    ATTR_FILTER = 'wfu-filter',\n    ATTR_FILTER_MATCH = 'wfu-filter-match',\n    ATTR_FILTER_EVAL = 'wfu-filter-eval',\n    ATTR_FILTER_FUNC = 'wfu-filter-func',\n\n}", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Designer Utilities\n */\n\nimport { Sa5Attribute } from \"../globals\";\n\n\n\nexport class Sa5Designer {\n\n    constructor() {\n\n    }\n\n    init() {\n        this.removeDesignTimeElements();\n    }\n\n    // Remove any element tagged for design-time-only\n    // used typically for in-designer <style> elements\n    // in HTML Embeds. \n    removeDesignTimeElements() {\n\n// console.log(\"designer clean\"); \n\n        const elements: NodeListOf<HTMLElement> = document.querySelectorAll(\n            Sa5Attribute.getBracketed(Sa5Attribute.ATTR_DESIGN)\n            );\n\n        elements.forEach(element => {\n            element.remove();\n        });\n\n    }\n\n}\n\n\n", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n// export interface Sa5Handler {\n//     [0]: string;\n//     [1]: Function;\n// }\n\n\n// import { HtmlBuilder } from './modules/webflow-html-builder';\nimport { Sa5Debug } from './webflow-core/debug'\nimport { Sa5Designer } from './webflow-core/designer';\n\n/*\n * Debugging class.\n */\n\nexport class Sa5Core {\n\n    // let sa5: [string, Function][] = window.sa5 || [];\n    public handlers = [];\n\n    getHandlers(name: string): Function[] {\n\n        return this.handlers.filter(item => item[0] === name)\n            .map(item => item[1]);\n\n//        return null;\n    }\n\n    getHandler(name: string): Function | undefined {\n        const item = this.handlers\n            .find(item => item[0] === name);\n        return item ? item[1] : undefined;\n    }\n\n    // Map for elements wired to Sa5 objects \n//    public elements: WeakMap<HTMLElement, object>;\n//     map.set(elem, myObject);\n\n// // Later, you can retrieve the object like this\n// let retrievedObject = map.get(elem);\n\n    constructor() {\n\n        // Remove any designer-only elements\n        (new Sa5Designer).init();    \n\n    }\n\n    init() {\n\n        this.initDebugMode();\n\n    }\n\n    // Auto-enable debug\n    // based on ?sa-debug=true querystring param\n    initDebugMode() {\n\n        const debugParamKey = 'debug'; // ?sa-debug=true\n\n//        var wfuDebugValue = Boolean(localStorage.setItem('wfuDebug', 'true')); \n\n        let params = new URLSearchParams(window.location.search);\n        let hasDebug = params.has(debugParamKey);\n\n        if (hasDebug) {\n            let wfuDebug = new Sa5Debug(`sa5 init`);\n            wfuDebug.persistentDebug = this.stringToBoolean(params.get(debugParamKey));\n        }\n\n    }\n\n    stringToBoolean(str: string): boolean {\n        const truthyValues: string[] = ['1', 'true', 'yes'];\n        const falsyValues: string[] = ['0', 'false', 'no'];\n      \n        if (truthyValues.indexOf(str.toLowerCase()) !== -1) {\n            return true;\n        // } else if (falsyValues.indexOf(str.toLowerCase()) !== -1) {\n        //     return false;\n        } else {\n            return false;\n        }\n    }\n\n    // Factory \n    // Get or create Sa5Core \n    static startup(module: any | null = null): Sa5Core {\n\n//        console.debug(\"sa5core\", \"startup\");\n\n//        console.debug(\"INITIALIZING SA5CORE\");\n//        console.log(window[\"sa5\"]);\n        \n        let sa5instance = window['sa5'];\n\n        var core: Sa5Core; // = new Sa5Core();\n\n        // Initialize Sa5Core if needed\n\n        if(sa5instance?.constructor?.name == \"Sa5Core\") {\n\n            core = sa5instance;\n\n        } else {\n\n    //         if(window[\"sa5\"])\n    // console.log(\"name\", window[\"sa5\"].name);\n\n            core = new Sa5Core();\n\n            // Absorb handlers\n            if(Array.isArray(sa5instance))\n                core.handlers = sa5instance; //window[\"sa5\"];\n\n            window[\"sa5\"] = core;\n            window[\"Sa5\"] = window[\"sa5\"];\n//            console.log(\"post\", window[\"sa5\"] instanceof Sa5Core);\n\n        } \n\n        // Add new module\n        //window[\"sa5\"] = window[\"sa5\"] || []; // {};\n        if (module) {\n\n//            console.debug(\"Registered module\", module.name); \n\n            window[\"sa5\"][module.name] = module;\n//            console.log(window[\"sa5\"][module.name]);\n        }\n\n        // instance.constructor.name\n\n        return core;\n    }\n\n    // Add new handlers\n    push(o) {\n        this.handlers.push(o);\n    }\n\n}\n\n\n// Complete initialization \n// even though we don't need it yet \nSa5Core.startup(); \n\n\n// Register\n//window[\"sa5\"] = window[\"sa5\"] || []; // {};\n//window[\"sa5\"][\"Sa5Core\"] = Sa5Core;\n", "\n\n/*\n * webflow-html\n * Breakpoints\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n */\n\n\nimport { Sa5Core } from '../webflow-core';\nimport { Sa5Debug } from '../webflow-core/debug';\n\n\ntype BreakpointChangedCallback = (\n    breakpointName: string, \n    e: MediaQueryListEvent\n    ) => void; \n\n\n\ninterface Sa5BreakpointsConfig {\n\n    breakpointChangedCallback?: BreakpointChangedCallback; \n\n}\n\n// Webflow breakpoints\nexport const sa5Breakpoints = {\n    large1920: '(min-width: 1920px)',\n    large1440: '(min-width: 1440px) and (max-width: 1919px)',\n    large1280: '(min-width: 1280px) and (max-width: 1439px)',\n    desktop: '(min-width: 992px) and (max-width: 1279px)',\n    tablet: '(min-width: 768px) and (max-width: 991px)',\n    mobileLandscape: '(min-width: 480px) and (max-width: 767px)',\n    mobilePortrait: '(max-width: 479px)'\n}\n\n\nexport class Sa5Breakpoints {\n\n    config: Sa5BreakpointsConfig;\n\n    // Type guard to check if a function is a UserInfoChangedCallback\n    private isBreakpointsChangedCallback(func: Function): func is BreakpointChangedCallback {\n\n        if(!func) return false;\n\n        // Adjust this check as needed\n        return func.length === 1;\n    }\n\n    constructor(config: Partial<Sa5BreakpointsConfig> = {}) {\n\n        // Merge configs, with defaults\n        this.config = {\n            breakpointChangedCallback: config.breakpointChangedCallback,\n        }\n\n        let core: Sa5Core = Sa5Core.startup(); \n\n        const breakpointChanged = core.getHandler('breakpointChanged'); \n\n        this.config.breakpointChangedCallback = breakpointChanged as BreakpointChangedCallback;\n\n    }\n\n    init() {\n\n        // Initialize debugging\n        let debug = new Sa5Debug(\"sa5-html\");\n        debug.debug (\"Breakpoints initialized.\", this.config);\n    \n        // Create MediaQueryList and attach listeners for each breakpoint\n        for (let device in sa5Breakpoints) {\n            let mediaQueryList = window.matchMedia(sa5Breakpoints[device]);\n\n            // Register internal handler\n            mediaQueryList.addEventListener('change', this.handleBreakpointChange);\n\n            if (mediaQueryList.matches) {\n                this.handleBreakpointChange(\n                { \n                    media: mediaQueryList.media, \n                    matches: mediaQueryList.matches \n                } as MediaQueryListEvent); \n            }\n\n        }\n\n    }\n\n    // Breakpoint changed\n    handleBreakpointChange = ((e: MediaQueryListEvent) => {\n\n        // We only want matching events \n        if (!e.matches)\n            return;\n\n        // Identify breakpoint\n        var device = null;\n        for (let d in sa5Breakpoints) {\n            if (e.media == sa5Breakpoints[d]) {\n//                console.log(`Current device: ${d}`);\n                device = d; \n            }\n        }\n\n        // Notify any config-specified handler\n        if(this.config.breakpointChangedCallback) {\n\n            this.config.breakpointChangedCallback(\n                device as string, \n                e\n            ); \n        }\n\n    });\n\n}\n\n// Register\n// window[\"sa5\"] = window[\"sa5\"] || []; // {};\n// window[\"sa5\"][\"Sa5Breakpoints\"] = Sa5Breakpoints;\n\n\n  \n// \"site\": {\n//     \"mediaQueries\": [{\n//         \"key\": \"main\",\n//         \"min\": 992,\n//         \"max\": 10000\n//     }, {\n//         \"key\": \"medium\",\n//         \"min\": 768,\n//         \"max\": 991\n//     }, {\n//         \"key\": \"small\",\n//         \"min\": 480,\n//         \"max\": 767\n//     }, {\n//         \"key\": \"tiny\",\n//         \"min\": 0,\n//         \"max\": 479\n//     }]"],
  "mappings": "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",
  "names": ["Sa5Attribute", "item"]
}
