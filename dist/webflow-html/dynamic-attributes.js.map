{
  "version": 3,
  "sources": ["../../src/webflow-core/debug.ts", "../../src/webflow-html/dynamic-attributes.ts"],
  "sourcesContent": ["\r\n/*\r\n * webflow-core\r\n * \r\n * Sygnal Technology Group\r\n * http://sygnal.com\r\n * \r\n * Debug Utilities\r\n */\r\n\r\n\r\n\r\nexport class Sa5Debug {\r\n    \r\n    private localStorageDebugFlag: string = 'sa5-debug';\r\n\r\n    private _enabled: boolean = false;\r\n    private _label: string;\r\n\r\n    // Get or set WFU persistent debug state\r\n    // which is stored in localStorage. \r\n    get persistentDebug(): boolean {\r\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \r\n    }\r\n    set persistentDebug(active: boolean) {\r\n        if (active) {\r\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\r\n            console.debug (\"sa5-core debug enabled (persistent).\");\r\n        } else {\r\n            localStorage.removeItem(this.localStorageDebugFlag); \r\n            console.debug (\"sa5-core debug disabled (persistent).\");\r\n        }\r\n    }\r\n\r\n    // Enable/disable debugging \r\n    get enabled(): boolean {\r\n\r\n        // localStorage is checked for a debug flag, to enable remote debug enabling \r\n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \r\n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \r\n\r\n        // Or this with the current debug state\r\n        // If either is enabled, debugging is on \r\n        wfuDebugValue = wfuDebugValue || this._enabled; \r\n\r\n        return wfuDebugValue;\r\n    }\r\n    set enabled(active: boolean) {\r\n        this._enabled = active;\r\n    }\r\n\r\n\r\n    // Initialize\r\n    constructor(label: string) {\r\n\r\n        // Save the label, for console logging\r\n        this._label = label;\r\n\r\n    }\r\n\r\n\r\n    // Start a console log group\r\n    group(name) {\r\n        if (this.enabled)\r\n            console.group(name);\r\n    }\r\n\r\n    // End a console log group\r\n    groupEnd() {\r\n        if (this.enabled)\r\n            console.groupEnd();\r\n    }\r\n\r\n    // Log debug data to the console\r\n    debug(...args: any[]): void {\r\n\r\n        if (this.enabled)\r\n            // Unlimited arguments in a JavaScript function\r\n            // https://stackoverflow.com/a/6396066\r\n            console.debug(this._label, ...args); \r\n            \r\n    }\r\n\r\n}\r\n\r\n\r\n", "\r\n\r\n/*\r\n * webflow-html\r\n * Dynamic Attributes\r\n * \r\n * Sygnal Technology Group\r\n * http://sygnal.com\r\n * \r\n * Applies all x- prefixed attributes to their elements without the prefix.\r\n * Designed to overcome limitations with Webflow's custom attributes reserved names. \r\n * Best paired with the new CMS databinding feature of Webflow's custom attributes. \r\n */\r\n\r\n\r\nimport { Sa5Debug } from '../webflow-core/debug';\r\n\r\n\r\n\r\ninterface Config {\r\n}\r\n\r\n\r\nexport class Sa5HtmlDynamicAttributes {\r\n    config: Config;\r\n\r\n    constructor(config: Config) {\r\n        this.config = config;\r\n    }\r\n\r\n    init() {\r\n\r\n        // Initialize debugging\r\n        let debug = new Sa5Debug(\"sa5-html\");\r\n        debug.debug (\"Dynamic attributes initialized.\", this.config);\r\n    \r\n        // Select all elements in the document\r\n        var allElements = document.querySelectorAll('*');\r\n\r\n        // Iterate over all elements\r\n        allElements.forEach(function(element) {\r\n\r\n            // Iterate over all attributes of each element\r\n            for (var i = 0; i < element.attributes.length; i++) {\r\n                var attr = element.attributes[i]; \r\n\r\n                // Check if attribute name starts with 'x-'\r\n                if (attr.name.startsWith('x-')) {\r\n                    // Do something with the element or attribute\r\n\r\n                    var newAttrName = attr.name.slice(2);\r\n                    // Set the new attribute on the element with the same value as the old attribute\r\n                    element.setAttribute(newAttrName, attr.value);\r\n\r\n//                    console.log('Element:', element, 'Attribute:', attr.name, 'Value:', attr.value);\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n}\r\n  \r\n// Register\r\n// window[\"sa5\"] = window[\"sa5\"] || []; // {};\r\n// window[\"sa5\"][\"Sa5HtmlDynamicAttributes\"] = Sa5HtmlDynamicAttributes;\r\n\r\n\r\n"],
  "mappings": ";;AAYO,MAAM,WAAN,MAAe;AAAA,IAyClB,YAAY,OAAe;AAvC3B,WAAQ,wBAAgC;AAExC,WAAQ,WAAoB;AAwCxB,WAAK,SAAS;AAAA,IAElB;AAAA,IArCA,IAAI,kBAA2B;AAC3B,aAAO,QAAQ,aAAa,QAAQ,KAAK,qBAAqB,CAAC;AAAA,IACnE;AAAA,IACA,IAAI,gBAAgB,QAAiB;AACjC,UAAI,QAAQ;AACR,qBAAa,QAAQ,KAAK,uBAAuB,MAAM;AACvD,gBAAQ,MAAO,sCAAsC;AAAA,MACzD,OAAO;AACH,qBAAa,WAAW,KAAK,qBAAqB;AAClD,gBAAQ,MAAO,uCAAuC;AAAA,MAC1D;AAAA,IACJ;AAAA,IAGA,IAAI,UAAmB;AAInB,UAAI,gBAAgB,QAAQ,aAAa,QAAQ,KAAK,qBAAqB,CAAC;AAI5E,sBAAgB,iBAAiB,KAAK;AAEtC,aAAO;AAAA,IACX;AAAA,IACA,IAAI,QAAQ,QAAiB;AACzB,WAAK,WAAW;AAAA,IACpB;AAAA,IAaA,MAAM,MAAM;AACR,UAAI,KAAK;AACL,gBAAQ,MAAM,IAAI;AAAA,IAC1B;AAAA,IAGA,WAAW;AACP,UAAI,KAAK;AACL,gBAAQ,SAAS;AAAA,IACzB;AAAA,IAGA,SAAS,MAAmB;AAExB,UAAI,KAAK;AAGL,gBAAQ,MAAM,KAAK,QAAQ,GAAG,IAAI;AAAA,IAE1C;AAAA,EAEJ;;;AC5DO,MAAM,2BAAN,MAA+B;AAAA,IAGlC,YAAY,QAAgB;AACxB,WAAK,SAAS;AAAA,IAClB;AAAA,IAEA,OAAO;AAGH,UAAI,QAAQ,IAAI,SAAS,UAAU;AACnC,YAAM,MAAO,mCAAmC,KAAK,MAAM;AAG3D,UAAI,cAAc,SAAS,iBAAiB,GAAG;AAG/C,kBAAY,QAAQ,SAAS,SAAS;AAGlC,iBAAS,IAAI,GAAG,IAAI,QAAQ,WAAW,QAAQ,KAAK;AAChD,cAAI,OAAO,QAAQ,WAAW;AAG9B,cAAI,KAAK,KAAK,WAAW,IAAI,GAAG;AAG5B,gBAAI,cAAc,KAAK,KAAK,MAAM,CAAC;AAEnC,oBAAQ,aAAa,aAAa,KAAK,KAAK;AAAA,UAGhD;AAAA,QACJ;AAAA,MAEJ,CAAC;AAAA,IAEL;AAAA,EAEJ;",
  "names": []
}
