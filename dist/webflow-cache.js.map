{
  "version": 3,
  "sources": ["../src/webflow-core.ts", "../src/webflow-cache.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n/*\n * Debugging class.\n */\n\nexport class WfuCore {\n\n    init() {\n\n        this.initDebugMode();\n\n    }\n\n    initDebugMode() {\n\n        const debugParamKey = 'debug'; // ?debug=true\n\n        // if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n        //     console.log('Running in a browser environment');\n        // } else {\n        //     console.log('Not running in a browser environment');\n        // }\n\n//        var wfuDebugValue = Boolean(localStorage.setItem('wfuDebug', 'true')); \n\n        let params = new URLSearchParams(window.location.search);\n        let hasDebug = params.has(debugParamKey);\n\n        if (hasDebug) {\n            let wfuDebug = new WfuDebug(`wfu init`);\n            wfuDebug.persistentDebug = this.stringToBoolean(params.get(debugParamKey));\n        }\n\n    }\n\n    stringToBoolean(str: string): boolean {\n        const truthyValues: string[] = ['1', 'true', 'yes'];\n        const falsyValues: string[] = ['0', 'false', 'no'];\n      \n        if (truthyValues.indexOf(str.toLowerCase()) !== -1) {\n            return true;\n        // } else if (falsyValues.indexOf(str.toLowerCase()) !== -1) {\n        //     return false;\n        } else {\n            return false;\n        }\n    }\n\n}\n\nexport class WfuDebug {\n    \n    private localStorageDebugFlag: string = 'wfuDebug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"WFU persistent debug enabled.\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"WFU persistent debug disabled.\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n/*\n * webflow-cache \n * Cache Utilities \n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Cache Utilities \n * An advanced utility for retriving and caching values online, for maximum performance.\n */\n\n\nimport { WfuDebug } from './webflow-core';\n\n\n//#region WfuCacheItem\n\nenum CacheStorage {\n\n    sessionStorage,\n    localStorage,\n    cookies\n\n}\n\n\ninterface WfuCacheConfig {\n\n    store: CacheStorage;\n    prefix: string;\n    val: {};\n\n    debug: boolean;\n\n}\n\n\nvar defaultConfig: WfuCacheConfig = {\n\n    // sessionStorage | localStorage | cookies\n    store: CacheStorage.sessionStorage, // 'sessionStorage', // ONLY supported \n    prefix: 'cache', \n    val: {}, // Cached values \n\n    debug: false, // Debugging mode\n  \n}\n\n\nexport class WfuCache {\n\n//    console = new WfuDebug(\"wfu-cache\");\n\n    config: WfuCacheConfig; // Optional config\n    debug: WfuDebug; \n \n    constructor(customConfig = {}) {\n\n        //        this.config = $.extend({}, defaultWfuCacheConfig, config);\n        this.config = { ...defaultConfig, ...customConfig };\n\n        // Enable debugging, if specified\n        this.debug = new WfuDebug(\"wfu-cache\");\n        this.debug.enabled = this.config.debug; \n\n    }\n\n    cacheKey = function(key) {\n        return `${this.config.prefix}_${key}`;\n    }\n\n    async getAsync(valueName) {\n\n        this.debug.group(`getAsync - \"${valueName}\"`);\n        \n        var valueHandler = this.config.val[valueName];\n        this.debug.debug(\"valueHandler\", valueHandler);\n        \n        var returnValue = sessionStorage.getItem(\n            this.cacheKey(valueName));\n        this.debug.debug(\"cached? sessionStorage.getItem\", returnValue); \n      \n        const that = this;\n\n        // Not cached\n        // go get this value \n        if (returnValue == null || returnValue == undefined) { \n            \n            // Call valueHandler function to calculate \n            returnValue = await valueHandler.config.updateFnAsync().then(r => {\n                sessionStorage.setItem(\n                    this.cacheKey(valueName), r);\n                that.debug.debug(\"sessionStorage.setItem\", valueName, r); \n                that.debug.debug(\"calculated\", r); \n                return r;\n                }); \n\n        }\n\n        this.debug.debug(\"returning\", returnValue); \n\n        this.debug.groupEnd();\n        return returnValue; \n    }\n\n}\n\n//#endregion\n\n//#region WfuCache\n\n\nwindow[\"WfuCache\"] = WfuCache;\n\n\n\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DO,MAAM,WAAN,MAAe;AAAA,IAyClB,YAAY,OAAe;AAvC3B,WAAQ,wBAAgC;AAExC,WAAQ,WAAoB;AAwCxB,WAAK,SAAS;AAAA,IAElB;AAAA,IArCA,IAAI,kBAA2B;AAC3B,aAAO,QAAQ,aAAa,QAAQ,KAAK,qBAAqB,CAAC;AAAA,IACnE;AAAA,IACA,IAAI,gBAAgB,QAAiB;AACjC,UAAI,QAAQ;AACR,qBAAa,QAAQ,KAAK,uBAAuB,MAAM;AACvD,gBAAQ,MAAO,+BAA+B;AAAA,MAClD,OAAO;AACH,qBAAa,WAAW,KAAK,qBAAqB;AAClD,gBAAQ,MAAO,gCAAgC;AAAA,MACnD;AAAA,IACJ;AAAA,IAGA,IAAI,UAAmB;AAInB,UAAI,gBAAgB,QAAQ,aAAa,QAAQ,KAAK,qBAAqB,CAAC;AAI5E,sBAAgB,iBAAiB,KAAK;AAEtC,aAAO;AAAA,IACX;AAAA,IACA,IAAI,QAAQ,QAAiB;AACzB,WAAK,WAAW;AAAA,IACpB;AAAA,IAaA,MAAM,MAAM;AACR,UAAI,KAAK;AACL,gBAAQ,MAAM,IAAI;AAAA,IAC1B;AAAA,IAGA,WAAW;AACP,UAAI,KAAK;AACL,gBAAQ,SAAS;AAAA,IACzB;AAAA,IAGA,SAAS,MAAmB;AAExB,UAAI,KAAK;AAGL,gBAAQ,MAAM,KAAK,QAAQ,GAAG,IAAI;AAAA,IAE1C;AAAA,EAEJ;;;AC9FA,MAAI,gBAAgC;AAAA,IAGhC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,KAAK,CAAC;AAAA,IAEN,OAAO;AAAA,EAEX;AAGO,MAAM,WAAN,MAAe;AAAA,IAOlB,YAAY,eAAe,CAAC,GAAG;AAW/B,sBAAW,SAAS,KAAK;AACrB,eAAO,GAAG,KAAK,OAAO,UAAU;AAAA,MACpC;AAVI,WAAK,SAAS,kCAAK,gBAAkB;AAGrC,WAAK,QAAQ,IAAI,SAAS,WAAW;AACrC,WAAK,MAAM,UAAU,KAAK,OAAO;AAAA,IAErC;AAAA,IAMM,SAAS,WAAW;AAAA;AAEtB,aAAK,MAAM,MAAM,eAAe,YAAY;AAE5C,YAAI,eAAe,KAAK,OAAO,IAAI;AACnC,aAAK,MAAM,MAAM,gBAAgB,YAAY;AAE7C,YAAI,cAAc,eAAe;AAAA,UAC7B,KAAK,SAAS,SAAS;AAAA,QAAC;AAC5B,aAAK,MAAM,MAAM,kCAAkC,WAAW;AAE9D,cAAM,OAAO;AAIb,YAAI,eAAe,QAAQ,eAAe,QAAW;AAGjD,wBAAc,MAAM,aAAa,OAAO,cAAc,EAAE,KAAK,OAAK;AAC9D,2BAAe;AAAA,cACX,KAAK,SAAS,SAAS;AAAA,cAAG;AAAA,YAAC;AAC/B,iBAAK,MAAM,MAAM,0BAA0B,WAAW,CAAC;AACvD,iBAAK,MAAM,MAAM,cAAc,CAAC;AAChC,mBAAO;AAAA,UACP,CAAC;AAAA,QAET;AAEA,aAAK,MAAM,MAAM,aAAa,WAAW;AAEzC,aAAK,MAAM,SAAS;AACpB,eAAO;AAAA,MACX;AAAA;AAAA,EAEJ;AAOA,SAAO,cAAc;",
  "names": []
}
