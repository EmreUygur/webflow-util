{
  "version": 3,
  "sources": ["../../src/webflow-membership/access-groups.ts"],
  "sourcesContent": ["\r\n/*\r\n * SA5 \r\n * webflow-membership\r\n * Access Groups\r\n * \r\n * Sygnal Technology Group\r\n * http://sygnal.com\r\n * \r\n * Member Information Utilities\r\n */\r\n\r\n// import { XXH64 } from '../webflow-crypto';\r\n// import { toTitleCase, getCookie } from '../utils';\r\n//import { WfuDebug } from './webflow-core.js';\r\n\r\nimport { Sa5Core } from '../webflow-core';\r\nimport { Sa5Debug } from '../webflow-core/debug';\r\nimport { Sa5UserAccounts } from '../webflow-membership';\r\nimport { Sa5User } from './user';\r\n\r\n    \r\n\r\n\r\n/*\r\n * Access Groups class.\r\n */\r\n\r\n//import Md5 from \"crypto-api/src/hasher/md5\"; \r\nexport class Sa5UserAccessGroups {\r\n\r\n    membership: Sa5UserAccounts;\r\n    accessGroups: string[] = [];\r\n\r\n    constructor(membership: Sa5UserAccounts) {\r\n        this.membership = membership; \r\n    }\r\n\r\n    async initAsync() { \r\n\r\nconsole.log(\"initAsync\"); \r\n\r\n        // Determine access group access\r\n        console.log(await this.getAccessGroupsAsync());\r\n  \r\n        // Iterate and check\r\n\r\n        // this.hasAccessGroup(\"webflow\");\r\n        // this.hasAccessGroup(\"client\");\r\n    }\r\n\r\n    async getAccessGroupsAsync() {\r\n\r\n        this.accessGroups = []; // Object.create(null); \r\n        // this.accessGroups.push({ key: \"webflow\", access: false });\r\n        // this.accessGroups.push({ key: \"webflow-2\", access: false });\r\n        // this.accessGroups.push({ key: \"client\", access: false });\r\n\r\n        for (let group of this.membership.config.accessGroups) {\r\n            let hasAccess: boolean = await this.checkAccessGroupAsync(group);\r\n            if(hasAccess)\r\n                this.accessGroups.push(group);\r\n        }\r\n\r\n      //  accessGroups.webflow = false;\r\n      //  accessGroups[\"webflow-2\"] = false;\r\n      //  accessGroups.push({\"client\": false});\r\n      //  accessGroups = {...accessGroups, [\"client\"]: false}; \r\n      \r\n    //   this.accessGroups.forEach((element, index) => {\r\n    //     this.accessGroups[index].access = true;\r\n    //     });\r\n        \r\n        /*\r\n      const accessGroups = {\r\n          \"webflow\": false,\r\n          \"webflow-2\": false,\r\n          \"client\": false\r\n        };\r\n      */\r\n        \r\n      //  const ag = accessGroups.map(\r\n      //x => Object.assign({}, accessGroups, {\"hasAccess\": \"true\"})\r\n      //  ); \r\n        \r\n        return this.accessGroups; // \r\n      }\r\n\r\n    async checkAccessGroupAsync(accessGroupCode): Promise<boolean> {\r\n\r\n        const response = await fetch(\r\n            `${this.membership.config.accessGroupsFolder}/${accessGroupCode}`\r\n            );\r\n        console.log(`redirected: ${response.redirected}`);\r\n      \r\n        console.log('STATUS:', response.status); \r\n        \r\n\r\n          // https://www.sygnal.com/access-group/webflow\r\n        // 302\r\n        // 200 \r\n        \r\n          if(!response.redirected)\r\n          {\r\n            //no redirection\r\n            console.log(`Has access group ${accessGroupCode}`);\r\n            return true; \r\n          }\r\n\r\n          // Check and report mis-configuration \r\n          if(response.status != 200) {\r\n            console.warn('SA5', `Memberships configuration error- access group ${accessGroupCode} is not queryable.`);\r\n          }\r\n\r\n\r\n        //   else\r\n        //   {\r\n            //redirection\r\n            console.log(`Not logged in, or no access to ${accessGroupCode}`); \r\n\r\n\r\n\r\n            return false; \r\n//          }\r\n      \r\n        // /log-in?\r\n          // https://www.sygnal.com/access-group/client\r\n        // access denied\r\n        // 302 \r\n        // /access-denied? \r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n"],
  "mappings": ";;AA6BO,MAAM,sBAAN,MAA0B;AAAA,IAK7B,YAAY,YAA6B;AAFzC,0BAAyB,CAAC;AAGtB,WAAK,aAAa;AAAA,IACtB;AAAA,IAEA,MAAM,YAAY;AAEtB,cAAQ,IAAI,WAAW;AAGf,cAAQ,IAAI,MAAM,KAAK,qBAAqB,CAAC;AAAA,IAMjD;AAAA,IAEA,MAAM,uBAAuB;AAEzB,WAAK,eAAe,CAAC;AAKrB,eAAS,SAAS,KAAK,WAAW,OAAO,cAAc;AACnD,YAAI,YAAqB,MAAM,KAAK,sBAAsB,KAAK;AAC/D,YAAG;AACC,eAAK,aAAa,KAAK,KAAK;AAAA,MACpC;AAuBA,aAAO,KAAK;AAAA,IACd;AAAA,IAEF,MAAM,sBAAsB,iBAAmC;AAE3D,YAAM,WAAW,MAAM;AAAA,QACnB,GAAG,KAAK,WAAW,OAAO,sBAAsB;AAAA,MAChD;AACJ,cAAQ,IAAI,eAAe,SAAS,YAAY;AAEhD,cAAQ,IAAI,WAAW,SAAS,MAAM;AAOpC,UAAG,CAAC,SAAS,YACb;AAEE,gBAAQ,IAAI,oBAAoB,iBAAiB;AACjD,eAAO;AAAA,MACT;AAGA,UAAG,SAAS,UAAU,KAAK;AACzB,gBAAQ,KAAK,OAAO,iDAAiD,mCAAmC;AAAA,MAC1G;AAME,cAAQ,IAAI,kCAAkC,iBAAiB;AAI/D,aAAO;AAAA,IAUf;AAAA,EAEJ;",
  "names": []
}
