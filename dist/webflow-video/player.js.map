{
  "version": 3,
  "sources": ["../../src/webflow-video/player.ts"],
  "sourcesContent": ["\n/*\n * webflow-video\n * Vimeo\n * Handles Vimeo player.\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Video Utilities\n */\n\nimport { Sa5Core } from '../webflow-core'\nimport { WfuVideoPlayerVimeo } from './players/vimeo';\n\n\n\nexport class WfuVideoPlayer {\n\n//    config; // Optional config\n\n    name: string;\n    element: HTMLElement;\n\n\n\n    constructor(element: HTMLElement) {\n\nconsole.log('player constructor', element); \n\n        // Player factory \n\n        if (element) {\n            let videoName = element.getAttribute('wfu-video'); \n            this.name = videoName;\n            this.element = element;\n\n            console.log(\"video name is\", this.name);\n            // if (videoValue) {\n            //     console.log(videoValue);\n            // } else {\n            //     console.log('Attribute not found or has no value');\n            // }\n        }\n\n//var videoElement = document.querySelector('iframe[wfu-video=\"video1\"]');\n\n//        this.config = config;\n\n    }\n\n    // Process elements with the custom attr wfu-query-param\n    init() {\n\n\n    }\n\n    // static create(element: HTMLElement): WfuVideoPlayer {\n\n    //     // It's Vimeo!\n    //         // Verify it's a recognized player\n    //         // Vimeo ( on iframe? )\n    //         return new WfuVideoPlayerVimeo(element);\n    \n    //         /*\n    //     if (element) {\n    //         let videoValue = element.getAttribute('wfu-video');\n    //         if (videoValue) {\n    //             console.log(videoValue);\n    //         } else {\n    //             console.log('Attribute not found or has no value');\n    //         }\n    //     }\n    //     */\n    \n    // }\n\n}\n\n"],
  "mappings": ";;AAiBO,MAAM,iBAAN,MAAqB;AAAA,IASxB,YAAY,SAAsB;AAEtC,cAAQ,IAAI,sBAAsB,OAAO;AAIjC,UAAI,SAAS;AACT,YAAI,YAAY,QAAQ,aAAa,WAAW;AAChD,aAAK,OAAO;AACZ,aAAK,UAAU;AAEf,gBAAQ,IAAI,iBAAiB,KAAK,IAAI;AAAA,MAM1C;AAAA,IAMJ;AAAA,IAGA,OAAO;AAAA,IAGP;AAAA,EAsBJ;",
  "names": []
}
