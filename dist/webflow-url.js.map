{
  "version": 3,
  "sources": ["../src/webflow-core/debug.ts", "../src/webflow-core.ts", "../src/webflow-url.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Debug Utilities\n */\n\n\n\nexport class Sa5Debug {\n    \n    private localStorageDebugFlag: string = 'sa5-debug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"sa5-core debug enabled (persistent).\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"sa5-core debug disabled (persistent).\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n// export interface Sa5Handler {\n//     [0]: string;\n//     [1]: Function;\n// }\n\n\n// import { HtmlBuilder } from './modules/webflow-html-builder';\nimport { Sa5Debug } from './webflow-core/debug'\n\n/*\n * Debugging class.\n */\n\nexport class Sa5Core {\n\n    public handlers = [];\n\n    // Map for elements wired to Sa5 objects \n//    public elements: WeakMap<HTMLElement, object>;\n//     map.set(elem, myObject);\n\n// // Later, you can retrieve the object like this\n// let retrievedObject = map.get(elem);\n\n    constructor() {\n//        this.elements = new WeakMap<HTMLElement, object>();\n    }\n\n    init() {\n\n\n        this.initDebugMode();\n\n    }\n\n    // Auto-enable debug\n    // based on ?sa-debug=true querystring param\n    initDebugMode() {\n\n        const debugParamKey = 'sa-debug'; // ?sa-debug=true\n\n//        var wfuDebugValue = Boolean(localStorage.setItem('wfuDebug', 'true')); \n\n        let params = new URLSearchParams(window.location.search);\n        let hasDebug = params.has(debugParamKey);\n\n        if (hasDebug) {\n            let wfuDebug = new Sa5Debug(`sa5 init`);\n            wfuDebug.persistentDebug = this.stringToBoolean(params.get(debugParamKey));\n        }\n\n    }\n\n    stringToBoolean(str: string): boolean {\n        const truthyValues: string[] = ['1', 'true', 'yes'];\n        const falsyValues: string[] = ['0', 'false', 'no'];\n      \n        if (truthyValues.indexOf(str.toLowerCase()) !== -1) {\n            return true;\n        // } else if (falsyValues.indexOf(str.toLowerCase()) !== -1) {\n        //     return false;\n        } else {\n            return false;\n        }\n    }\n\n    static startup(module: any | null = null) {\n\n//        console.debug(\"sa5core\", \"startup\");\n\n//        console.debug(\"INITIALIZING SA5CORE\");\n//        console.log(window[\"sa5\"]);\n        \n        let sa5instance = window['sa5'];\n\n        // Initialize Sa5Core if needed\n        if(!(sa5instance?.constructor?.name == \"Sa5Core\")) {\n\n    //         if(window[\"sa5\"])\n    // console.log(\"name\", window[\"sa5\"].name);\n\n            var core = new Sa5Core();\n\n            // Absorb handlers\n            if(Array.isArray(sa5instance))\n                core.handlers = window[\"sa5\"];\n\n            window[\"sa5\"] = core;\n            window[\"Sa5\"] = window[\"sa5\"];\n//            console.log(\"post\", window[\"sa5\"] instanceof Sa5Core);\n\n        } \n\n        // Add new module\n        //window[\"sa5\"] = window[\"sa5\"] || []; // {};\n        if (module) {\n\n//            console.debug(\"Registered module\", module.name); \n\n            window[\"sa5\"][module.name] = module;\n//            console.log(window[\"sa5\"][module.name]);\n        }\n\n        // instance.constructor.name\n\n    }\n\n    // Add new handlers\n    push(o) {\n        this.handlers.push(o);\n    }\n\n}\n\n\n\nSa5Core.startup();\n// Register\n//window[\"sa5\"] = window[\"sa5\"] || []; // {};\n//window[\"sa5\"][\"Sa5Core\"] = Sa5Core;\n", "\n/*\n * webflow-url\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Url Utilities\n */\n\n\nimport { Sa5Core } from './webflow-core'\n\n/*\n * Query-processing functions.\n * Adds querystring data to specific tagged elements.\n */\nexport class WfuQuery {\n\n//    config; // Optional config\n\n    constructor() {\n\n//        this.config = config;\n\n    }\n\n    processLink(linkElem) {\n\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // Skip if no href\n        if (linkElem.attr(\"href\") == null)\n            return;\n\n        // Disassemble url \n        var hrefParts = linkElem.attr(\"href\").split(\"?\");\n        var hrefBase = hrefParts[0];\n        var hrefQuery = hrefParts[1];\n\n        const newParams = new URLSearchParams(hrefQuery);\n\n        // Handle suppressed elements\n        if (linkElem.attr(\"wfu-query-param\") == '-') {\n\n            // Skip, do nothing\n            //        console.log(`Processing - / ${linkElem.attr(\"href\")}`);\n\n            // Handle all-params elements \n            // https://stackoverflow.com/questions/1318076/jquery-hasattr-checking-to-see-if-there-is-an-attribute-on-an-element\n        } else if (linkElem.attr(\"wfu-query-param\") == '*' || linkElem.attr(\"wfu-query-param\") == undefined || linkElem.attr(\"wfu-query-param\") == false) {\n\n            //        console.log(`Processing * / ${linkElem.attr(\"href\")} / ${hrefBase} / ${hrefQuery}`);\n\n            //        linkElem.text(`${linkElem.text()} - WILDCARD`);\n\n            // Merge querystrings\n            // overrwrites any conflicting params with new ones\n            for (let p of urlParams) {\n                newParams.set(p[0], urlParams.get(p[0]));\n            };\n\n            // Replaces whole querystring, preserving nothing\n            var newHref = hrefBase + '?' + newParams.toString();\n\n            // Update link href\n            linkElem.attr(\"href\", newHref);\n\n            // Handle specific-params \n        } else {\n\n            //        console.log(`Process MULTI / ${linkElem.attr(\"href\")} / ${hrefBase} / ${hrefQuery}`);\n\n            // Duplicate params risk \n            // https://stackoverflow.com/a/60828146 \n\n            // Iterate through params and append\n            // e.g. [wfu-query-param]=\"foo,bar,bat\"\n            var overrideParams = linkElem.attr(\"wfu-query-param\").split(\",\");\n\n            for (let p of overrideParams) {\n                if (urlParams.get(p) != null)\n                    newParams.set(p, urlParams.get(p));\n            };\n\n            var newHref = hrefBase + '?' + newParams.toString();\n\n            // Update link href\n            linkElem.attr(\"href\", newHref);\n        }\n\n    }\n\n    // Process elements with the custom attr wfu-query-param\n    processAll() {\n\n        const urlParams: URLSearchParams = new URLSearchParams(window.location.search);\n\n        // Skip if there is no querystring\n        if (Array.from(urlParams).length == 0)\n            return;\n\n        const that = this;\n\n        // Loop all processable elements\n        // - All <a> elements\n        // - Any element tagged with [wfu-query-param]=?\n        // TODO: ignore elems tagged [wfu-query-param]=- or eleme within a DIV tagged as such? \n\n        // Get all elements with 'wfu-query-param' attribute and all 'a' elements\n        let elements = Array.from(document.querySelectorAll('*[wfu-query-param], a'));\n        \n        elements.forEach((element) => {\n            let wfuQueryParam = element.getAttribute('wfu-query-param');\n        \n            if (element.tagName.toLowerCase() === 'input' && wfuQueryParam) {\n                // For INPUT elements, set the value param\n                (element as HTMLInputElement).value = urlParams.get(wfuQueryParam) || '';\n            } else if (element.tagName.toLowerCase() === 'a') {\n                // FORMS\n                // IFRAMES \n                this.processLink(element);\n            } else if (wfuQueryParam) {\n                // For anything else, set the inner text\n                element.textContent = urlParams.get(wfuQueryParam) || '';\n            }\n        });\n\n    }\n\n}\n\n/*\n * Link-processing functions.\n * Fixues up //self/ relative links for CMS.\n */\n\nexport class WfuRelativeLinkFixup {\n\n//    config; // Optional config\n\n    // TODO: Support alternatives \n\n    constructor() {\n\n//        this.config = config;\n\n    }\n\n    // Process elements with the custom attr wfu-query-param\n    processAll() {\n\n        // Case insensitive jQuery attribute selector\n        // https://stackoverflow.com/a/38923109\n\n        // Get all 'a' elements with 'href' attribute containing '//self/'\n        let elements = Array.from(\n            document.querySelectorAll(\"a[href*='//self/' i], a[href$='//self' i]\"));\n\n        elements.forEach((element) => {\n            // Get the href attribute\n            let href = element.getAttribute('href');\n\n            if (href) {\n                // Create a new URL object\n                const url = new URL(href);\n\n                // Set the href attribute to the pathname of the URL\n                element.setAttribute('href', url.pathname);\n            }\n        });\n\n    }\n\n}\n\n\n\n/*\n * Link-processing functions.\n * Fixues up //self/ relative links for CMS.\n */\n\nexport class WfuTargetLinks {\n\n//    config; // Optional config\n\n    // TODO: Allow forcing target override \n\n    constructor() {\n\n//        this.config = config;\n\n    }\n\n    // Process elements with the custom attr wfu-query-param\n    processAll() {\n\n        // Get all 'a' elements with 'href' attribute starting with 'http://' or 'https://' and without 'target' attribute\n        let elements = Array.from(\n            document.querySelectorAll(\"a[href^='http://']:not([target]), a[href^='https://']:not([target])\"));\n\n        elements.forEach((element) => {\n            // Get the href attribute\n            let href = element.getAttribute('href');\n\n            if (href) {\n                console.debug(`retargeting ${href}.`);\n\n                // Set the target attribute to '_blank'\n                element.setAttribute('target', '_blank');\n            }\n        });\n\n    }\n\n}\n\n\n\n// Register\nSa5Core.startup(WfuQuery);\n// window[\"sa5\"] = window[\"sa5\"] || []; // {};\n// window[\"sa5\"][\"Sa5Format\"] = WebflowFormat;\n\n"],
  "mappings": "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",
  "names": []
}
