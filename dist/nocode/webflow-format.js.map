{
  "version": 3,
  "sources": ["../../src/webflow-format.ts", "../../src/webflow-core.ts", "../../src/nocode/webflow-format.ts"],
  "sourcesContent": ["\n/*\n * webflow-format\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Data Formatting Utilities\n */\n\n\n\n\nexport class WebflowFormat {\n\n    // Initialize\n    constructor() {\n\n    }\n\n    // Simplest-case encoding for HTML5\n    formatField  (elem : HTMLElement) {\n\n        // How to assign JSON string to Javascript variable?\n        // https://stackoverflow.com/a/31372143\n        const fs = new Map([\n            [\"usd\", {\n                \"locale\": 'en-US',\n                \"style\": 'currency',\n                \"currency\": 'USD',\n            }],\n            [\"gbp\", {\n                \"locale\": 'en-US',\n                \"style\": 'currency',\n                \"currency\": 'GBP',\n            }],\n            [\"eur\", {\n                \"locale\": 'en-US',\n                \"style\": 'currency',\n                \"currency\": 'EUR',\n            }],\n            [\"jpy\", {\n                \"locale\": 'ja-JP',\n                \"style\": 'currency',\n                \"currency\": 'JPY'\n            }],\n            [\"percent\", {\n                \"locale\": 'en-US',\n                \"style\": 'percent',\n            }],\n            [\"%\", {\n                \"locale\": 'en-US',\n                \"style\": 'percent',\n            }],\n            [\"comma\", {\n                \"locale\": 'en-US',\n    //            \"style\": 'percent',\n            }],\n            [\",\", {\n                \"locale\": 'en-US',\n    //            \"style\": 'percent',\n            }],\n        ]);\n        // Important- this approach handles common scenarios,\n        // but does not handle quotes or special accented characters.\n        // See https://www.php.net/htmlspecialchars\n\n        elem.innerText\n//        const $item = $(elem);\n        const txt = elem.innerText; //$item.text();\n        const val: number = parseFloat(txt);\n\n        var fn = elem.getAttribute(\"wfu-format\"); // e.g. \"usd\";\n\n        // Determine the number of decimal places\n        // this is set in the Designer, as the formatting of the numeric item\n        var decimals = 0;\n        if (txt.includes('.'))\n            decimals = txt.split('.')[1].length;\n\n        // Get the base formatting rules\n        var f = fs.get(fn);\n\n    //    console.log(fn);\n    //    console.log(JSON.stringify(f));\n\n        var settings = {};\n        settings[\"style\"] = f.style;\n        settings[\"currency\"] = f.currency;\n        settings[\"minimumFractionDigits\"] = decimals;\n        settings[\"maximumFractionDigits\"] = decimals;\n        //    settings.roundingIncrement = 1; \n    //    console.log(JSON.stringify(settings));\n\n    // Format the item\n        const formatter = new Intl.NumberFormat(f.locale, settings);\n\n        // Apply the formatting\n        elem.innerHTML = formatter.format(val);\n\n    }\n\n}\n\n\n\n", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n/*\n * Debugging class.\n */\n\nexport class WfuCore {\n\n    init() {\n\n        this.initDebugMode();\n\n    }\n\n    initDebugMode() {\n\n        const debugParamKey = 'debug'; // ?debug=true\n\n        // if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n        //     console.log('Running in a browser environment');\n        // } else {\n        //     console.log('Not running in a browser environment');\n        // }\n\n//        var wfuDebugValue = Boolean(localStorage.setItem('wfuDebug', 'true')); \n\n        let params = new URLSearchParams(window.location.search);\n        let hasDebug = params.has(debugParamKey);\n\n        if (hasDebug) {\n            let wfuDebug = new WfuDebug(`wfu init`);\n            wfuDebug.persistentDebug = this.stringToBoolean(params.get(debugParamKey));\n        }\n\n    }\n\n    stringToBoolean(str: string): boolean {\n        const truthyValues: string[] = ['1', 'true', 'yes'];\n        const falsyValues: string[] = ['0', 'false', 'no'];\n      \n        if (truthyValues.indexOf(str.toLowerCase()) !== -1) {\n            return true;\n        // } else if (falsyValues.indexOf(str.toLowerCase()) !== -1) {\n        //     return false;\n        } else {\n            return false;\n        }\n    }\n\n}\n\nexport class WfuDebug {\n    \n    private localStorageDebugFlag: string = 'wfuDebug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"WFU persistent debug enabled.\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"WFU persistent debug disabled.\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n/*\n * webflow-format\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * NO-CODE version, keys off of [wfu] attributes.\n */\n\nimport { WebflowFormat } from '../webflow-format';\nimport { WfuCore, WfuDebug } from '../webflow-core';\n\nconst init = () => { \n\n    new WfuCore().init();\n\n    // Initialize debugging\n    let debug = new WfuDebug(\"wfu-demo\");\n    debug.debug (\"Initializing\");\n\n    const webflowFormat = new WebflowFormat();\n\n    const elements = document.querySelectorAll('[wfu-format]') as NodeListOf<HTMLElement>; \n\n    // Iterate over the matched elements\n    elements.forEach((element) => { \n\n      // Do something with each element\n      webflowFormat.formatField(element); \n\n    });\n\n}\n  \ndocument.addEventListener(\"DOMContentLoaded\", init)"],
  "mappings": "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",
  "names": []
}
