{
  "version": 3,
  "sources": ["../../src/webflow-demo.ts", "../../src/webflow-core.ts", "../../src/nocode/webflow-demo.ts"],
  "sourcesContent": ["\n/*\n * webflow-demo\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Webflow Informational Utilities\n */\n\n\n\nexport class WebflowInfo {\n    \n    siteId: string | null; // Webflow SiteId\n    pageId: string | null; // Webflow PageId\n\n    // Initialize\n    constructor() {\n\n        this.siteId = document.documentElement.getAttribute(\"data-wf-site\");\n        this.pageId = document.documentElement.getAttribute(\"data-wf-page\");\n\n    }\n\n    // Returns a Webflow preview link \n    // to the current page\n    getWebflowPreviewLink (url: string): string {\n\n        const parsedUrl = new URL(url);\n\n        // Add/replace pageId in Url \n        parsedUrl.searchParams.set(\"pageId\", this.pageId ?? \"\");\n\n        return parsedUrl.href;\n    }\n\n    updateHrefToWebflowPreviewLink (linkElem: HTMLLinkElement): void {\n\n        var parsedUrl = linkElem.href; \n\n        // Modify href to include pageId\n        var modifiedUrl = this.getWebflowPreviewLink(parsedUrl ?? \"\");\n\n        // Set updated href\n        linkElem.href = modifiedUrl; \n\n    }\n\n}\n\n\n\n", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n/*\n * Debugging class.\n */\n\nexport class WfuDebug {\n    \n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem('wfuDebug')); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n/*\n * webflow-demo\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * NO-CODE version, keys off of [wfu] attributes.\n */\n\nimport { WebflowInfo } from '../webflow-demo';\nimport { WfuDebug } from '../webflow-core.js';\n\nconst init = () => { \n\n    // Initialize debugging\n    let debug = new WfuDebug(\"wfu-demo\");\n    debug.debug (\"Initializing\");\n\n    const webflowInfo = new WebflowInfo();\n\n    const elements = document.querySelectorAll('a[wfu-demo-link]') as NodeListOf<HTMLLinkElement>; \n\n    // Iterate over the matched elements\n    elements.forEach((element) => { \n\n      // Do something with each element\n      webflowInfo.updateHrefToWebflowPreviewLink(element);\n\n    });\n\n}\n  \ndocument.addEventListener(\"DOMContentLoaded\", init)"],
  "mappings": ";;AAYO,MAAM,cAAN,MAAkB;AAAA,IAMrB,cAAc;AAEV,WAAK,SAAS,SAAS,gBAAgB,aAAa,cAAc;AAClE,WAAK,SAAS,SAAS,gBAAgB,aAAa,cAAc;AAAA,IAEtE;AAAA,IAIA,sBAAuB,KAAqB;AA3BhD;AA6BQ,YAAM,YAAY,IAAI,IAAI,GAAG;AAG7B,gBAAU,aAAa,IAAI,WAAU,UAAK,WAAL,YAAe,EAAE;AAEtD,aAAO,UAAU;AAAA,IACrB;AAAA,IAEA,+BAAgC,UAAiC;AAE7D,UAAI,YAAY,SAAS;AAGzB,UAAI,cAAc,KAAK,sBAAsB,gCAAa,EAAE;AAG5D,eAAS,OAAO;AAAA,IAEpB;AAAA,EAEJ;;;ACjCO,MAAM,WAAN,MAAe;AAAA,IAuBlB,YAAY,OAAe;AArB3B,WAAQ,WAAoB;AAwBxB,WAAK,SAAS;AAAA,IAElB;AAAA,IAtBA,IAAI,UAAmB;AAInB,UAAI,gBAAgB,QAAQ,aAAa,QAAQ,UAAU,CAAC;AAI5D,sBAAgB,iBAAiB,KAAK;AAEtC,aAAO;AAAA,IACX;AAAA,IACA,IAAI,QAAQ,QAAiB;AACzB,WAAK,WAAW;AAAA,IACpB;AAAA,IAWA,MAAM,MAAM;AACR,UAAI,KAAK;AACL,gBAAQ,MAAM,IAAI;AAAA,IAC1B;AAAA,IAGA,WAAW;AACP,UAAI,KAAK;AACL,gBAAQ,SAAS;AAAA,IACzB;AAAA,IAGA,SAAS,MAAmB;AAExB,UAAI,KAAK;AAGL,gBAAQ,MAAM,KAAK,QAAQ,GAAG,IAAI;AAAA,IAE1C;AAAA,EAEJ;;;ACvDA,MAAM,OAAO,MAAM;AAGf,QAAI,QAAQ,IAAI,SAAS,UAAU;AACnC,UAAM,MAAO,cAAc;AAE3B,UAAM,cAAc,IAAI,YAAY;AAEpC,UAAM,WAAW,SAAS,iBAAiB,kBAAkB;AAG7D,aAAS,QAAQ,CAAC,YAAY;AAG5B,kBAAY,+BAA+B,OAAO;AAAA,IAEpD,CAAC;AAAA,EAEL;AAEA,WAAS,iBAAiB,oBAAoB,IAAI;",
  "names": []
}
