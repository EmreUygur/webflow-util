{
  "version": 3,
  "sources": ["../../src/webflow-video.ts", "../../src/webflow-core.ts", "../../src/nocode/webflow-video.ts"],
  "sourcesContent": ["\n/*\n * webflow-video\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Webflow Video\n */\n\n\n\nexport class WebflowVideo {\n\n    // Initialize\n    constructor() {\n    }\n\n    // Fix all data poster urls\n    processAllDataPosterUrls (): void {\n\n        // Find poster video overrides and apply them\n        const elements = document.querySelectorAll(`div[wfu-data-poster-url]`);\n        elements.forEach((element) => {\n\n            element.setAttribute(\n                \"data-poster-url\",\n                element.getAttribute(\"wfu-data-poster-url\")\n            );\n\n        });\n\n    }\n\n}\n\n\n\n", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n/*\n * Debugging class.\n */\n\nexport class WfuDebug {\n    \n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem('wfuDebug')); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n/*\n * webflow-video\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * NO-CODE version, keys off of [wfu] attributes.\n */\n\nimport { WebflowVideo } from '../webflow-video';\nimport { WfuDebug } from '../webflow-core.js';\n\nconst init = () => { \n\n    // Initialize debugging\n    let debug = new WfuDebug(\"wfu-video\");\n    debug.debug (\"Initializing\");\n\n    const webflowVideo = new WebflowVideo();\n\n    webflowVideo.processAllDataPosterUrls();\n\n    // // Find poster video overrides and apply them\n    // const elements = document.querySelectorAll(`div[wfu-data-poster-url]`) as NodeListOf<HTMLDivElement>; \n    // elements.forEach((element) => { \n\n    //   // Do something with each element\n    //   webflowInfo.updateHrefToWebflowPreviewLink(element);\n\n    // });\n\n}\n  \ndocument.addEventListener(\"DOMContentLoaded\", init)"],
  "mappings": "MAYO,IAAMA,EAAN,KAAmB,CAGtB,aAAc,CACd,CAGA,0BAAkC,CAGb,SAAS,iBAAiB,0BAA0B,EAC5D,QAASC,GAAY,CAE1BA,EAAQ,aACJ,kBACAA,EAAQ,aAAa,qBAAqB,CAC9C,CAEJ,CAAC,CAEL,CAEJ,EClBO,IAAMC,EAAN,KAAe,CAuBlB,YAAYC,EAAe,CArB3B,KAAQ,SAAoB,GAwBxB,KAAK,OAASA,CAElB,CAtBA,IAAI,SAAmB,CAInB,IAAIC,EAAgB,QAAQ,aAAa,QAAQ,UAAU,CAAC,EAI5D,OAAAA,EAAgBA,GAAiB,KAAK,SAE/BA,CACX,CACA,IAAI,QAAQC,EAAiB,CACzB,KAAK,SAAWA,CACpB,CAWA,MAAMC,EAAM,CACJ,KAAK,SACL,QAAQ,MAAMA,CAAI,CAC1B,CAGA,UAAW,CACH,KAAK,SACL,QAAQ,SAAS,CACzB,CAGA,SAASC,EAAmB,CAEpB,KAAK,SAGL,QAAQ,MAAM,KAAK,OAAQ,GAAGA,CAAI,CAE1C,CAEJ,ECvDA,IAAMC,EAAO,IAAM,CAGH,IAAIC,EAAS,WAAW,EAC9B,MAAO,cAAc,EAEN,IAAIC,EAAa,EAEzB,yBAAyB,CAW1C,EAEA,SAAS,iBAAiB,mBAAoBF,CAAI",
  "names": ["WebflowVideo", "element", "WfuDebug", "label", "wfuDebugValue", "active", "name", "args", "init", "WfuDebug", "WebflowVideo"]
}
