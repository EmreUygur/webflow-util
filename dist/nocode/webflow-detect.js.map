{
  "version": 3,
  "sources": ["../../src/globals.ts", "../../src/webflow-core/debug.ts", "../../src/webflow-core/designer.ts", "../../src/webflow-core.ts", "../../src/webflow-cache.ts", "../../src/webflow-cache/cache-item-typed.ts", "../../src/webflow-detect/geo-handlers/geo-handler-base.ts", "../../src/webflow-detect/geo-handlers/ip-info.ts", "../../src/webflow-detect/routing-rules.ts", "../../src/webflow-detect.ts", "../../src/nocode/webflow-detect.ts"],
  "sourcesContent": ["\n/**\n * SA5 Globals\n * \n */\n\nexport enum Sa5GlobalVar {\n\n    GLOBAL_ROUTE = 'sa5-route' \n\n}\n\nexport enum Sa5GlobalEvent {\n\n    EVENT_USER_CHANGED = 'userInfoChanged',\n    EVENT_DATASTORE_LOADED = 'datastoreLoaded',\n    EVENT_SLIDE_CHANGED = 'slideChanged', \n    EVENT_TAB_CHANGED = 'tabChanged', \n    EVENT_VIDEO_PLAYER_STATE_CHANGE = 'playerStateChange', \n    \n}\n\nexport enum Sa5ScriptType {\n\n    SCRIPT_TYPE_DATA_ITEM = 'wfu-data-item', \n    SCRIPT_TYPE_SA5_DATA_ITEM = 'sygnal/sa5-data', // 'sygnal/sa5-data-proto', \n\n}\n\nexport namespace Sa5Attribute {\n    export function getBracketed(attr: Sa5Attribute): string {\n        return `[${attr}]`;\n    }\n}\n\nexport enum Sa5Attribute {\n\n    // Core\n    ATTR_CORE_SCRIPT_INJECT = 'wfu-script-load', \n\n    // Video\n    ATTR_VIDEO = 'wfu-video',\n    ATTR_VIDEO_YOUTUBE_NOREL = 'wfu-youtube-norel', \n    ATTR_VIDEO_DATA_POSTER_URL = 'wfu-data-poster-url', \n\n    // Designer\n    ATTR_DESIGN = 'wfu-design',\n\n    // Elements \n    ATTR_ELEMENT_SLIDER = 'wfu-slider',\n        ATTR_ELEMENT_SLIDE_NAME = 'wfu-slide-name',\n    ATTR_ELEMENT_TABS = 'wfu-tabs',\n        ATTR_ELEMENT_TAB_NAME = 'wfu-tab-name',\n    ATTR_ELEMENT_BUTTON = 'wfu-button', \n        ATTR_BUTTON_ENABLED = 'wfu-button-enabled', \n        ATTR_BUTTON_DISABLED_CLASS = 'wfu-button-disabled-class',\n    ATTR_ELEMENT_DECK_TARGET = 'wfu-deck-target',\n        ATTR_ELEMENT_DECK_ACTION = 'wfu-deck-action',\n        ATTR_ELEMENT_DECK_ITEM = 'wfu-deck-action-item',\n    ATTR_ELEMENT_DROPDOWN = 'wfu-dropdown',\n        ATTR_ELEMENT_DROPDOWN_NAME = 'wfu-dropdown-name',\n        ATTR_ELEMENT_DROPDOWN_INIT = 'wfu-dropdown-init',\n        ATTR_ELEMENT_DROPDOWN_TYPE = 'wfu-dropdown-type',\n    \n\n    // Data\n    ATTR_DATA = 'wfu-data',\n    ATTR_DATA_TYPE = 'wfu-data-type',\n    ATTR_DATA_DSN = 'wfu-data-dsn',\n    ATTR_DATA_ITEM_ID = 'wfu-data-item-id',\n    \n    // Data-binding\n    ATTR_DATABIND = 'wfu-bind',\n    ATTR_DATABIND_CONTENT = 'wfu-bind-content',\n    ATTR_DATABIND_CONTEXT_DSN = 'wfu-bind-dsn',\n    ATTR_DATABIND_CONTEXT_ITEM_ID = 'wfu-bind-item-id',\n\n    // Pre-loaders\n    ATTR_PRELOAD = 'wfu-preload', \n\n    // Interactions\n    ATTR_IX_TRIGGER = 'wfu-ix-trigger',\n    ATTR_IX_ID = 'wfu-ix-id',\n\n    // Sort\n    ATTR_SORT = 'wfu-sort',\n    ATTR_SORT_DIR = 'wfu-sort-dir',\n    ATTR_SORT_TYPE = 'wfu-sort-type', \n    ATTR_SORT_KEY = 'wfu-sort-key', \n\n    // Filter\n    ATTR_FILTER = 'wfu-filter', // Deprecated\n    ATTR_FILTER_MATCH = 'wfu-filter-match',\n    ATTR_FILTER_EVAL = 'wfu-filter-eval',\n    ATTR_FILTER_FUNC = 'wfu-filter-func',\n\n    // Hiding & Suppression\n    ATTR_HIDE = 'wfu-hide',\n    ATTR_SUPPRESS = 'wfu-suppress',\n\n    // 404\n    ATTR_404_SEARCH = 'wfu-404-search',\n\n    // Forms\n    ATTR_FORM_HANDLER = 'wfu-form-handler',\n    ATTR_FORM_MESSAGE = 'wfu-form-message',\n    ATTR_FORM_IPINFO = 'wfu-form-ipinfo',\n\n    // Modals\n    ATTR_MODAL = 'wfu-modal', \n    ATTR_MODAL_TRIGGER = 'wfu-modal-trigger',\n    ATTR_MODAL_CLOSE = 'wfu-modal-close',\n    ATTR_MODAL_CLOSE_TYPE = 'wfu-modal-close-type',\n    ATTR_MODAL_SUPPRESS_DAYS = 'wfu-modal-suppress-days',\n\n    // Format\n    ATTR_FORMAT = 'wfu-format',\n    ATTR_FORMAT_DATE = 'wfu-format-date',\n    ATTR_FORMAT_HANDLER = 'wfu-format-handler', \n    ATTR_FORMAT_MODE = 'wfu-format-mode',\n    ATTR_FORMAT_SUFFIX = 'wfu-format-suffix',\n\n    // Countup\n    ATTR_COUNTUP = 'wfu-countup', \n    ATTR_COUNTUP_TRIGGER = 'wfu-countup-trigger',\n\n    // Demo\n    ATTR_DEMO_LINK = 'wfu-demo-link',\n\n    // Lightboxes\n    ATTR_LIGHTBOX_CAPTIONS = 'wfu-lightbox-captions',\n    ATTR_LIGHTBOX_GROUP = 'wfu-lightbox-group',\n\n    /**\n     * SA5 HTML\n     */\n\n    // Decode\n    ATTR_DECODE = 'wfu-decode',\n\n    // Limits\n    ATTR_LIMIT_MULTIPLE = 'wfu-limit-multiple',\n    ATTR_LIMIT_MULTIPLE_MIN = 'wfu-limit-multiple-min',\n\n    /**\n     * SA5 User Accounts\n     */\n\n    ATTR_SHOW_LOGGED_IN = 'wfu-show-logged-in',\n    ATTR_HIDE_LOGGED_IN = 'wfu-hide-logged-in',\n    ATTR_LOGIN_BUTTON = 'wfu-login-button',\n\n    /**\n     * SA5 Richtext\n     */\n\n    ATTR_RICHTEXT_LISTS = 'wfu-lists',\n    ATTR_RICHTEXT_LIST_THEME = 'wfu-list-theme',\n\n    /**\n     * SA5 URL\n     */\n\n    ATTR_URL_RELATIVE_LINKS = 'wfu-relative-links',\n    ATTR_URL_EXTERNAL_LINKS = 'wfu-external-links',\n\n    /**\n     * SA5 UI\n     */\n\n    // Accordion\n    ATTR_UI_ACCORDION = 'wfu-ui-accordion',\n\n    // Rating\n    ATTR_RATING = 'wfu-rating', \n\n    // Github GIST\n    ATTR_GIST = 'wfu-gist',\n    ATTR_GIST_COPY = 'wfu-gist-copy',\n\n    /**\n     * SA5 Layout \n     */\n\n    ATTR_LAYOUT = 'wfu-layout', \n    ATTR_LAYOUT_HANDLER = 'wfu-layout-handler',\n    ATTR_LAYOUT_TARGET = 'wfu-layout-target',\n    ATTR_LAYOUT_ZONE = 'wfu-layout-zone',\n\n}", "\r\n/*\r\n * webflow-core\r\n * \r\n * Sygnal Technology Group\r\n * http://sygnal.com\r\n * \r\n * Debug Utilities\r\n */\r\n\r\n\r\n\r\nexport class Sa5Debug {\r\n    \r\n    private localStorageDebugFlag: string = 'sa5-debug';\r\n\r\n    private _enabled: boolean = false;\r\n    private _label: string;\r\n\r\n    // Get or set WFU persistent debug state\r\n    // which is stored in localStorage. \r\n    get persistentDebug(): boolean {\r\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \r\n    }\r\n    set persistentDebug(active: boolean) {\r\n        if (active) {\r\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\r\n            console.debug (\"sa5-core debug enabled (persistent).\");\r\n        } else {\r\n            localStorage.removeItem(this.localStorageDebugFlag); \r\n            console.debug (\"sa5-core debug disabled (persistent).\");\r\n        }\r\n    }\r\n\r\n    // Enable/disable debugging \r\n    get enabled(): boolean {\r\n\r\n        // localStorage is checked for a debug flag, to enable remote debug enabling \r\n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \r\n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \r\n\r\n        // Or this with the current debug state\r\n        // If either is enabled, debugging is on \r\n        wfuDebugValue = wfuDebugValue || this._enabled; \r\n\r\n        return wfuDebugValue;\r\n    }\r\n    set enabled(active: boolean) {\r\n        this._enabled = active;\r\n    }\r\n\r\n\r\n    // Initialize\r\n    constructor(label: string) {\r\n\r\n        // Save the label, for console logging\r\n        this._label = label;\r\n\r\n    }\r\n\r\n\r\n    // Start a console log group\r\n    group(name) {\r\n        if (this.enabled)\r\n            console.group(name);\r\n    }\r\n\r\n    // End a console log group\r\n    groupEnd() {\r\n        if (this.enabled)\r\n            console.groupEnd();\r\n    }\r\n\r\n    // Log debug data to the console\r\n    debug(...args: any[]): void {\r\n\r\n        if (this.enabled)\r\n            // Unlimited arguments in a JavaScript function\r\n            // https://stackoverflow.com/a/6396066\r\n            console.debug(this._label, ...args); \r\n            \r\n    }\r\n\r\n}\r\n\r\n\r\n", "\r\n/*\r\n * webflow-core\r\n * \r\n * Sygnal Technology Group\r\n * http://sygnal.com\r\n * \r\n * Designer Utilities\r\n */\r\n\r\nimport { Sa5Attribute } from \"../globals\";\r\n\r\n\r\n\r\nexport class Sa5Designer {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    init() {\r\n        this.removeDesignTimeElements();\r\n    }\r\n\r\n    // Remove any element tagged for design-time-only\r\n    // used typically for in-designer <style> elements\r\n    // in HTML Embeds. \r\n    removeDesignTimeElements() {\r\n\r\n// console.log(\"designer clean\"); \r\n\r\n        const elements: NodeListOf<HTMLElement> = document.querySelectorAll(\r\n            Sa5Attribute.getBracketed(Sa5Attribute.ATTR_DESIGN)\r\n            );\r\n\r\n        elements.forEach(element => {\r\n            element.remove();\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n// export interface Sa5Handler {\n//     [0]: string;\n//     [1]: Function;\n// }\n\n\nimport { Sa5Attribute } from './globals';\nimport { Sa5Debug } from './webflow-core/debug'\nimport { Sa5Designer } from './webflow-core/designer';\n\n/*\n * SA5 Core\n */\n\nexport class Sa5Core {\n\n    public handlers = [];\n\n    // Returns all handlers found by the specified name\n    getHandlers(name: string): Function[] {\n\n        return this.handlers.filter(item => item[0] === name)\n            .map(item => item[1]);\n    }\n\n    // Returns the first handler found by the specified name\n    getHandler(name: string): Function { \n\n        const item = this.handlers\n            .find(item => item[0] === name);\n        return item ? item[1] : undefined;\n    }\n\n    // Map for elements wired to Sa5 objects \n//    public elements: WeakMap<HTMLElement, object>;\n//     map.set(elem, myObject);\n\n// // Later, you can retrieve the object like this\n// let retrievedObject = map.get(elem);\n\n    constructor() {\n\n        // Remove any designer-only elements\n        (new Sa5Designer).init();    \n\n    }\n\n    init() {\n\n        this.initDebugMode();\n        this.initAsync();\n    }\n\n    async initAsync() {\n\n        this.initScriptInjectionsAsync(); \n\n    }\n\n    async initScriptInjectionsAsync() {\n\n// console.log(\"Sa5\", \"Script injections\"); \n\n        document.addEventListener('DOMContentLoaded', () => {\n\n            const loadSrcScripts = document.querySelectorAll<HTMLScriptElement>(\n                `script[${Sa5Attribute.ATTR_CORE_SCRIPT_INJECT}]`\n                );\n        \n            loadSrcScripts.forEach(script => {\n                const loadSrcUrl = script.getAttribute(Sa5Attribute.ATTR_CORE_SCRIPT_INJECT);\n                \n                if (loadSrcUrl) {\n                    fetch(loadSrcUrl)\n                        .then(response => response.text())\n                        .then(jsContent => {\n                            // Create a new script element and set its content\n                            const newScript = document.createElement('script');\n                            newScript.textContent = jsContent;\n        \n                            // Replace the current script tag with the new one\n                            script.replaceWith(newScript);\n                        })\n                        .catch(error => {\n                            console.error('Error loading script:', error);\n                        });\n                }\n            });\n        });\n        \n    }\n\n    // Auto-enable debug\n    // based on ?sa-debug=true querystring param\n    initDebugMode() {\n\n        const debugParamKey = 'debug'; // ?sa-debug=true\n\n//        var wfuDebugValue = Boolean(localStorage.setItem('wfuDebug', 'true')); \n\n        let params = new URLSearchParams(window.location.search);\n        let hasDebug = params.has(debugParamKey);\n\n        if (hasDebug) {\n            let wfuDebug = new Sa5Debug(`sa5 init`);\n            wfuDebug.persistentDebug = this.stringToBoolean(params.get(debugParamKey));\n        }\n\n    }\n\n    stringToBoolean(str: string): boolean {\n        const truthyValues: string[] = ['1', 'true', 'yes'];\n        const falsyValues: string[] = ['0', 'false', 'no'];\n      \n        if (truthyValues.indexOf(str.toLowerCase()) !== -1) {\n            return true;\n        // } else if (falsyValues.indexOf(str.toLowerCase()) !== -1) {\n        //     return false;\n        } else {\n            return false;\n        }\n    }\n\n    // Factory \n    // Get or create Sa5Core \n    static startup(module: any | null = null): Sa5Core {\n\n//        console.debug(\"sa5core\", \"startup\");\n\n//        console.debug(\"INITIALIZING SA5CORE\");\n//        console.log(window[\"sa5\"]);\n        \n        let sa5instance = window['sa5'];\n\n        var core: Sa5Core; // = new Sa5Core();\n\n        // Initialize Sa5Core if needed\n\n        if(sa5instance?.constructor?.name == \"Sa5Core\") {\n\n            core = sa5instance;\n\n        } else {\n\n    //         if(window[\"sa5\"])\n    // console.log(\"name\", window[\"sa5\"].name);\n\n            core = new Sa5Core();\n            core.init(); \n\n            // Absorb handlers\n            if(Array.isArray(sa5instance))\n                core.handlers = sa5instance; //window[\"sa5\"];\n\n            window[\"sa5\"] = core;\n            window[\"Sa5\"] = window[\"sa5\"];\n//            console.log(\"post\", window[\"sa5\"] instanceof Sa5Core);\n\n        } \n\n        // Add new module\n        //window[\"sa5\"] = window[\"sa5\"] || []; // {};\n        if (module) {\n\n//            console.debug(\"Registered module\", module.name); \n\n            window[\"sa5\"][module.name] = module;\n//            console.log(window[\"sa5\"][module.name]);\n        }\n\n        // instance.constructor.name\n\n        return core;\n    }\n\n    // Add new handlers\n    push(o) {\n        this.handlers.push(o);\n    }\n\n}\n\n\n// Complete initialization \n// even though we don't need it yet \nSa5Core.startup(); \n\n\n// Register\n//window[\"sa5\"] = window[\"sa5\"] || []; // {};\n//window[\"sa5\"][\"Sa5Core\"] = Sa5Core;\n", "\n/*\n * webflow-cache \n * Cache Utilities \n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Cache Utilities \n * An advanced utility for retriving and caching values online, for maximum performance.\n */\n\nimport { Sa5CacheItemTyped } from './webflow-cache/cache-item-typed';\nimport { Sa5CacheItem } from './webflow-cache/cache-item';\nimport { Sa5Core } from './webflow-core'\n\nimport { Sa5Debug } from './webflow-core/debug';\n\n\n//#region WfuCacheItem\n\nexport enum Sa5CacheStorageType {\n\n    sessionStorage,\n    localStorage,\n    cookies\n\n}\n\n\ninterface Sa5CacheConfig {\n\n    id: string, // Cache instance identifier\n    cacheKey: string, // Cache validation key \n// Future: expand into cacheUserKey (app) and a remote key indicating remote source changes\n// problem is that might need to be by item \n\n//    store: Sa5CacheStorageType;\n    prefix: string; \n//    val: {}; // as any { [key: string]: Sa5CacheItemBase };\n\n    debug: boolean;\n\n}\n\n\nvar defaultConfig: Sa5CacheConfig = {\n\n    id: 'cache',\n    cacheKey: null, \n\n    // sessionStorage | localStorage | cookies\n//    store: Sa5CacheStorageType.sessionStorage, // 'sessionStorage', // ONLY supported \n    prefix: 'cache', \n//    val: {}, // Cached values  \n//    val: {}, // as { [key: string]: Sa5CacheItemBase },\n    \n    debug: false, // Debugging mode\n  \n}\n\n\n// Controller\nexport class Sa5CacheController {\n\n    private items = new Map<string, Sa5CacheItemTyped<any>>();\n\n\n//    console = new WfuDebug(\"wfu-cache\");\n\n    config: Sa5CacheConfig; // Optional config\n    debug: Sa5Debug; \n \n    constructor(customConfig = {}) {\n\n        //        this.config = $.extend({}, defaultWfuCacheConfig, config);\n        this.config = { ...defaultConfig, ...customConfig };\n\n        // Enable debugging, if specified\n        this.debug = new Sa5Debug(\"sa5-cache\");\n        this.debug.enabled = this.config.debug; \n\n        // Verify cache is valid, if existing\n        // clear if not \n        if(this.config.cacheKey) {\n\n        }\n\n    }\n\n    cacheItemKey = function(itemName) {\n\n//        const CACHE_PREFIX = 'sa5-cache';\n\n        return `${this.config.prefix}_${itemName}`;\n    }\n\n\n    addItem(name: string, item: Sa5CacheItemTyped<any>) {\n\n        // Reference to controller\n        // supports cacheKey \n        item.controller = this;\n\n        this.items.set(name, item);\n    }\n\n    getItem<T>(name: string): Sa5CacheItemTyped<T> | undefined {\n\n        return this.items.get(name) as Sa5CacheItemTyped<T> | undefined;\n    }\n/*\n    async getAsync(itemName): Promise<string> {\n\n        this.debug.group(`getAsync - \"${itemName}\"`);\n        \n        var itemHandler: Sa5CacheItem = this.config.val[itemName];\n        this.debug.debug(\"valueHandler\", itemHandler);\n        \n        if(!itemHandler) {\n            console.error(\"Sa5\", `No cache item handler '${itemName}'`); \n        }\n\n        let returnValue = null;\n        switch(itemHandler.config.storageType) {\n\n            case Sa5CacheStorageType.localStorage:\n                returnValue = localStorage.getItem(\n                    this.cacheKey(itemName));\n                break;\n            case Sa5CacheStorageType.sessionStorage:\n                returnValue = sessionStorage.getItem(\n                    this.cacheKey(itemName));\n                this.debug.debug(\"cached? sessionStorage.getItem\", returnValue); \n                break;\n            case Sa5CacheStorageType.cookies:\n                break;\n            \n        }\n\n\n        // var returnValue = sessionStorage.getItem(\n        //     this.cacheKey(itemName));\n//        this.debug.debug(\"cached? sessionStorage.getItem\", returnValue); \n      \n        const that = this;\n\n        // Not cached\n        // go get this value \n        if (returnValue == null || returnValue == undefined) { \n            \n            // Call valueHandler function to calculate \n            returnValue = await itemHandler.config.updateFnAsync().then(r => {\n                sessionStorage.setItem(\n                    this.cacheKey(itemName), r);\n                that.debug.debug(\"sessionStorage.setItem\", itemName, r); \n                that.debug.debug(\"calculated\", r); \n                return r;\n                }); \n\n        }\n\n        this.debug.debug(\"returning\", returnValue); \n\n        this.debug.groupEnd();\n        return returnValue; \n    }\n*/\n    clearCache() {\n        // Iterate through items and clear() \n    }\n\n}\n\n//#endregion\n\n\n// Register\nSa5Core.startup(Sa5CacheController);\n\n// window[\"sa5\"] = window[\"sa5\"] || []; // {};\n// window[\"sa5\"][\"Sa5Cache\"] = Sa5Cache;\n\n\n\n\n", "\r\n/*\r\n * webflow-cache-item \r\n * Cache Utilities \r\n * \r\n * Sygnal Technology Group\r\n * http://sygnal.com\r\n * \r\n * Cache Utilities \r\n * An advanced utility for retriving and caching values online, for maximum performance.\r\n */\r\n\r\n\r\nimport { Sa5CacheController, Sa5CacheStorageType } from '../webflow-cache';\r\nimport { Sa5Debug } from '../webflow-core/debug';\r\n\r\n\r\n// Future:\r\n// Crypto items?\r\n// Typed items? \r\n\r\nexport interface Sa5CacheItemConfig {\r\n\r\n    name: string;\r\n\r\n//    store: string;\r\n    storageType: Sa5CacheStorageType,\r\n    storageExpiry: Date,\r\n\r\n    updateFnAsync: () => any; \r\n    \r\n    debug: boolean;\r\n\r\n}\r\n\r\n\r\nvar defaultConfig: Sa5CacheItemConfig = {\r\n\r\n    name: undefined, \r\n\r\n//    store: \"sessionStorage\", // | localStorage \r\n    storageType: Sa5CacheStorageType.sessionStorage,\r\n    storageExpiry: null,\r\n\r\n    updateFnAsync: undefined,   \r\n\r\n    debug: false, // Debugging mode\r\n\r\n}\r\n\r\n\r\n// String item\r\nexport class Sa5CacheItemTyped<T> {\r\n\r\n    config: Sa5CacheItemConfig; // Optional config\r\n    debug: Sa5Debug; \r\n \r\n    controller: Sa5CacheController;\r\n\r\n    constructor(customConfig = {}) {\r\n\r\n        this.debug = new Sa5Debug(\"sa5-cache-item\");\r\n\r\n        // Merge configs\r\n//        this.config = Object.assign({}, defaultConfig, customConfig);\r\n        this.config = { ...defaultConfig, ...customConfig };\r\n\r\n        // Enable debugging, if specified\r\n        this.debug.enabled = this.config.debug; \r\n\r\n    }\r\n\r\n    private getCookie(name: string): string | null {\r\n        const encodedName = encodeURIComponent(name);\r\n        const value = `; ${document.cookie}`;\r\n        const parts = value.split(`; ${encodedName}=`);\r\n        if (parts.length === 2) {\r\n            const cookieValue = parts.pop().split(';').shift();\r\n            return cookieValue ? decodeURIComponent(cookieValue) : null;\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    private setCookie(name: string, val: string) {\r\n        let cookieValue = `${encodeURIComponent(name)}=${encodeURIComponent(val)}`;\r\n    \r\n        if (this.config.storageExpiry) {\r\n            cookieValue += `;expires=${this.config.storageExpiry.toUTCString()}`;\r\n        }\r\n    \r\n        // Set the path for the cookie to be accessible across the entire site\r\n        cookieValue += `;path=/`;\r\n    \r\n        document.cookie = cookieValue;\r\n    }\r\n    \r\n    \r\n// TODO: nullable cache values ? \r\n\r\n    async getAsync(): Promise<T> {  \r\n\r\n        // Attempt to retrieve from cache\r\n        let val: T = await this.getAsyncFromCache();\r\n\r\n        // if (returnValue == null || returnValue == undefined) { \r\n        if(!val) {\r\n            val = await this.getAsyncFromSource();\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    async setAsync(val: T) {\r\n        this.setAsyncToCache(val); \r\n    }\r\n\r\n    protected async setAsyncToCache(val: T) {\r\n\r\n        switch(this.config.storageType) {\r\n\r\n            case Sa5CacheStorageType.localStorage:\r\n                localStorage.setItem(\r\n                    this.controller.cacheItemKey(this.config.name),\r\n                    JSON.stringify(val)\r\n                    );\r\n                break;\r\n            case Sa5CacheStorageType.sessionStorage:\r\n                sessionStorage.setItem(\r\n                    this.controller.cacheItemKey(this.config.name),\r\n                    JSON.stringify(val) \r\n                    );\r\n                break;\r\n            case Sa5CacheStorageType.cookies:\r\n                this.setCookie(\r\n                    this.controller.cacheItemKey(this.config.name), \r\n                    JSON.stringify(val)\r\n                    ); \r\n                this.config.storageExpiry\r\n                break;\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    protected async getAsyncFromCache(): Promise<T> {\r\n\r\n        let itemData: string = null;\r\n        switch(this.config.storageType) {\r\n\r\n            case Sa5CacheStorageType.localStorage:\r\n                itemData = localStorage.getItem(\r\n                    this.controller.cacheItemKey(this.config.name));\r\n                break;\r\n            case Sa5CacheStorageType.sessionStorage:\r\n                itemData = sessionStorage.getItem(\r\n                    this.controller.cacheItemKey(this.config.name));\r\n                this.debug.debug(\"cached? sessionStorage.getItem\", itemData); \r\n                break;\r\n            case Sa5CacheStorageType.cookies:\r\n                itemData = this.getCookie(\r\n                    this.controller.cacheItemKey(\r\n                        this.config.name)); \r\n                break;\r\n            \r\n        }\r\n\r\n        return JSON.parse(itemData) as T;\r\n    }\r\n\r\n    protected async getAsyncFromSource(): Promise<T> {\r\n\r\n        // Not cached\r\n        // go get this value \r\n            \r\n        // Call valueHandler function to calculate \r\n        return await this.config.updateFnAsync().then(r => {\r\n\r\n            this.setAsync(r);\r\n\r\n            this.debug.debug(\"sessionStorage.setItem\", this.config.name, r); \r\n            this.debug.debug(\"calculated\", r); \r\n\r\n            return r;\r\n        }); \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "\r\n\r\nexport type GeoHandlerInfo = {\r\n    ip: string;\r\n    country: string;\r\n    city: string;\r\n\r\n    //latitude\r\n    //longitude\r\n\r\n    region: string;\r\n    postal: string;\r\n    timezone: string;\r\n\r\n}\r\n\r\nexport abstract class GeoHandlerBase {\r\n\r\n    userInfoRaw: any;\r\n\r\n    token: string;\r\n\r\n    constructor(token: string = null) {\r\n        this.token = token;\r\n    }\r\n\r\n    get info(): GeoHandlerInfo {\r\n        return {\r\n            ip: this.userInfoRaw.ip,\r\n            country: this.userInfoRaw.countryCode,\r\n            city: null,\r\n            region: null,\r\n            postal: null,\r\n            timezone: null,\r\n        }\r\n    }\r\n\r\n    // Retrieve user info from a service\r\n    // then normalize it\r\n    async getInfoAsync(): Promise<any> {\r\n        \r\n    };\r\n\r\n}", "\r\n        // https://ipinfo.io/developers\r\n\r\nimport { GeoHandlerBase, GeoHandlerInfo } from \"./geo-handler-base\";\r\n\r\n//        const ipinfoWrapper = new IPinfoWrapper(IP_INFO_TOKEN);\r\n\r\n        // ipinfoWrapper.lookupIp(null).then((response: IPinfo) => {\r\n        //     console.log(response);\r\n        // });\r\n\r\n        // ipinfoWrapper.lookupIp(\"1.1.1.1\").then((response: IPinfo) => {\r\n        //     console.log(response);\r\n        // });\r\n        \r\n        // ipinfoWrapper.lookupASN(\"AS7922\").then((response: AsnResponse) => {\r\n        //     console.log(response);\r\n        // });\r\n\r\n//const IP_INFO_TOKEN = '37cce46c605631';\r\n\r\nexport class IPInfo extends GeoHandlerBase {\r\n\r\n\r\n\r\n    get info(): GeoHandlerInfo {\r\n        return {\r\n            ip: this.userInfoRaw.ip,\r\n            country: this.userInfoRaw.countryCode,\r\n            city: null,\r\n            region: null,\r\n            postal: null,\r\n            timezone: null,\r\n        }\r\n    }\r\n\r\n\r\n    constructor(token: string = null) {\r\n        super(token);\r\n    }\r\n\r\n    async getInfoAsync(): Promise<any> {\r\n\r\n        const request = await fetch(`https://ipinfo.io/json?token=${this.token}`); \r\n        this.userInfoRaw = await request.json()\r\n        \r\n\r\n\r\n        console.log(\r\n            this.userInfoRaw \r\n            ); \r\n\r\n        return this.userInfoRaw; \r\n\r\n    }\r\n\r\n}", "import { Sa5Detect } from \"../webflow-detect\";\r\n\r\n\r\n\r\nexport class Sa5RoutingRules {\r\n\r\n    rules: any[];\r\n    private detectController: Sa5Detect;\r\n\r\n    constructor(detectController: Sa5Detect) {\r\n        this.detectController = detectController;\r\n    }\r\n\r\n    load(rules: any[]) {\r\n\r\n        this.rules = rules;\r\n            \r\n        // Iterate through each item in the 'sa5_route' array\r\n        for (const rule of rules) {\r\n            // Check if the type is 'geo-country'\r\n\r\n            switch (rule.type) {\r\n                case 'geo-country': {\r\n\r\n                    this.detectController.countries = new Map(\r\n                        rule.route\r\n                    );\r\n\r\n                    // // Iterate through each route in the 'route' array\r\n                    // for (const [country, path] of item.route) {\r\n                    //     // Process each country and path\r\n                    //     console.log(`Country: ${country}, Path: ${path}`);\r\n                        \r\n                    //     // Add your conditional processing logic here\r\n                    // }\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/* \r\n\r\n    window['sa5_route'] = [{\r\n        type: 'geo-country',\r\n        path: '/',\r\n        route: [\r\n            [\"NZ\", \"/nz\"],\r\n            [\"AU\", \"/au\"],\r\n            [\"US\", \"/us\"],\r\n            [\"GB\", \"/gb\"],\r\n        ]\r\n    }]\r\n    \r\n    ,\r\n    {\r\n        type: 'geo-city',\r\n        route: [\r\n            [\"NZ\", \"/nz\"],\r\n            [\"AU\", \"/au\"],\r\n            [\"US\", \"/us\"],\r\n            [\"GB\", \"/gb\"],\r\n        ]\r\n    },\r\n    {\r\n        type: 'ua-browser',\r\n        route: [\r\n            [\"android\", \"/android\"],\r\n            [\"ios\", \"/ios\"],\r\n        ]\r\n    },\r\n];\r\n*/\r\n// Add onready like user data\r\n// Add data binding \r\n\r\n\r\n    // detect.countries.set(\"NZ\", \"/nz\");\r\n    // detect.countries.set(\"AU\", \"/au\");\r\n    // detect.countries.set(\"US\", \"/us\");\r\n    // detect.countries.set(\"GB\", \"/gb\");\r\n", "\n/**\n * SA5\n * webflow-detect\n * \n * Prototype project\n * https://detect-location.webflow.io/ \n * https://webflow.com/design/detect-location?pageId=64e82fd6ad1f15554ee84f49 \n */\n\n\n//import IPinfoWrapper, { IPinfo, AsnResponse } from \"node-ipinfo\";\n\nimport { Sa5CacheStorageType, Sa5CacheController } from \"./webflow-cache\";\nimport { Sa5CacheItem } from \"./webflow-cache/cache-item\";\nimport { Sa5CacheItemTyped } from \"./webflow-cache/cache-item-typed\";\nimport { GeoHandlerInfo } from \"./webflow-detect/geo-handlers/geo-handler-base\";\nimport { IPInfo } from \"./webflow-detect/geo-handlers/ip-info\";\nimport { Sa5RoutingRules } from \"./webflow-detect/routing-rules\";\n\ntype Zone = \"Asia\" | \"Europe\" | \"North America\" | \"South America\" | \"Africa\" | \"Oceania\" | \"Antarctica\";\n\nconst countryToContinent: Record<string, Zone> = {\n    \"CN\": \"Asia\",\n    \"JP\": \"Asia\",\n    \"IN\": \"Asia\",\n    // ... other Asian countries\n\n    \"FR\": \"Europe\",\n    \"DE\": \"Europe\",\n    \"GB\": \"Europe\",\n    // ... other European countries\n\n    \"US\": \"North America\",\n    \"CA\": \"North America\",\n    \"MX\": \"North America\",\n    // ... other North American countries\n\n    \"BR\": \"South America\",\n    \"AR\": \"South America\",\n    // ... other South American countries\n\n    \"ZA\": \"Africa\",\n    \"EG\": \"Africa\",\n    // ... other African countries\n\n    \"AU\": \"Oceania\",\n    \"NZ\": \"Oceania\",\n    // ... other Oceania countries\n\n    \"AQ\": \"Antarctica\"\n    // ... other countries\n};\n\ntype CountryPathMap = Map<string, string>;\n\nconst COOKIE_NAME = 'userInfo'; \n\nexport class Sa5Detect {\n\n    // Internal cache handler\n    private cache: Sa5CacheController;\n\n    routingRules: Sa5RoutingRules;\n\n    async userInfo(): Promise<GeoHandlerInfo> {\n\n        const info: GeoHandlerInfo = await this.cache.getItem(\"userInfo\").getAsync() as GeoHandlerInfo;\n\n        // if(!info)\n        //     return null;\n\n        // let userInfo: GeoHandlerInfo = JSON.parse(info);\n\n        return info;\n    }\n\n    // Map for redirection\n    countries: CountryPathMap = new Map([\n    ]);\n\n    constructor() {\n\n        this.routingRules = new Sa5RoutingRules(this); \n\n        // Expiry: 3 days \n        // BUG: ?? \n        const expiry = new Date();\n        expiry.setDate(expiry.getDate() + 3);\n\n        // Setup cached values\n        this.cache = new Sa5CacheController({\n            id: 'sa5-detect',\n            cacheKey: 'af92b71b-d0cf-4ad5-a06c-97327215af8a',\n            prefix: '_sa5'\n          });\n\n          this.cache.addItem(\n            \"userInfo\", // ref name \n            new Sa5CacheItemTyped<GeoHandlerInfo>({\n                name: \"userInfo\", // internal cookie name - can autogen  \n                storageType: Sa5CacheStorageType.cookies,\n                storageExpiry: expiry,\n                updateFnAsync: this.getUserInfoAsync   \n            }));\n\n    }\n\n    private async getUserInfoAsync(): Promise<GeoHandlerInfo> {\n\n        // 37cce46c605631\n        const IP_INFO_TOKEN = '37cce46c605631';\n        const ipInfo = new IPInfo(IP_INFO_TOKEN); \n\n        let rawInfo: any = await ipInfo.getInfoAsync();\n\n        const info: GeoHandlerInfo = {\n            ip: rawInfo.ip,\n            country: rawInfo.country,\n            city: rawInfo.city,\n            region: rawInfo.region,\n            postal: rawInfo.postal,\n            timezone: rawInfo.timezone,        \n        }\n\n        // const request = await fetch(`https://ipinfo.io/json?token=${IP_INFO_TOKEN}`); \n        // this.userInfo = await request.json()\n        \n        console.log(\n            info.ip, \n            info.country\n            ); \n\n        return info;\n    }\n    \n    detectGeographicZone() {\n\n        /*\n    const continent = countryToContinent[jsonResponse.country];\n    console.log(`The country ${jsonResponse.country} is in ${continent}.`);\n\n\n    // Usage\n    const currentCountry = jsonResponse.country;\n    if (isCountryInList(currentCountry)) {\n        console.log(`${currentCountry} is in the list.`);\n    } else {\n        console.log(`${currentCountry} is not in the list.`);\n    }\n    */\n    }\n\n    \n    // Function to check if a country is in the list\n    private isCountryInList(countryCode: string): boolean {\n        return this.countries.has(countryCode);\n    } \n\n    private getPathForCountry(countryCode: string): string | undefined {\n\nconsole.log(\"getPathForCountry\", countryCode);\nconsole.log(this.countries); \n\n        return this.countries.get(countryCode);\n    }\n\n    // Home should be \n\n    async applyDetectContextAsync() {\n\n//        console.log(this.countries);\n\n        let userInfo: GeoHandlerInfo = await this.cache.getItem<GeoHandlerInfo>(\"userInfo\").getAsync();\n\n//        console.log(\"APPLYING CONTEXT.\");\n\n  //      console.log(userInfo);\n\n        let path = this.getPathForCountry(userInfo.country);\n\n    //    console.log(\"path\", path); \n\n        /**\n         * Route via redirect, if appropriate \n         */\n\n        // Look for a matching rule, by path \n        for (const item of this.routingRules.rules) {\n\n    //        console.log(item.path, window.location.pathname)\n\n            // If path matches current location\n            // TODO: expand on this, make it optional\n            if (item.path === window.location.pathname) {\n\n                // Check if the type is 'geo-country'\n                if (item.type === 'geo-country') {\n                    // Iterate through each route in the 'route' array\n                    for (const [country, path] of item.route) {\n\n                        if (userInfo.country == country) \n\n                            // Redirect \n                            if (window.location.pathname != path)\n                                window.location.href = path;\n\n                        // Process each country and path \n//                        console.log(`Country: ${country}, Path: ${path}`);\n                        \n                        // Add your conditional processing logic here\n                    }\n                }\n\n            }\n        }\n\n        // if(path) {\n        //     if (window.location.pathname != path)\n        //         window.location.href = path;\n        // }\n\n        // Apply hide/show filter on elements \n\n        // Allow override context change on country\n\n    }\n\n}", "\r\n/*\r\n * webflow-detect\r\n * \r\n * Sygnal Technology Group\r\n * http://sygnal.com\r\n * \r\n * NO-CODE version, keys off of [wfu] attributes.\r\n * Place in HEAD, do not defer \r\n */\r\n\r\nimport { WebflowVideo } from '../webflow-video';\r\nimport { Sa5Core } from '../webflow-core'; \r\nimport { Sa5Debug } from '../webflow-core/debug';\r\nimport { Sa5VideoPlayerFactory } from '../webflow-video/player-factory';\r\nimport { Sa5Attribute, Sa5GlobalVar } from '../globals';\r\nimport { Sa5Detect } from '../webflow-detect';\r\n\r\n// type VideoTimeUpdateCallback = (name: string, time: number, totalTime: number, percent: number) => void;\r\n\r\n\r\n\r\n\r\n\r\n// Region (Abbreviation: Reg.)\r\n// Zone (Abbreviation: Zn.)\r\n// Bloc (Often used in terms like \"trade bloc\" or \"economic bloc\")\r\n// Cluster (Abbreviation: Cl.)\r\n// Grouping (Abbreviation: Grp.)\r\n// Assembly (Abbreviation: Asm.)\r\n// Alliance (Often used in political or military contexts)\r\n// Federation (Abbreviation: Fed.)\r\n// Union (Abbreviation: Un.)\r\n// Sector (Abbreviation: Sec.)\r\n\r\n\r\n// Run IIFE immediately \r\n(async() => {\r\n\r\n    console.log(\"DETECT\");  \r\n\r\n    let core: Sa5Core = Sa5Core.startup();\r\n\r\n    // Initialize debugging\r\n    let debug = new Sa5Debug(\"sa5-detect\");\r\n    debug.debug (\"Initializing\");\r\n\r\n    /**\r\n     * Get IP Info, GeoLocation \r\n     */\r\n\r\n    // Usage\r\n    let detect = new Sa5Detect(); \r\n\r\n    // Process Rules \r\n    let routingRules = window[Sa5GlobalVar.GLOBAL_ROUTE]; \r\n\r\n    if (routingRules)\r\n        detect.routingRules.load(routingRules);\r\n\r\n\r\n    await detect.applyDetectContextAsync(); \r\n\r\n})();\r\n\r\nconst init = async() => { \r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", init); "],
  "mappings": "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",
  "names": ["Sa5Attribute", "item", "defaultConfig", "path"]
}
