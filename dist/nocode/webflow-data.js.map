{
  "version": 3,
  "sources": ["../../src/webflow-core/debug.ts", "../../src/webflow-core.ts", "../../src/webflow-data/webflow-collectionlist-data.ts", "../../src/modules/webflow-data-csv.js", "../../src/modules/webflow-html.js", "../../src/modules/webflow-data.js", "../../src/webflow-data/google-sheet-data.ts", "../../src/webflow-data/database.ts", "../../src/webflow-data/sa5-data.ts", "../../src/webflow-data.ts", "../../src/utils.ts", "../../src/webflow-crypto.ts", "../../src/webflow-membership/user.ts", "../../src/webflow-membership.ts", "../../src/webflow-databind/template/default-template-handler.ts", "../../src/webflow-databind.ts", "../../src/nocode/webflow-data.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Debug Utilities\n */\n\n\n\nexport class Sa5Debug {\n    \n    private localStorageDebugFlag: string = 'sa5-debug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"sa5-core debug enabled (persistent).\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"sa5-core debug disabled (persistent).\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n// export interface Sa5Handler {\n//     [0]: string;\n//     [1]: Function;\n// }\n\n\n// import { HtmlBuilder } from './modules/webflow-html-builder';\nimport { Sa5Debug } from './webflow-core/debug'\n\n/*\n * Debugging class.\n */\n\nexport class Sa5Core {\n\n    // let sa5: [string, Function][] = window.sa5 || [];\n    public handlers = [];\n\n    getHandlers(name: string): Function[] {\n\n        return this.handlers.filter(item => item[0] === name)\n            .map(item => item[1]);\n\n//        return null;\n    }\n\n    getHandler(name: string): Function | undefined {\n        const item = this.handlers\n            .find(item => item[0] === name);\n        return item ? item[1] : undefined;\n    }\n\n    // Map for elements wired to Sa5 objects \n//    public elements: WeakMap<HTMLElement, object>;\n//     map.set(elem, myObject);\n\n// // Later, you can retrieve the object like this\n// let retrievedObject = map.get(elem);\n\n    constructor() {\n//        this.elements = new WeakMap<HTMLElement, object>();\n    }\n\n    init() {\n\n        this.initDebugMode();\n\n    }\n\n    // Auto-enable debug\n    // based on ?sa-debug=true querystring param\n    initDebugMode() {\n\n        const debugParamKey = 'debug'; // ?sa-debug=true\n\n//        var wfuDebugValue = Boolean(localStorage.setItem('wfuDebug', 'true')); \n\n        let params = new URLSearchParams(window.location.search);\n        let hasDebug = params.has(debugParamKey);\n\n        if (hasDebug) {\n            let wfuDebug = new Sa5Debug(`sa5 init`);\n            wfuDebug.persistentDebug = this.stringToBoolean(params.get(debugParamKey));\n        }\n\n    }\n\n    stringToBoolean(str: string): boolean {\n        const truthyValues: string[] = ['1', 'true', 'yes'];\n        const falsyValues: string[] = ['0', 'false', 'no'];\n      \n        if (truthyValues.indexOf(str.toLowerCase()) !== -1) {\n            return true;\n        // } else if (falsyValues.indexOf(str.toLowerCase()) !== -1) {\n        //     return false;\n        } else {\n            return false;\n        }\n    }\n\n    // Factory \n    // Get or create Sa5Core \n    static startup(module: any | null = null): Sa5Core {\n\n//        console.debug(\"sa5core\", \"startup\");\n\n//        console.debug(\"INITIALIZING SA5CORE\");\n//        console.log(window[\"sa5\"]);\n        \n        let sa5instance = window['sa5'];\n\n        var core: Sa5Core; // = new Sa5Core();\n\n        // Initialize Sa5Core if needed\n\n        if(sa5instance?.constructor?.name == \"Sa5Core\") {\n\n            core = sa5instance;\n\n        } else {\n\n    //         if(window[\"sa5\"])\n    // console.log(\"name\", window[\"sa5\"].name);\n\n            core = new Sa5Core();\n\n            // Absorb handlers\n            if(Array.isArray(sa5instance))\n                core.handlers = sa5instance; //window[\"sa5\"];\n\n            window[\"sa5\"] = core;\n            window[\"Sa5\"] = window[\"sa5\"];\n//            console.log(\"post\", window[\"sa5\"] instanceof Sa5Core);\n\n        } \n\n        // Add new module\n        //window[\"sa5\"] = window[\"sa5\"] || []; // {};\n        if (module) {\n\n//            console.debug(\"Registered module\", module.name); \n\n            window[\"sa5\"][module.name] = module;\n//            console.log(window[\"sa5\"][module.name]);\n        }\n\n        // instance.constructor.name\n\n        return core;\n    }\n\n    // Add new handlers\n    push(o) {\n        this.handlers.push(o);\n    }\n\n}\n\n\n// Complete initialization \n// even though we don't need it yet \nSa5Core.startup(); \n\n\n// Register\n//window[\"sa5\"] = window[\"sa5\"] || []; // {};\n//window[\"sa5\"][\"Sa5Core\"] = Sa5Core;\n", "\n/*\n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Creates a data source from a Webflow Collection list.\n */\n\n// import { Database } from '../modules/webflow-data.js';\n\n\nexport const prepareCollectionListDataSource = (dataSource: Element) => {\n    // Aggregate JSON Data\n    let data = dataSource.querySelectorAll('script');\n    console.log(`items = ${data.length}`);\n\n    let items: string[] = []; // place to store the pairs\n    data.forEach((elem) => { //loop over the keys\n        items.push(elem.textContent || \"\");\n    })\n\n    let json = '[' + items.join() + ']';\n\n    return JSON.parse(json);\n}\n\n\n", "\n// Sygnal Technology Group\n// http://sygnal.com\n\n/* ESM adapted from\n * jQuery-csv (jQuery Plugin) by Evan Plaice\n * \n * - jQuery use removed\n * - redesigned as an ESM\n * \n * Original jQuery source notices;\n *\n * This document is licensed as free software under the terms of the\n * MIT License: http://www.opensource.org/licenses/mit-license.php\n *\n * Acknowledgements:\n * The original design and influence to implement this library as a jquery\n * plugin is influenced by jquery-json (http://code.google.com/p/jquery-json/).\n * If you're looking to use native JSON.Stringify but want additional backwards\n * compatibility for browsers that don't support it, I highly recommend you\n * check it out.\n *\n * A special thanks goes out to rwk@acm.org for providing a lot of valuable\n * feedback to the project including the core for the new FSM\n * (Finite State Machine) parsers. If you're looking for a stable TSV parser\n * be sure to take a look at jquery-tsv (http://code.google.com/p/jquery-tsv/).\n\n * For legal purposes I'll include the \"NO WARRANTY EXPRESSED OR IMPLIED.\n * USE AT YOUR OWN RISK.\". Which, in 'layman's terms' means, by using this\n * library you are accepting responsibility if it breaks your code.\n *\n * Original jQuery version copyrighted 2012 by Evan Plaice.\n */\n\nRegExp.escape = function (s) {\n    return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n};\n\nvar defaults = {\n    separator: ',',\n    delimiter: '\"',\n    headers: true\n};\n\nvar castToScalar = function (value, state) {\n    const hasDot = /\\./\n    if (isNaN(value)) {\n        return value\n    } else {\n        if (hasDot.test(value)) {\n            return parseFloat(value)\n        } else {\n            const integer = parseInt(value)\n            if (isNaN(integer)) {\n                return null\n            } else {\n                return integer\n            }\n        }\n    }\n}\n\nvar parse = function (csv, options) {\n    // cache settings\n    const separator = options.separator\n    const delimiter = options.delimiter\n\n    // set initial state if it's missing\n    if (!options.state.rowNum) {\n        options.state.rowNum = 1\n    }\n    if (!options.state.colNum) {\n        options.state.colNum = 1\n    }\n\n    // clear initial state\n    const data = []\n    let entry = []\n    let state = 0\n    let value = ''\n    let exit = false\n\n    function endOfEntry() {\n        // reset the state\n        state = 0\n        value = ''\n\n        // if 'start' hasn't been met, don't output\n        if (options.start && options.state.rowNum < options.start) {\n            // update global state\n            entry = []\n            options.state.rowNum++\n            options.state.colNum = 1\n            return\n        }\n\n        if (options.onParseEntry === undefined) {\n            // onParseEntry hook not set\n            data.push(entry)\n        } else {\n            const hookVal = options.onParseEntry(entry, options.state) // onParseEntry Hook\n            // false skips the row, configurable through a hook\n            if (hookVal !== false) {\n                data.push(hookVal)\n            }\n        }\n        // console.log('entry:' + entry);\n\n        // cleanup\n        entry = []\n\n        // if 'end' is met, stop parsing\n        if (options.end && options.state.rowNum >= options.end) {\n            exit = true\n        }\n\n        // update global state\n        options.state.rowNum++\n        options.state.colNum = 1\n    }\n\n    function endOfValue() {\n        if (options.onParseValue === undefined) {\n            // onParseValue hook not set\n            entry.push(value)\n        } else if (options.headers && options.state.rowNum === 1) {\n            // don't onParseValue object headers\n            entry.push(value)\n        } else {\n            const hook = options.onParseValue(value, options.state) // onParseValue Hook\n            // false skips the row, configurable through a hook\n            if (hook !== false) {\n                entry.push(hook)\n            }\n        }\n        // console.log('value:' + value);\n        // reset the state\n        value = ''\n        state = 0\n        // update global state\n        options.state.colNum++\n    }\n\n    // escape regex-specific control chars\n    const escSeparator = RegExp.escape(separator)\n    const escDelimiter = RegExp.escape(delimiter)\n\n    // compile the regEx str using the custom delimiter/separator\n    let match = /(D|S|\\r\\n|\\n|\\r|[^DS\\r\\n]+)/\n    let matchSrc = match.source\n    matchSrc = matchSrc.replace(/S/g, escSeparator)\n    matchSrc = matchSrc.replace(/D/g, escDelimiter)\n    match = new RegExp(matchSrc, 'gm')\n\n    // put on your fancy pants...\n    // process control chars individually, use look-ahead on non-control chars\n    csv.replace(match, function (m0) {\n        if (exit) {\n            return\n        }\n        switch (state) {\n            // the start of a value\n            case 0:\n                // null last value\n                if (m0 === separator) {\n                    value += ''\n                    endOfValue()\n                    break\n                }\n                // opening delimiter\n                if (m0 === delimiter) {\n                    state = 1\n                    break\n                }\n                // null last value\n                if (/^(\\r\\n|\\n|\\r)$/.test(m0)) {\n                    endOfValue()\n                    endOfEntry()\n                    break\n                }\n                // un-delimited value\n                value += m0\n                state = 3\n                break\n\n            // delimited input\n            case 1:\n                // second delimiter? check further\n                if (m0 === delimiter) {\n                    state = 2\n                    break\n                }\n                // delimited data\n                value += m0\n                state = 1\n                break\n\n            // delimiter found in delimited input\n            case 2:\n                // escaped delimiter?\n                if (m0 === delimiter) {\n                    value += m0\n                    state = 1\n                    break\n                }\n                // null value\n                if (m0 === separator) {\n                    endOfValue()\n                    break\n                }\n                // end of entry\n                if (/^(\\r\\n|\\n|\\r)$/.test(m0)) {\n                    endOfValue()\n                    endOfEntry()\n                    break\n                }\n                // broken paser?\n                throw Error('CSVDataError: Illegal State [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']')\n\n            // un-delimited input\n            case 3:\n                // null last value\n                if (m0 === separator) {\n                    endOfValue()\n                    break\n                }\n                // end of entry\n                if (/^(\\r\\n|\\n|\\r)$/.test(m0)) {\n                    endOfValue()\n                    endOfEntry()\n                    break\n                }\n                if (m0 === delimiter) {\n                    // non-compliant data\n                    throw Error('CSVDataError: Illegal Quote [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']')\n                }\n                // broken parser?\n                throw Error('CSVDataError: Illegal Data [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']')\n            default:\n                // shenanigans\n                throw Error('CSVDataError: Unknown State [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']')\n        }\n        // console.log('val:' + m0 + ' state:' + state);\n    })\n\n    // submit the last entry\n    // ignore null last line\n    if (entry.length !== 0) {\n        endOfValue()\n        endOfEntry()\n    }\n\n    return data\n}\n\n// a csv-specific line splitter\nvar splitLines = function (csv, options) {\n    if (!csv) {\n        return undefined\n    }\n\n    options = options || {}\n\n    // cache settings\n    const separator = options.separator || $.csv.defaults.separator\n    const delimiter = options.delimiter || $.csv.defaults.delimiter\n\n    // set initial state if it's missing\n    options.state = options.state || {}\n    if (!options.state.rowNum) {\n        options.state.rowNum = 1\n    }\n\n    // clear initial state\n    const entries = []\n    let state = 0\n    let entry = ''\n    let exit = false\n\n    function endOfLine() {\n        // reset the state\n        state = 0\n\n        // if 'start' hasn't been met, don't output\n        if (options.start && options.state.rowNum < options.start) {\n            // update global state\n            entry = ''\n            options.state.rowNum++\n            return\n        }\n\n        if (options.onParseEntry === undefined) {\n            // onParseEntry hook not set\n            entries.push(entry)\n        } else {\n            const hookVal = options.onParseEntry(entry, options.state) // onParseEntry Hook\n            // false skips the row, configurable through a hook\n            if (hookVal !== false) {\n                entries.push(hookVal)\n            }\n        }\n\n        // cleanup\n        entry = ''\n\n        // if 'end' is met, stop parsing\n        if (options.end && options.state.rowNum >= options.end) {\n            exit = true\n        }\n\n        // update global state\n        options.state.rowNum++\n    }\n\n    // escape regex-specific control chars\n    const escSeparator = RegExp.escape(separator)\n    const escDelimiter = RegExp.escape(delimiter)\n\n    // compile the regEx str using the custom delimiter/separator\n    let match = /(D|S|\\n|\\r|[^DS\\r\\n]+)/\n    let matchSrc = match.source\n    matchSrc = matchSrc.replace(/S/g, escSeparator)\n    matchSrc = matchSrc.replace(/D/g, escDelimiter)\n    match = new RegExp(matchSrc, 'gm')\n\n    // put on your fancy pants...\n    // process control chars individually, use look-ahead on non-control chars\n    csv.replace(match, function (m0) {\n        if (exit) {\n            return\n        }\n        switch (state) {\n            // the start of a value/entry\n            case 0:\n                // null value\n                if (m0 === separator) {\n                    entry += m0\n                    state = 0\n                    break\n                }\n                // opening delimiter\n                if (m0 === delimiter) {\n                    entry += m0\n                    state = 1\n                    break\n                }\n                // end of line\n                if (m0 === '\\n') {\n                    endOfLine()\n                    break\n                }\n                // phantom carriage return\n                if (/^\\r$/.test(m0)) {\n                    break\n                }\n                // un-delimit value\n                entry += m0\n                state = 3\n                break\n\n            // delimited input\n            case 1:\n                // second delimiter? check further\n                if (m0 === delimiter) {\n                    entry += m0\n                    state = 2\n                    break\n                }\n                // delimited data\n                entry += m0\n                state = 1\n                break\n\n            // delimiter found in delimited input\n            case 2: {\n                // escaped delimiter?\n                const prevChar = entry.substr(entry.length - 1)\n                if (m0 === delimiter && prevChar === delimiter) {\n                    entry += m0\n                    state = 1\n                    break\n                }\n                // end of value\n                if (m0 === separator) {\n                    entry += m0\n                    state = 0\n                    break\n                }\n                // end of line\n                if (m0 === '\\n') {\n                    endOfLine()\n                    break\n                }\n                // phantom carriage return\n                if (m0 === '\\r') {\n                    break\n                }\n                // broken paser?\n                throw Error('CSVDataError: Illegal state [Row:' + options.state.rowNum + ']')\n            }\n            // un-delimited input\n            case 3:\n                // null value\n                if (m0 === separator) {\n                    entry += m0\n                    state = 0\n                    break\n                }\n                // end of line\n                if (m0 === '\\n') {\n                    endOfLine()\n                    break\n                }\n                // phantom carriage return\n                if (m0 === '\\r') {\n                    break\n                }\n                // non-compliant data\n                if (m0 === delimiter) {\n                    throw Error('CSVDataError: Illegal quote [Row:' + options.state.rowNum + ']')\n                }\n                // broken parser?\n                throw Error('CSVDataError: Illegal state [Row:' + options.state.rowNum + ']')\n            default:\n                // shenanigans\n                throw Error('CSVDataError: Unknown state [Row:' + options.state.rowNum + ']')\n        }\n        // console.log('val:' + m0 + ' state:' + state);\n    })\n\n    // submit the last entry\n    // ignore null last line\n    if (entry !== '') {\n        endOfLine()\n    }\n\n    return entries\n}\n\n// a csv entry parser\nvar parseEntry = function (csv, options) {\n    // cache settings\n    const separator = options.separator\n    const delimiter = options.delimiter\n\n    // set initial state if it's missing\n    if (!options.state.rowNum) {\n        options.state.rowNum = 1\n    }\n    if (!options.state.colNum) {\n        options.state.colNum = 1\n    }\n\n    // clear initial state\n    const entry = []\n    let state = 0\n    let value = ''\n\n    function endOfValue() {\n        if (options.onParseValue === undefined) {\n            // onParseValue hook not set\n            entry.push(value)\n        } else {\n            const hook = options.onParseValue(value, options.state) // onParseValue Hook\n            // false skips the value, configurable through a hook\n            if (hook !== false) {\n                entry.push(hook)\n            }\n        }\n        // reset the state\n        value = ''\n        state = 0\n        // update global state\n        options.state.colNum++\n    }\n\n    // checked for a cached regEx first\n    if (!options.match) {\n        // escape regex-specific control chars\n        const escSeparator = RegExp.escape(separator)\n        const escDelimiter = RegExp.escape(delimiter)\n\n        // compile the regEx str using the custom delimiter/separator\n        const match = /(D|S|\\n|\\r|[^DS\\r\\n]+)/\n        let matchSrc = match.source\n        matchSrc = matchSrc.replace(/S/g, escSeparator)\n        matchSrc = matchSrc.replace(/D/g, escDelimiter)\n        options.match = new RegExp(matchSrc, 'gm')\n    }\n\n    // put on your fancy pants...\n    // process control chars individually, use look-ahead on non-control chars\n    csv.replace(options.match, function (m0) {\n        switch (state) {\n            // the start of a value\n            case 0:\n                // null last value\n                if (m0 === separator) {\n                    value += ''\n                    endOfValue()\n                    break\n                }\n                // opening delimiter\n                if (m0 === delimiter) {\n                    state = 1\n                    break\n                }\n                // skip un-delimited new-lines\n                if (m0 === '\\n' || m0 === '\\r') {\n                    break\n                }\n                // un-delimited value\n                value += m0\n                state = 3\n                break\n\n            // delimited input\n            case 1:\n                // second delimiter? check further\n                if (m0 === delimiter) {\n                    state = 2\n                    break\n                }\n                // delimited data\n                value += m0\n                state = 1\n                break\n\n            // delimiter found in delimited input\n            case 2:\n                // escaped delimiter?\n                if (m0 === delimiter) {\n                    value += m0\n                    state = 1\n                    break\n                }\n                // null value\n                if (m0 === separator) {\n                    endOfValue()\n                    break\n                }\n                // skip un-delimited new-lines\n                if (m0 === '\\n' || m0 === '\\r') {\n                    break\n                }\n                // broken paser?\n                throw Error('CSVDataError: Illegal State [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']')\n\n            // un-delimited input\n            case 3:\n                // null last value\n                if (m0 === separator) {\n                    endOfValue()\n                    break\n                }\n                // skip un-delimited new-lines\n                if (m0 === '\\n' || m0 === '\\r') {\n                    break\n                }\n                // non-compliant data\n                if (m0 === delimiter) {\n                    throw Error('CSVDataError: Illegal Quote [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']')\n                }\n                // broken parser?\n                throw Error('CSVDataError: Illegal Data [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']')\n            default:\n                // shenanigans\n                throw Error('CSVDataError: Unknown State [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']')\n        }\n        // console.log('val:' + m0 + ' state:' + state);\n    })\n\n    // submit the last value\n    endOfValue()\n\n    return entry\n}\n\n/**\n* $.csv.helpers.collectPropertyNames(objectsArray)\n* Collects all unique property names from all passed objects.\n*\n* @param {Array} objects Objects to collect properties from.\n*\n* Returns an array of property names (array will be empty,\n* if objects have no own properties).\n*/\nvar collectPropertyNames = function (objects) {\n    let o = []\n    let propName = []\n    const props = []\n    for (o in objects) {\n        for (propName in objects[o]) {\n            if ((objects[o].hasOwnProperty(propName)) &&\n                (props.indexOf(propName) < 0) &&\n                (typeof objects[o][propName] !== 'function')) {\n                props.push(propName)\n            }\n        }\n    }\n    return props\n}\n\n/**\n* $.csv.toArray(csv)\n* Converts a CSV entry string to a javascript array.\n*\n* @param {Array} csv The string containing the CSV data.\n* @param {Object} [options] An object containing user-defined options.\n* @param {Character} [separator] An override for the separator character. Defaults to a comma(,).\n* @param {Character} [delimiter] An override for the delimiter character. Defaults to a double-quote(\").\n*\n* This method deals with simple CSV strings only. It's useful if you only\n* need to parse a single entry. If you need to parse more than one line,\n* use $.csv2Array instead.\n*/\nvar toArray = function (csv, options, callback) {\n    // if callback was passed to options swap callback with options\n    if (options !== undefined && typeof (options) === 'function') {\n        if (callback !== undefined) {\n            return console.error('You cannot 3 arguments with the 2nd argument being a function')\n        }\n        callback = options\n        options = {}\n    }\n\n    options = (options !== undefined ? options : {})\n    const config = {}\n    config.callback = ((callback !== undefined && typeof (callback) === 'function') ? callback : false)\n    config.separator = 'separator' in options ? options.separator : defaults.separator\n    config.delimiter = 'delimiter' in options ? options.delimiter : defaults.delimiter\n    const state = (options.state !== undefined ? options.state : {})\n\n    // setup\n    options = {\n        delimiter: config.delimiter,\n        separator: config.separator,\n        onParseEntry: options.onParseEntry,\n        onParseValue: options.onParseValue,\n        state: state\n    }\n\n    const entry = parseEntry(csv, options)\n\n    // push the value to a callback if one is defined\n    if (!config.callback) {\n        return entry\n    } else {\n        config.callback('', entry)\n    }\n}\n\n/**\n* $.csv.toArrays(csv)\n* Converts a CSV string to a javascript array.\n*\n* @param {String} csv The string containing the raw CSV data.\n* @param {Object} [options] An object containing user-defined options.\n* @param {Character} [separator] An override for the separator character. Defaults to a comma(,).\n* @param {Character} [delimiter] An override for the delimiter character. Defaults to a double-quote(\").\n*\n* This method deals with multi-line CSV. The breakdown is simple. The first\n* dimension of the array represents the line (or entry/row) while the second\n* dimension contains the values (or values/columns).\n*/\nvar toArrays = function (csv, options, callback) {\n    // if callback was passed to options swap callback with options\n    if (options !== undefined && typeof (options) === 'function') {\n        if (callback !== undefined) {\n            return console.error('You cannot 3 arguments with the 2nd argument being a function')\n        }\n        callback = options\n        options = {}\n    }\n\n    options = (options !== undefined ? options : {})\n    const config = {}\n    config.callback = ((callback !== undefined && typeof (callback) === 'function') ? callback : false)\n    config.separator = 'separator' in options ? options.separator : $.csv.defaults.separator\n    config.delimiter = 'delimiter' in options ? options.delimiter : $.csv.defaults.delimiter\n\n    // setup\n    let data = []\n    options = {\n        delimiter: config.delimiter,\n        separator: config.separator,\n        onPreParse: options.onPreParse,\n        onParseEntry: options.onParseEntry,\n        onParseValue: options.onParseValue,\n        onPostParse: options.onPostParse,\n        start: options.start,\n        end: options.end,\n        state: {\n            rowNum: 1,\n            colNum: 1\n        }\n    }\n\n    // onPreParse hook\n    if (options.onPreParse !== undefined) {\n        csv = options.onPreParse(csv, options.state)\n    }\n\n    // parse the data\n    data = $.csv.parsers.parse(csv, options)\n\n    // onPostParse hook\n    if (options.onPostParse !== undefined) {\n        data = options.onPostParse(data, options.state)\n    }\n\n    // push the value to a callback if one is defined\n    if (!config.callback) {\n        return data\n    } else {\n        config.callback('', data)\n    }\n}\n\n/**\n* $.csv.toObjects(csv)\n* Converts a CSV string to a javascript object.\n* @param {String} csv The string containing the raw CSV data.\n* @param {Object} [options] An object containing user-defined options.\n* @param {Character} [separator] An override for the separator character. Defaults to a comma(,).\n* @param {Character} [delimiter] An override for the delimiter character. Defaults to a double-quote(\").\n* @param {Boolean} [headers] Indicates whether the data contains a header line. Defaults to true.\n*\n* This method deals with multi-line CSV strings. Where the headers line is\n* used as the key for each value per entry.\n*/\nexport var csvToObjects = function (csv, options, callback) {\n    // if callback was passed to options swap callback with options\n    if (options !== undefined && typeof (options) === 'function') {\n        if (callback !== undefined) {\n            return console.error('You cannot 3 arguments with the 2nd argument being a function')\n        }\n        callback = options\n        options = {}\n    }\n\n    options = (options !== undefined ? options : {})\n    const config = {}\n    config.callback = ((callback !== undefined && typeof (callback) === 'function') ? callback : false)\n    config.separator = 'separator' in options ? options.separator : defaults.separator\n    config.delimiter = 'delimiter' in options ? options.delimiter : defaults.delimiter\n    config.headers = 'headers' in options ? options.headers : defaults.headers\n    options.start = 'start' in options ? options.start : 1\n\n    // account for headers\n    if (config.headers) {\n        options.start++\n    }\n    if (options.end && config.headers) {\n        options.end++\n    }\n\n    // setup\n    let lines = []\n    let data = []\n\n    options = {\n        delimiter: config.delimiter,\n        separator: config.separator,\n        onPreParse: options.onPreParse,\n        onParseEntry: options.onParseEntry,\n        onParseValue: options.onParseValue,\n        onPostParse: options.onPostParse,\n        start: options.start,\n        end: options.end,\n        state: {\n            rowNum: 1,\n            colNum: 1\n        },\n        match: false,\n        transform: options.transform\n    }\n\n    // fetch the headers\n    const headerOptions = {\n        delimiter: config.delimiter,\n        separator: config.separator,\n        start: 1,\n        end: 1,\n        state: {\n            rowNum: 1,\n            colNum: 1\n        },\n        headers: true\n    }\n\n    // onPreParse hook\n    if (options.onPreParse !== undefined) {\n        csv = options.onPreParse(csv, options.state)\n    }\n\n    // parse the csv\n    const headerLine = splitLines(csv, headerOptions)\n    const headers = toArray(headerLine[0], headerOptions)\n\n    // fetch the data\n    lines = splitLines(csv, options)\n\n    // reset the state for re-use\n    options.state.colNum = 1\n    if (headers) {\n        options.state.rowNum = 2\n    } else {\n        options.state.rowNum = 1\n    }\n\n    // convert data to objects\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const entry = toArray(lines[i], options)\n        const object = {}\n        for (let j = 0; j < headers.length; j++) {\n            object[headers[j]] = entry[j]\n        }\n        if (options.transform !== undefined) {\n            data.push(options.transform.call(undefined, object))\n        } else {\n            data.push(object)\n        }\n\n        // update row state\n        options.state.rowNum++\n    }\n\n    // onPostParse hook\n    if (options.onPostParse !== undefined) {\n        data = options.onPostParse(data, options.state)\n    }\n\n    // push the value to a callback if one is defined\n    if (!config.callback) {\n        return data\n    } else {\n        config.callback('', data)\n    }\n};\n\n/**\n* $.csv.fromArrays(arrays)\n* Converts a javascript array to a CSV String.\n*\n* @param {Array} arrays An array containing an array of CSV entries.\n* @param {Object} [options] An object containing user-defined options.\n* @param {Character} [separator] An override for the separator character. Defaults to a comma(,).\n* @param {Character} [delimiter] An override for the delimiter character. Defaults to a double-quote(\").\n*\n* This method generates a CSV file from an array of arrays (representing entries).\n*/\nvar fromArrays = function (arrays, options, callback) {\n    // if callback was passed to options swap callback with options\n    if (options !== undefined && typeof (options) === 'function') {\n        if (callback !== undefined) {\n            return console.error('You cannot 3 arguments with the 2nd argument being a function')\n        }\n        callback = options\n        options = {}\n    }\n\n    options = (options !== undefined ? options : {})\n    const config = {}\n    config.callback = ((callback !== undefined && typeof (callback) === 'function') ? callback : false)\n    config.separator = 'separator' in options ? options.separator : $.csv.defaults.separator\n    config.delimiter = 'delimiter' in options ? options.delimiter : $.csv.defaults.delimiter\n\n    let output = ''\n\n    for (let i = 0; i < arrays.length; i++) {\n        const line = arrays[i]\n        const lineValues = []\n        for (let j = 0; j < line.length; j++) {\n            let strValue = (line[j] === undefined || line[j] === null) ? '' : line[j].toString()\n            if (strValue.indexOf(config.delimiter) > -1) {\n                strValue = strValue.replace(new RegExp(config.delimiter, 'g'), config.delimiter + config.delimiter)\n            }\n\n            let escMatcher = '\\n|\\r|S|D'\n            escMatcher = escMatcher.replace('S', config.separator)\n            escMatcher = escMatcher.replace('D', config.delimiter)\n\n            if (strValue.search(escMatcher) > -1) {\n                strValue = config.delimiter + strValue + config.delimiter\n            }\n            lineValues.push(strValue)\n        }\n        output += lineValues.join(config.separator) + '\\n'\n    }\n\n    // push the value to a callback if one is defined\n    if (!config.callback) {\n        return output\n    } else {\n        config.callback('', output)\n    }\n}\n\n/**\n* $.csv.fromObjects(objects)\n* Converts a javascript dictionary to a CSV string.\n*\n* @param {Object} objects An array of objects containing the data.\n* @param {Object} [options] An object containing user-defined options.\n* @param {Character} [separator] An override for the separator character. Defaults to a comma(,).\n* @param {Character} [delimiter] An override for the delimiter character. Defaults to a double-quote(\").\n* @param {Character} [sortOrder] Sort order of columns (named after\n*   object properties). Use 'alpha' for alphabetic. Default is 'declare',\n*   which means, that properties will _probably_ appear in order they were\n*   declared for the object. But without any guarantee.\n* @param {Character or Array} [manualOrder] Manually order columns. May be\n* a strin in a same csv format as an output or an array of header names\n* (array items won't be parsed). All the properties, not present in\n* `manualOrder` will be appended to the end in accordance with `sortOrder`\n* option. So the `manualOrder` always takes preference, if present.\n*\n* This method generates a CSV file from an array of objects (name:value pairs).\n* It starts by detecting the headers and adding them as the first line of\n* the CSV file, followed by a structured dump of the data.\n*/\n\nvar fromObjects = function (objects, options, callback) {\n\n    // if callback was passed to options swap callback with options\n    if (options !== undefined && typeof (options) === 'function') {\n        if (callback !== undefined) {\n            return console.error('You cannot 3 arguments with the 2nd argument being a function')\n        }\n        callback = options\n        options = {}\n    }\n\n    options = (options !== undefined ? options : {})\n    const config = {}\n    config.callback = ((callback !== undefined && typeof (callback) === 'function') ? callback : false)\n    config.separator = 'separator' in options ? options.separator : $.csv.defaults.separator\n    config.delimiter = 'delimiter' in options ? options.delimiter : $.csv.defaults.delimiter\n    config.headers = 'headers' in options ? options.headers : $.csv.defaults.headers\n    config.sortOrder = 'sortOrder' in options ? options.sortOrder : 'declare'\n    config.manualOrder = 'manualOrder' in options ? options.manualOrder : []\n    config.transform = options.transform\n\n    if (typeof config.manualOrder === 'string') {\n        config.manualOrder = $.csv.toArray(config.manualOrder, config)\n    }\n\n    if (config.transform !== undefined) {\n        const origObjects = objects\n        objects = []\n\n        for (let i = 0; i < origObjects.length; i++) {\n            objects.push(config.transform.call(undefined, origObjects[i]))\n        }\n    }\n\n    let props = $.csv.helpers.collectPropertyNames(objects)\n\n    if (config.sortOrder === 'alpha') {\n        props.sort()\n    }\n\n    if (config.manualOrder.length > 0) {\n        const propsManual = [].concat(config.manualOrder)\n\n        for (let p = 0; p < props.length; p++) {\n            if (propsManual.indexOf(props[p]) < 0) {\n                propsManual.push(props[p])\n            }\n        }\n        props = propsManual\n    }\n\n    let line\n    const output = []\n    let propName\n    if (config.headers) {\n        output.push(props)\n    }\n\n    for (let o = 0; o < objects.length; o++) {\n        line = []\n        for (let p = 0; p < props.length; p++) {\n            propName = props[p]\n            if (propName in objects[o] && typeof objects[o][propName] !== 'function') {\n                line.push(objects[o][propName])\n            } else {\n                line.push('')\n            }\n        }\n        output.push(line)\n    }\n\n    // push the value to a callback if one is defined\n    return fromArrays(output, options, config.callback)\n}\n\n", "\n/*\n * webflow-html\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * HTML Utilities\n */\n\n//#region Utility functions\n\n// Credit James Padolsey \n// https://css-tricks.com/snippets/jquery/shuffle-dom-elements/\n// migrated to utils.ts\n(function($){\n \n    $.fn.shuffle = function() {\n \n        var allElems = this.get(),\n            getRandom = function(max) {\n                return Math.floor(Math.random() * max);\n            },\n            shuffled = $.map(allElems, function(){\n                var random = getRandom(allElems.length),\n                    randEl = $(allElems[random]).clone(true)[0];\n                allElems.splice(random, 1);\n                return randEl;\n           });\n \n        this.each(function(i){\n            $(this).replaceWith($(shuffled[i]));\n        });\n \n        return $(shuffled);\n \n    };\n \n})(jQuery);\n\n// HTML Decode\n// https://tertiumnon.medium.com/js-how-to-decode-html-entities-8ea807a140e5\n// MIGRATED to utils.ts\nexport var decodeHtml = function (text) {\n    \n    console.log(text);\n\n    var decoded = $(\"<textarea/>\")\n      .html(text)\n      .text();\n\nconsole.log(decoded);\n\n      return decoded;\n}\n\n// HTML Encode\n// https://tertiumnon.medium.com/js-how-to-decode-html-entities-8ea807a140e5\n//export var encodeHTML = function (text) {\n//    return $(\"<textarea/>\")\n//      .text(text)\n//      .html();\n//}\n\n\n// Simplest-case encoding for HTML5\n// MIGRATED to utils.ts\nexport var encodeHtml = function (text) {\n\n    // Important- this approach handles common scenarios,\n    // but does not handle quotes or special accented characters.\n    // See https://www.php.net/htmlspecialchars\n\n    return text\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\");\n}\n\n//#endregion\n\n//#region IFRAMES\n\n// MIGRATED to utils.ts\nexport var autosizeIFrames = function () {\n\n    // Identify all IFRAMES with autosize tag\n    let iframes = $(\"iframe[wfu='html.iframe.autofit']\");\n\n    iframes.each(function (index) {\n\n        var iframe = this;\n\n        // Add event listener and wait for content to load\n        this.addEventListener('load', function () {\n            setInterval(function () {\n                iframe.style.height = iframe.contentDocument.body.scrollHeight + 'px';\n            }, 200);\n        });\n\n    });\n\n}\n\n//#endregion\n\n//#region Dynamic Attributes\n\n// Applies custom attributes to HTML elements throughout the page\n// from relatively-positioned <data> elements.\n// MIGRATED to utils.ts\nexport var applyDynamicAttributes = function () {\n\n    // Find all <data> elements which specify a data-source\n    // for data binding\n    var dynamicAttributeDatas = $('data[wfu-attr]');\n\n    // Iterate and bind each individually\n    $.each(dynamicAttributeDatas, function (i, elem) {\n\n        var data = this;\n\n        // Webflow wraps EMBEDS in a DIV, so we work from that parent as a positional reference\n        var dataContainer = $(data).parent();\n\n        // hide this node\n        $(dataContainer).attr(\"style\", \"display: none;\");\n\n        var target = null;\n\n        // Webflow wraps EMBEDS in a DIV[wf-embed], so we work from that parent as a reference\n        switch ($(data).attr(\"wfu-attr-target\")) {\n            case \"prev\":\n                target = $(dataContainer).prev();\n                break;\n            case \"next\":\n                target = $(dataContainer).next();\n                break;\n            case \"parent\":\n                target = $(dataContainer).parent();\n                break;\n            default:\n\n                if (vars.logging)\n                    console.warn(\"Unknown apply setting for param.\");\n        }\n\n        // Apply attribute\n        var dataItem = this;\n        $(target).attr(\n            $(dataItem).attr(\"wfu-attr\"),\n            $(dataItem).attr(\"wfu-attr-val\")\n        );\n\n    });\n\n}\n\n//#endregion\n\n//#region Data Formatting\n\n// MIGRATED to utils.ts\nexport var formatJson = function (data) {\n\n    var json;\n\n    // Convert JSON to string\n    if (typeof data != 'string') {\n        json = JSON.stringify(data, undefined, 2);\n    }\n\n    return json;\n}\n\n// MIGRATED to utils.ts\nexport var formatJsonAsHtml = function (data) {\n\n    // Convert JSON to string\n    var json = formatJson(data);\n\n    json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n    // Add JSON styling classes\n    return json.replace(\n        /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n        function (match) {\n            var cls = 'wfu-json-number';\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) {\n                    cls = 'wfu-json-key';\n                } else {\n                    cls = 'wfu-json-string';\n                }\n            } else if (/true|false/.test(match)) {\n                cls = 'wfu-json-boolean';\n            } else if (/null/.test(match)) {\n                cls = 'wfu-json-null';\n            }\n            return '<span class=\"' + cls + '\">' + match + '</span>';\n        });\n\n}\n\n// MIGRATED to utils.ts \nexport var displayDataAsHtml = function (el, data) {\n\n//    var json = formatJson(data);\n\n    // Create <pre> element\n    $(el).html(\"<pre class='wfu-code'></pre>\");\n\n    // Populate <pre> element with formatted JSON data\n    $(el).children(\"pre\").html(\n        formatJsonAsHtml(data)\n    );\n\n}\n\n//#endregion\n\n//#region Macros\n\n/* expandMacrosInElement\n * Expands {{ var }} constructs in an elements innerHtml\n * using dictionary lookup, and replaces the element content.\n */\n// MIGRATED to utils.ts \nexport var expandMacrosInElement = function (el, dict) {\n\n    var html = $(el).html();\n\n    html = expandMacrosInText(html, dict);\n\n    $(el).html(\n        html\n    );\n\n}\n\n/* expandMacrosInText\n * Expands {{ var }} constructs in text\n */\n// MIGRATED to utils.ts \nexport var expandMacrosInText = function (text, dict) {\n\n    // https://regexr.com/\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n    // Must be positioned before regex replace call\n    var replacer = function (match, p1, p2, p3, offset, string) {\n\n        return dict.get(p2);\n    }\n\n    text = text.replace(\n        /{\\s*(?<cmd>\\w*)\\s*\\{\\s*(?<params>\\w*)\\s*\\}\\s*(?<options>\\w*)\\s*\\}/g,\n        replacer\n    );\n\n    return text;\n}\n\n//#endregion\n\n//#region Nested Lists\n\n/* processList\n * Parses markup in LI's to create nested lists\n * https://codepen.io/memetican/pen/vYjGbrd/8052e3c39d42e8c1e326b2f6ead371c5\n */\n// MIGRATED to webflow-html / nested-list.ts \nexport var processList = function (list) {\n    //        console.log(`LIST -------------------------`);\n\n    var content = $(list).html();\n//    console.log(content);\n\n    var data = $.parseHTML(content);\n    var items = [];\n\n    $.each(data, function (i, el) {\n\n//        console.log(el);\n        \n//        console.log(JSON.stringify(el));\n//        console.log(el.nodeName);\n//        console.log(el.nodeType);\n\n        if (el.nodeName != \"LI\")\n            return; // skip\n\n        var item = {\n            indent: 1,\n            mode: '',\n            text: $(el).html().trim()\n        };\n\n        items.push(item);\n        //        console.log(`${i} ${item.text} ${items.length}`);\n\n        var limit = 10;\n        for (var j = 1; j < limit; j += 1) {\n\n            if (item.text.startsWith(\"&gt;\")) {\n                item.text = item.text.substring(4).trim(); // remove directive \n                item.indent++;\n            } else if (item.text.startsWith(\"+\")) {\n                item.text = item.text.substring(1).trim(); // remove directive \n                item.mode = \"pro\";\n            } else if (item.text.startsWith(\"-\")) {\n                item.text = item.text.substring(1).trim(); // remove directive \n                item.mode = \"con\";\n            } else {\n                break; // done\n            }\n\n        }\n\n    });\n\n    // Render HTML\n    // Creates structured embedded list from the \n    // array data set. \n\n    var outHtml = '';\n    var level = 1;\n    var tag = list.tagName.toLowerCase();\n    var prevLevel = 1;\n\n    $.each(items, function (i, item) {\n\n        // Add optional PRO/CON class \n        var attr = '';\n        if (item.mode == 'pro')\n            attr = \" class='wfu-pro'\";\n        if (item.mode == 'con')\n            attr = \" class='wfu-con'\";\n\n        prevLevel = level;\n\n        if (item.indent > level) {\n\n            for (var l = level + 1; l <= item.indent; l += 1)\n                outHtml += `<${tag} class=\"wfu-list-level-${l}\">`;\n            outHtml += `<li${attr}>${item.text}`;\n\n            level = item.indent;\n\n        } else if (item.indent < level) {\n\n            outHtml += `</li></${tag}>`.repeat(level - item.indent);\n            outHtml += `</li>`;\n            outHtml += `<li${attr}>${item.text}`;\n            level = item.indent;\n\n        } else {\n\n            if (i > 0)\n                outHtml += `</li>`;\n            outHtml += `<li${attr}>${item.text}`;\n\n        }\n\n    });\n\n    if (level > 1)\n        outHtml += `</li></${tag}>`.repeat(level - 1);\n    outHtml += `</li>`;\n    level = 1;\n\n    $(list).html(outHtml);\n\n}\n\n//#endregion\n\n// MIGRATED to utils.ts \nexport var sequence = function (l) {\n\n    const $group = $(l);\n    \n    // Get the group name\n    const groupName = $group.attr(\"wfu-seq-group\");\n\n    // Find matching items \n    var i = 0;\n    $group.find(`[wfu-seq=\"${groupName}\"]`).each(function() {\n        $(this).html(++i);\n    }); \n\n}\n\n//#region Sorting\n\n/* sortCollectionList\n * Sorts a Collection List\n * https://codepen.io/memetican/pen/oNygGLj/259b05cd6be71a16d2f4787e0714278f\n */\n// MIGRATED to utils.ts \nexport var sortCollectionList = function (l) {\n\n    console.group(\"SORT\");\n\n    const $list = $(l);\n    const mode = $list.attr(\"wfu-sort\") || \"default\";\n    const dir = $list.attr(\"wfu-sort-dir\") || \"asc\";\n    const sortType = $list.attr(\"wfu-sort-type\") || \"string\";\n\n    var $items = $list.children();\n\n    console.debug(`WFU sorting ${mode} ${sortType} ${dir} (${$items.length} children)`);\n\n    console.debug({\n        name: \"WFU sorting\", \n        mode: mode, \n        sortType: sortType, \n        dir: dir, \n        children: `${$items.length} children`\n    });\n\n    console.debug('before.');\n\n    console.debug($list.children()); \n\n    // If Random sort, do it now \n    // uses jQuery extension, defined above\n    if(dir == \"random\") {\n\n        // Randomize\n        // updates element order directly, immediately\n        $list.children().shuffle();\n\n    } else {\n\n        $items.sort(function (a, b) {\n\n            const key1 = $(a).find(\"[wfu-sort-key]\").attr(\"wfu-sort-key\");\n            const key2 = $(b).find(\"[wfu-sort-key]\").attr(\"wfu-sort-key\");\n\n            // Determine asc sort result\n            var sortResult = 1;\n            switch (sortType) {\n                case \"date\":\n\n                    sortResult = new Date(key1) < new Date(key2) ? -1 : 1;\n                    console.debug(`comparing dates ${key1} ${key2} = ${sortResult}`);\n\n                    break;\n                case \"number\":\n\n                    sortResult = new Number(key1) < new Number(key2) ? -1 : 1;\n                    console.debug(`comparing numbers ${key1} ${key2} = ${sortResult}`);\n\n                    break;\n                case \"semver\":\n\n                    const semver1 = `${key1}.0.0.0`.split('.');\n                    const semver2 = `${key2}.0.0.0`.split('.');\n\n                    // https://semver.org/#spec-item-11\n\n                    // Precedence is determined by the first difference when comparing each \n                    // of these identifiers from left to right as follows: \n                    // Major, minor, and patch versions are always compared numerically.\n                    for (var p = 0; p < 4; p++) \n                        if (semver1[p] != semver2[p])\n                            break;\n\n                    // Numeric identifiers always have lower precedence than non-numeric identifiers.\n\n                    // Identifiers with letters or hyphens are compared lexically in ASCII sort order.\n\n                        // https://semver.org/#:~:text=Precedence%20for%20two%20pre%2Drelease%20versions%20with%20the%20same%20major%2C%20minor%2C%20and%20patch\n\n    //                console.log(`semver difference at part ${p}`);\n\n                    // Identifiers consisting of only digits are compared numerically.\n\n                    // Compare; if same, doesn't matter\n                    sortResult = new Number(semver1[p]) < new Number(semver2[p]) ? -1 : 1;\n                    console.debug(`comparing semvers ${key1} ${key2} = ${sortResult}`);\n\n                    break;\n                case \"string\":\n                default:\n\n                    sortResult = key1.localeCompare(key2);\n                    console.debug(`comparing strings ${key1} ${key2} = ${sortResult}`);\n\n                    break;\n            }\n\n            // Invert for desc\n            if (dir != \"asc\") {\n                sortResult = sortResult * -1;\n            }\n\n            return sortResult;\n        });\n\n        console.debug('writing.');\n        $list.html($items);\n\n    }\n\n    // Remove attribute to display \n    $list.removeAttr(\"wfu-sort\");\n\n    console.groupEnd();\n\n}\n\n//#endregion\n", "\n/*\n * Sygnal Technology Group\n * http://sygnal.com\n *\n * Data-processing functions.\n */\n\nimport { csvToObjects } from './webflow-data-csv.js';\nimport { prepareCollectionListDataSource } from '../datasources/webflow-collectionlist-data.js';\nimport { loadGoogleSheetFromSpec } from '../datasources/google-sheet-data.js';\nimport { HtmlBuilder } from './webflow-html-builder.js';\n\nexport class Database {\n    data = new Map();\n\n    normalizeKey = function (key) {\n        return key.toLowerCase();\n    }\n\n    // Add specified JSON document under key.\n    add = function (key, json) {\n\n        key = this.normalizeKey(key);\n\n        // Convert string to JSON\n        if (typeof json == 'string') {\n            json = JSON.parse(json);\n        }\n\n        this.data.set(key, json);\n    }\n\n    getData = function (key) {\n\n        key = this.normalizeKey(key);\n\n        return this.data.get(key);\n    }\n    getDataSource = this.getData; // obsolete\n\n    getCountOfRecords = function (dataSourceName) {\n        return this.getDataSource(dataSourceName).length;\n    }\n\n    getDictionary = function (dataSourceName, keyField, valueField) {\n        var dict = new Map();\n\n        var ds = this.getDataSource(dataSourceName);\n\n//        console.log(ds);\n\n        for (var i = 0; i < ds.length; i++)\n        {\n//            console.log(`${0}: ${ds.length} ${ds[i].keyField} / ${ds[i].valueField}`);\n            dict.set(\n                ds[i][keyField],\n                ds[i][valueField]\n            );\n        }\n\n        console.log(dict);\n        return dict;\n    }\n\n    getDictionaryFromRow = function (dataSourceName, row) {\n        var dict = new Map();\n\n        var ds = this.getDataSource(dataSourceName);\n\n        for (const v in ds[row]) {\n            dict.set(\n                v,\n                ds[row][v]\n            );\n        }\n\n        return dict;\n    }\n\n}\n\n/* Loads all data sources\n * tagged with [wfu-data]\n */\nexport var loadAllData = function () {\n\n    // Find all elements which specify a data-source\n    // for data binding\n    var dataSources = $('*[wfu-data]');\n\n    console.log(`sources found = ${dataSources.length}`);\n\n    var db = new Database();\n\n    // Iterate and bind each individually\n    $.each(dataSources, function (i, elem) {\n\n        console.log(`processing source - ${elem.getAttribute(\"wfu-data\")}`);\n\n        var data = loadData(\n            elem.getAttribute(\"wfu-data\")\n        );\n\n        // add to database\n        db.data.set(\n            elem.getAttribute(\"wfu-data\"),\n            data\n        );\n    })\n\n    return db;\n}\n\nexport var loadData = function (name) {\n\n    // Find all elements which identify themselves\n    // as a data-source\n    var dataSource = $(`*[wfu-data='${name}']`);\n    if (!dataSource) {\n        console.warn(`Datasource: '${name}' does not exist`);\n        return;\n    }\n\n    // Get data type\n    var dataSourceType = $(dataSource).attr(\"wfu-data-type\");\n    console.log(`preparing data - ${dataSourceType}`);\n\n    switch (dataSourceType) {\n        case 'collection-list': // Webflow collection list\n            return prepareCollectionListDataSource(dataSource);\n            break;\n        case 'json': // static json chunk\n            break;\n        case 'google-sheet': // Google sheet link\n            return loadGoogleSheetFromSpec(\n                JSON.parse(\n                    $(dataSource).text()\n                )\n            );\n            break;\n        default:\n            console.error(`Data-source type: '${dataSourceType}' unknown`);\n            break;\n    }\n\n}\n\nexport var getCsv = function (url) {\n\n    var csv = null;\n\n    $.ajax({\n        url: url,\n        async: false, // deprecated\n        success: function (csvd) {\n\n            csv = csvd;\n\n        },\n        dataType: \"text\",\n        complete: function () {\n            // call a function on complete\n        }\n    });\n\n    return csv;\n}\n\nexport var csvToData = function (csvd) { \n\n    var items = csvToObjects(csvd);\n\n    //var json = JSON.stringify(\n    //    items,\n    //    null,\n    //    prettyprint ? 2 : 0 // pretty print\n    //);\n\n    return items;\n}\n\n/* Return Csv as JSON objects\n * \n */\nexport var getCsvAsData = function (url) {\n\n    var data = null;\n\n    $.ajax({\n        url: url,\n        async: false, // deprecated\n        success: function (csvd) {\n\n            data = csvToObjects(csvd);\n\n            //json = JSON.stringify(\n            //    items,\n            //    null,\n            //    prettyprint ? 2 : 0 // pretty print\n            //);\n\n        },\n        dataType: \"text\",\n        complete: function () {\n            // call a function on complete\n        }\n    });\n\n    return data;\n}\n\nexport var getDictionaryFromDataRow = function (data, rowIndex) {\n    var dict = new Map();\n\n    for (const v in data[rowIndex]) {\n        dict.set(\n            v,\n            data[rowIndex][v]\n        );\n    }\n\n    return dict;\n}\n\n\n\n", "\n/*\n * google-sheet-data\n *\n * Sygnal Technology Group\n * http://sygnal.com\n *\n * Extracts information from Google Sheets, and returns as JSON\n */\n\n//import { csvToData } from '../modules/webflow-data.js';\n//import { csvToObjects } from '../modules/webflow-data-csv.js';\nimport { getCsvAsData } from '../modules/webflow-data.js';\n\nexport var loadGoogleSheetFromSpec = function (spec) {\n\n    switch (spec.version) {\n        default:\n        case \"1\":\n\n            return getCsvAsData(spec.url);\n//            return getGoogleSheetDataUrl(spec.url);\n\n            break;\n    }\n//    console.log(spec);\n\n    // Validate spec\n    // TODO: cast to options-style object? \n\n//    spec.url\n}\n\n// Returns a Url to retrieve the CSV version of a Google Sheet\n// The sheet must be publicly accessible.\nexport var getGoogleSheetCsvUrl = function (id) {\n\n    return `https://docs.google.com/spreadsheets/d/${id}/export?format=csv`;\n}\n\n// Returns all data as JSON from Sheet1\nexport var getGoogleSheetData = function (id) {\n\n    return new Promise((resolve, reject) => {\n\n        var url = getGoogleSheetCsvUrl(id);\n        console.log(url);\n\n        var json = getCsvAsData(\n            getGoogleSheetCsvUrl(id)\n        );\n\n        resolve(json);\n\n    });\n}\n\n// Returns all data as JSON from Sheet1\nexport var getGoogleSheetDataUrl = function (url) {\n\n    return new Promise((resolve, reject) => {\n\n        console.log(url);\n\n        var json = getCsvAsData(\n            url\n        );\n\n        resolve(json);\n\n    });\n}", "\n\n\n\nexport class Database {\n    data = new Map();\n\n    normalizeKey = function (key) {\n        return key.toLowerCase();\n    }\n\n    // Add specified JSON document under key.\n    add = function (key, json) {\n\n        key = this.normalizeKey(key);\n\n        // Convert string to JSON\n        if (typeof json == 'string') {\n            json = JSON.parse(json);\n        }\n\n        this.data.set(key, json);\n    }\n\n    getData = function (key) {\n\n        key = this.normalizeKey(key);\n\n        return this.data.get(key);\n    }\n    getDataSource = this.getData; // obsolete\n\n    getCountOfRecords = function (dataSourceName) {\n        return this.getDataSource(dataSourceName).length;\n    }\n\n    getDictionary = function (dataSourceName, keyField, valueField) {\n        var dict = new Map();\n\n        var ds = this.getDataSource(dataSourceName);\n\n//        console.log(ds);\n\n        for (var i = 0; i < ds.length; i++)\n        {\n//            console.log(`${0}: ${ds.length} ${ds[i].keyField} / ${ds[i].valueField}`);\n            dict.set(\n                ds[i][keyField],\n                ds[i][valueField]\n            );\n        }\n\n        console.log(dict);\n        return dict;\n    }\n\n    getDictionaryFromRow = function (dataSourceName, row) {\n        var dict = new Map();\n\n        var ds = this.getDataSource(dataSourceName);\n\n        for (const v in ds[row]) {\n            dict.set(\n                v,\n                ds[row][v]\n            );\n        }\n\n        return dict;\n    }\n\n} \n\n", "\n/*\n * SA5\n * Sygnal Technology Group\n * sa5-data\n * \n * Creates a data source from SA5 data.\n */\n\n// import { Database } from '../modules/webflow-data.js';\n\nimport { Sa5ScriptType } from '../globals'\n\ntype SA5Object = { [key: string]: any };\n\nexport class Sa5Data {\n\n    elem: HTMLElement;\n    type: string;\n    value: SA5Object;\n\n    constructor(elem: HTMLElement) {\n\n        this.elem = elem; \n        this.init();\n\n    }\n\n    init() {\n\n        // Verify node type\n        if (this.elem.nodeName != \"SCRIPT\") {\n            console.error(\"Invalid element for Sa5Data. Must be a SCRIPT element.\", this.elem);\n            return;\n        }\n        \n        // Verify type\n        this.type = this.elem.getAttribute(\"type\");\n        if (this.type != Sa5ScriptType.SCRIPT_TYPE_SA5_DATA_ITEM) {\n            console.error(\"Invalid element type for Sa5Data.\", this.elem);\n            return; \n        }\n\n        let data = this.elem.innerText;\n\n        this.value = this.parse(data); \n\n    }\n\n    parse(content: string): SA5Object | null {\n        const obj: SA5Object = {};\n        const lines = content.split('\\n');\n        let currentKey: string | null = null;\n        let currentValue: string | null = null;\n        let currentType: 'string' | 'number' | 'boolean' = 'string';\n        let isMultiLineValue = false;\n    \n        for (let line of lines) {\n            line = line.trim();\n            \n            // Skip empty lines\n            if (!line) continue;\n    \n            // Handle multi-line values\n            if (isMultiLineValue) {\n                if (line.endsWith('>')) {\n                    currentValue += '\\n' + line.slice(0, -1); // Exclude the closing '>'\n                    if (currentKey !== null && currentValue !== null) {\n                        switch (currentType) {\n                            case 'number':\n                                obj[currentKey] = parseFloat(currentValue);\n                                break;\n                            case 'boolean':\n                                obj[currentKey] = currentValue.toLowerCase() === 'true';\n                                break;\n                            default:\n                                obj[currentKey] = currentValue;\n                                break;\n                        }\n                    }\n                    isMultiLineValue = false;\n                    currentValue = null;\n                    currentKey = null;\n                    currentType = 'string';\n                } else {\n                    currentValue += '\\n' + line;\n                }\n                continue;\n            }\n    \n            const delimiterMatch = line.match(/:(\\$|#|\\?|)/);\n            if (!delimiterMatch) continue;\n    \n            const delimiter = delimiterMatch[1];\n            const parts = line.split(delimiterMatch[0]);\n            const key = parts[0].trim();\n            let value = parts.slice(1).join(':').trim();\n    \n            // Determine the type based on the delimiter\n            switch (delimiter) {\n                case '':\n                case '$':\n                    currentType = 'string';\n                    break;\n                case '#':\n                    currentType = 'number';\n                    break;\n                case '?':\n                    currentType = 'boolean';\n                    break;\n            }\n    \n            // Handle starting of multi-line value\n            if (value.startsWith('<')) {\n                if (value.endsWith('>')) {\n                    value = value.slice(1, -1); // Exclude both the starting '<' and closing '>'\n                    switch (currentType) {\n                        case 'number':\n                            obj[key] = parseFloat(value);\n                            break;\n                        case 'boolean':\n                            obj[key] = value.toLowerCase() === 'true';\n                            break;\n                        default:\n                            obj[key] = value;\n                            break;\n                    }\n                } else {\n                    isMultiLineValue = true;\n                    currentKey = key;\n                    currentValue = value.slice(1); // Exclude the starting '<'\n                }\n            } else {\n                switch (currentType) {\n                    case 'number':\n                        obj[key] = parseFloat(value);\n                        break;\n                    case 'boolean':\n                        obj[key] = value.toLowerCase() === 'true';\n                        break;\n                    default:\n                        obj[key] = value;\n                        break;\n                }\n            }\n        }\n    \n        return obj;\n    }\n\n    parse2(content: string): SA5Object | null {\n        const obj: SA5Object = {};\n        const lines = content.split('\\n');\n        let currentKey: string | null = null;\n        let currentValue: string | null = null;\n        let isMultiLineValue = false;\n\n        for (let line of lines) {\n            line = line.trim();\n            \n            // Skip empty lines\n            if (!line) continue;\n\n            // Handle multi-line values\n            if (isMultiLineValue) {\n                if (line.endsWith('>')) {\n                    currentValue += '\\n' + line.slice(0, -1); // Exclude the closing '>'\n                    if (currentKey !== null && currentValue !== null) {\n                        obj[currentKey] = currentValue;\n                    }\n                    isMultiLineValue = false;\n                    currentValue = null;\n                    currentKey = null;\n                } else {\n                    currentValue += '\\n' + line;\n                }\n                continue;\n            }\n\n            const parts = line.split(':');\n            const key = parts.shift()?.trim() || \"\";\n            const value = parts.join(':').trim();\n\n            // Handle starting of multi-line value\n            if (value.startsWith('<')) {\n                if (value.endsWith('>')) {\n                    obj[key] = value.slice(1, -1); // Exclude both the starting '<' and closing '>'\n                } else {\n                    isMultiLineValue = true;\n                    currentKey = key;\n                    currentValue = value.slice(1); // Exclude the starting '<'\n                }\n            } else {\n                obj[key] = value;\n            }\n        }\n\n        return obj;\n    }\n\n}\n\n\n\n", "\n/*\n * Sygnal Technology Group\n * http://sygnal.com\n *\n * Data-processing functions.\n */ \n\nimport { Sa5Core } from './webflow-core';\nimport { Sa5Debug } from './webflow-core/debug';\n\n//import { csvToObjects } from './webflow-data/webflow-data-csv';\nimport { prepareCollectionListDataSource } from './webflow-data/webflow-collectionlist-data';\nimport { loadGoogleSheetFromSpec } from './webflow-data/google-sheet-data';\n//import { HtmlBuilder } from './webflow-html-builder.js';\nimport { Database } from './webflow-data/database';\nimport { Sa5Attribute, Sa5GlobalEvent, Sa5ScriptType } from './globals';\n\nimport { Sa5Data } from './webflow-data/sa5-data';\n\n\ntype DatabaseStore = {\n    [key: string]: Database;\n};\n\ntype DataItem = {\n    dsn: string, \n    version: string,\n    id: string,\n    item: any,\n}\n\n\ntype DatastoreLoadedCallback = (dataStore: Sa5Datastore) => void;\n\n\n\n\ninterface Sa5DatastoreConfig {\n//    loadUserInfoCallback?: ((user: Sa5User) => void) | undefined; // Function callback \n    datastoreLoadedCallback?: DatastoreLoadedCallback; \n//    userLogoutPurge?: ((user: Sa5User) => void) | undefined;\n\n    debug?: boolean;\n\n//    dataBind?: boolean; // Databind after user object load \n\n    // Advanced settings\n    // advanced: {\n\n    //     accountInfoLoadDelay: number; // ms \n    //     accountInfoSaveDelay: number; // ms \n\n    // }\n}\n\n\n\n\nexport class Sa5Datastore {\n\n    store: DatabaseStore = {};\n\n    config: Sa5DatastoreConfig; // Optional config\n\n    // Type guard to check if a function is a UserInfoChangedCallback\n    private isDatastoreLoadedCallback(func: Function): func is DatastoreLoadedCallback {\n\n        if(!func) return false;\n\n        // Adjust this check as needed\n        return func.length === 1;\n    }\n\n    constructor(config: Partial<Sa5DatastoreConfig> = {}) {\n\n        // Merge configs, with defaults\n        this.config = {\n            datastoreLoadedCallback: config.datastoreLoadedCallback,\n            debug: config.debug ?? false,\n        }\n\n    }\n\n    init() {\n\n        // Load internal dbs\n        this.init_dbs(); \n\n        // Callback for other registered data sources \n        // Spreadsheet csv's \n        // etc. \n\n        let core: Sa5Core = Sa5Core.startup();\n\n        // Get any global handler\n        const datastoreLoaded = core.getHandler(Sa5GlobalEvent.EVENT_DATASTORE_LOADED); \n        if (this.isDatastoreLoadedCallback(datastoreLoaded)) {\n\n            this.config.datastoreLoadedCallback = datastoreLoaded;\n\n        }\n\n        // User Callback \n        if (this.config.datastoreLoadedCallback) {\n//            this.debug.debug(\"userCallback\", user);\n            this.config.datastoreLoadedCallback(this); // async\n        }\n\n    }\n\n    loadDataItem(elem: HTMLElement) {\n       \n        let data = this.loadDataItem_v2(\n            elem\n//            elem.getAttribute(\"wfu-data\"),\n//            dataObject\n        );\n\n    }\n\n    // loadDataItem_v1(dbName: string, value: object): void {\n\n    //     if (!this.store[dbName])\n    //         this.store[dbName] = new Database();\n\n    //     this.store[dbName].add(value.slug, value)\n\n    // }\n\n    loadDataItem_v2(elem: HTMLElement): void {\n\n        const dsn = elem.getAttribute(Sa5Attribute.ATTR_DATA_DSN); //  \"wfu-data-dsn\");\n        const id = elem.getAttribute(Sa5Attribute.ATTR_DATA_ITEM_ID); // \"wfu-data-item-id\"); \n\n// console.log(\"load data v2\", dsn, id); \n\n // console.log(elem.innerText); \n\n        let dataObject = JSON.parse(elem.innerText); \n\n\n// console.log(dataObject);  \n\n        // Ensure db is created\n        if (!this.store[dsn])\n            this.store[dsn] = new Database();\n\n        // Add item\n        this.store[dsn].add(id, dataObject);\n\n    }\n\n    loadDataItem_sa5Data(elem: HTMLElement): void {\n\n        const dsn = elem.getAttribute(Sa5Attribute.ATTR_DATA_DSN); //  \"wfu-data-dsn\");\n        const id = elem.getAttribute(Sa5Attribute.ATTR_DATA_ITEM_ID); // \"wfu-data-item-id\"); \n\n        let i = new Sa5Data(elem)\n        let dataObject = i.value; \n\n        console.log(\"dataObject\", dataObject);\n\n        // Ensure db is created\n        if (!this.store[dsn])\n            this.store[dsn] = new Database();\n\n        // Add item\n        this.store[dsn].add(id, dataObject);\n\n    }\n\n    init_dbs() { \n\n        // Init databases \n\n        // Find all elements which specify a data-source for data binding\n        let sa5DataSources = document.querySelectorAll(\n            `script[type='${Sa5ScriptType.SCRIPT_TYPE_SA5_DATA_ITEM}']`\n        ); // wfu-data-item\n\n        // Iterate and bind each individually\n        sa5DataSources.forEach((elem: HTMLElement) => {\n\n            this.loadDataItem_sa5Data(elem);\n\n        });\n\n        // Find all elements which specify a data-source for data binding\n        let dataSources = document.querySelectorAll(\n            `script[type='${Sa5ScriptType.SCRIPT_TYPE_DATA_ITEM}']`\n        ); // wfu-data-item\n//        console.log(`data-items found = ${dataSources.length}`);\n\n        // Iterate and bind each individually\n        dataSources.forEach((elem: HTMLElement) => {\n//             console.log(`processing source - ${elem.getAttribute(\"wfu-data\")}`);\n\n            this.loadDataItem(elem);\n\n//             let dataObject = JSON.parse(elem.innerText); \n//             console.log(dataObject);  \n\n// // dataObject\n\n\n//             let data = this.loadDataItem(\n//                 elem.getAttribute(\"wfu-data\"),\n//                 dataObject\n//             );\n\n            // add to database\n            // db.data.set(\n            //     elem.getAttribute(\"wfu-data\")!,\n            //     data\n            // );\n        });\n\n //        return db;\n    }\n\n    loadData(name: string) {\n        // Find all elements which identify themselves as a data-source\n        let dataSource = document.querySelector(\n            `[${Sa5Attribute.ATTR_DATA}='${name}']`\n            );\n        if (!dataSource) {\n            console.warn(`Datasource: '${name}' does not exist`);\n            return;\n        }\n\n        // Get data type\n        let dataSourceType = dataSource.getAttribute(Sa5Attribute.ATTR_DATA_TYPE); // \"wfu-data-type\");\n        console.log(`preparing data - ${dataSourceType}`);\n\n        switch (dataSourceType) {\n            case 'collection-list': // Webflow collection list\n                return prepareCollectionListDataSource(dataSource as HTMLElement);\n            case 'json': // static json chunk\n                break;\n            case 'google-sheet': // Google sheet link\n                return loadGoogleSheetFromSpec(\n                    JSON.parse(\n                        dataSource.textContent || \"\"\n                    )\n                );\n            default:\n                console.error(`Data-source type: '${dataSourceType}' unknown`);\n                break;\n        }\n    }\n\n    async getCsv(url: string): Promise<string | null> {\n        let csv: string | null = null;\n\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                csv = await response.text();\n            } else {\n                console.error(`Error fetching CSV: ${response.status}`);\n            }\n        } catch (error) {\n            console.error(`Error fetching CSV: ${error}`);\n        }\n\n        return csv;\n    }\n\n    csvToData(csvd: string): any[] { \n        let items = null; // BUG: csvToObjects(csvd);\n\n        //let json = JSON.stringify(\n        //    items,\n        //    null,\n        //    prettyprint ? 2 : 0 // pretty print\n        //);\n\n        return items;\n    }\n\n    /* Return Csv as JSON objects\n    * \n    */\n    async getCsvAsData(url: string): Promise<any[] | null> {\n        let data: any[] | null = null;\n\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                const csvd = await response.text();\n    // BUG:            data = csvToObjects(csvd);\n            } else {\n                console.error(`Error fetching CSV: ${response.status}`);\n            }\n        } catch (error) {\n            console.error(`Error fetching CSV: ${error}`);\n        }\n\n        return data;\n    }\n\n    getDictionaryFromDataRow(data, rowIndex) {\n        var dict = new Map();\n\n        for (const v in data[rowIndex]) {\n            dict.set(\n                v,\n                data[rowIndex][v]\n            );\n        }\n\n        return dict;\n    }\n\n}\n", "\n/*\n * webflow-utils\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * General Utilities\n */\n\n// https://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript\n\n// https://www.w3docs.com/snippets/javascript/how-to-convert-string-to-title-case-with-javascript.html\n\nexport function identifyElement(element: HTMLElement): string {\n    switch (element.tagName) {\n        case 'A': \n            return 'HTMLLinkElement'; \n        case 'INPUT': {\n            const inputElement = element as HTMLInputElement;\n            switch (inputElement.type) {\n\n// BUG: add date types and number types \n\n                case 'checkbox':\n                    return 'HTMLCheckboxElement';\n                case 'radio':\n                    return 'HTMLRadioElement';\n                // case 'text':\n                //     return 'HTMLTextElement';\n                // case 'password':\n                //     return 'HTMLPasswordElement';\n                case 'file':\n                    return 'HTMLFileInputElement';\n                default:\n                    return 'HTMLInputElement';\n            }\n        }\n        case 'SELECT':\n            return 'HTMLSelectElement';\n        case 'TEXTAREA':\n            return 'HTMLTextAreaElement';\n        case 'BUTTON':\n            return 'HTMLButtonElement';\n        default:\n            return 'HTMLElement';\n    }\n}\n\nexport function selectOptionByValue(selectElement: HTMLSelectElement, value: string) {\n    for (let i = 0; i < selectElement.options.length; i++) {\n        if (selectElement.options[i].value === value) {\n            selectElement.options[i].selected = true;\n            break;\n        }\n    }\n}\n\n// Evaluates a string value as boolean \nexport function booleanValue(val: string): boolean {\n    switch (val.toLowerCase()) {\n        case \"false\":\n        case \"f\":\n        case \"0\":\n        case \"no\":\n        case \"off\":\n        case undefined: case \"undefined\":\n        case null: case \"null\": \n            return false;\n        default:\n            return true;\n    }\n}\n\nexport function addDays(date: Date, days: number): Date {\n    let result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n}\n\n\nexport function getCookie(name) {\n    var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\n    if (match) return match[2];\n}\n\nexport function toTitleCase(str) {\n\n    return str.toLowerCase().split(' ').map(function (word) {\n        return (word.charAt(0).toUpperCase() + word.slice(1));\n    }).join(' ');\n\n}\n\n// How do you JSON.stringify an ES6 Map?\n// https://stackoverflow.com/a/56150320\nexport function jsonMapReplacer(key, value) {\n\n    if(value instanceof Map) {\n        return {\n            dataType: 'Map',\n            value: Array.from(value.entries()), // or with spread: value: [...value]\n        };\n    } else {\n        return value;\n    }\n}\n\n// How do you JSON.stringify an ES6 Map?\n// https://stackoverflow.com/a/56150320\nexport function jsonMapReviver(key, value) {\n\n    console.log (\"reviving\", key, typeof value, value); \n\n    if (typeof value === 'object' && value !== null) {\n        if (value.dataType === 'Map') {\n            return new Map(value.value);\n        }\n    }\n    return value;    \n}\n\n\n// HTML Decode JSON for Select Option element\n// https://tertiumnon.medium.com/js-how-to-decode-html-entities-8ea807a140e5\n// export function decodeHTML(text) {\n//     return $(\"<textarea/>\")\n//       .html(text)\n//       .text();\n// }\nexport function decodeHTML(text: string): string {\n    let parser = new DOMParser();\n    let dom = parser.parseFromString(\n        `<!doctype html><body>${text}`,\n        'text/html');\n    return dom.body.textContent || '';\n}\n\n// https://tertiumnon.medium.com/js-how-to-decode-html-entities-8ea807a140e5\n// export function encodeHTML(text) {\n//     return $(\"<textarea/>\")\n//       .text(text)\n//       .html();\n// }\nexport function encodeHTML(text) {\n    let div = document.createElement('div');\n    div.appendChild(document.createTextNode(text));\n    return div.innerHTML;\n}\n\n// How to check if a number is between two values?\n// https://stackoverflow.com/a/18881828\n// Number.prototype.between = function (a, b, inclusive) {\n//     var min = Math.min(a, b),\n//         max = Math.max(a, b);\n\n//     return inclusive ? this >= min && this <= max : this > min && this < max;\n// }\nexport function between(value: number, a: number, b: number, inclusive: boolean): boolean {\n    let min = Math.min(a, b);\n    let max = Math.max(a, b);\n\n    return inclusive ? value >= min && value <= max : value > min && value < max;\n}\n\n// Handy outerHTML extension function\n// jQuery.fn.outerHTML = function () {\n//     return jQuery('<div />').append(this.eq(0).clone()).html();\n// };\nexport function outerHTML(element) {\n    return element.outerHTML;\n}\n\n\n// Mobile detection\n// https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n// window.mobileCheck = function () {\nexport function isMobile() {\n    let check = false;\n    (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window['opera']);\n    return check;\n};\n\n// How to execute a JavaScript function when I have its name as a string\n// https://stackoverflow.com/a/359910\nexport function executeFunctionByName(functionName, context /*, args */) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    var namespaces = functionName.split(\".\");\n    var func = namespaces.pop();\n    for (var i = 0; i < namespaces.length; i++) {\n        context = context[namespaces[i]];\n    }\n    return context[func].apply(context, args);\n}\n\n// How to execute a JavaScript function when I have its name as a string\n// https://stackoverflow.com/a/4351575 \nexport function executeFunctionByName2(functionName, context /*, args */) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    var namespaces = functionName.split(\".\");\n    var func = namespaces.pop();\n    for (var i = 0; i < namespaces.length; i++) {\n        context = context[namespaces[i]];\n    }\n    return context[func].apply(context, args);\n}\n\n//#region Shuffle\n\n// Shuffles a group of elements in the DOM\n// and also returns a set \nexport function shuffleElements(elements: Element[]): Element[] {\n    const allElems = Array.from(elements);\n    const getRandom = (max: number) => Math.floor(Math.random() * max);\n\n    const shuffled = allElems.map(() => {\n        const random = getRandom(allElems.length);\n        const randEl = allElems[random].cloneNode(true) as Element;\n        allElems.splice(random, 1);\n        return randEl;\n    });\n\n    allElems.forEach((elem, i) => {\n        if (elem.parentNode) {\n            elem.parentNode.replaceChild(shuffled[i], elem);\n        }\n    });\n\n    return shuffled;\n}\n\n// Usage:\n// const elements = document.querySelectorAll('.some-class');\n// const shuffledElements = shuffleElements(Array.from(elements));\n\n//#endregion\n\n/* previous code\n\n// Credit James Padolsey \n// https://css-tricks.com/snippets/jquery/shuffle-dom-elements/\n(function($){\n \n    $.fn.shuffle = function() {\n \n        var allElems = this.get(),\n            getRandom = function(max) {\n                return Math.floor(Math.random() * max);\n            },\n            shuffled = $.map(allElems, function(){\n                var random = getRandom(allElems.length),\n                    randEl = $(allElems[random]).clone(true)[0];\n                allElems.splice(random, 1);\n                return randEl;\n           });\n \n        this.each(function(i){\n            $(this).replaceWith($(shuffled[i]));\n        });\n \n        return $(shuffled);\n \n    };\n \n})(jQuery);\n*/\n\n\n//#region IFRAMES\n\nexport function autosizeIFrames(): void {\n    // Identify all IFRAMES with autosize tag\n    const iframes = Array.from(\n        // BUG: weird tagging \n        document.querySelectorAll(\"iframe[wfu='html.iframe.autofit']\")\n        );\n\n    iframes.forEach((iframe: HTMLIFrameElement) => {\n        // Add event listener and wait for content to load\n        iframe.addEventListener('load', () => {\n            setInterval(() => {\n                if (iframe.contentDocument) {\n                    iframe.style.height = `${iframe.contentDocument.body.scrollHeight}px`;\n                }\n            }, 200);\n        });\n    });\n};\n\n/* prev\n\nexport var autosizeIFrames = function () {\n\n    // Identify all IFRAMES with autosize tag\n    let iframes = $(\"iframe[wfu='html.iframe.autofit']\");\n\n    iframes.each(function (index) {\n\n        var iframe = this;\n\n        // Add event listener and wait for content to load\n        this.addEventListener('load', function () {\n            setInterval(function () {\n                iframe.style.height = iframe.contentDocument.body.scrollHeight + 'px';\n            }, 200);\n        });\n\n    });\n\n}\n\n*/\n\n//#endregion\n\n\n//#region Dynamic Attributes\n\n// Applies custom attributes to HTML elements throughout the page\n// from relatively-positioned <data> elements.\n\n\nexport function applyDynamicAttributes(): void {\n\n    // Find all <data> elements which specify a data-source for data binding\n    const dynamicAttributeDatas = Array.from(\n        document.querySelectorAll('data[wfu-attr]')\n        );\n\n    // Iterate and bind each individually\n    dynamicAttributeDatas.forEach((data: HTMLElement) => {\n\n        // Webflow wraps EMBEDS in a DIV, so we work from that parent as a positional reference\n        const dataContainer = data.parentElement;\n\n        // hide this node\n        if (dataContainer) {\n            dataContainer.style.display = 'none';\n        }\n\n        let target: HTMLElement | null = null;\n\n        // Webflow wraps EMBEDS in a DIV[wf-embed], so we work from that parent as a reference\n        switch (data.getAttribute('wfu-attr-target')) {\n            case 'prev':\n                target = dataContainer?.previousElementSibling as HTMLElement;\n                break;\n            case 'next':\n                target = dataContainer?.nextElementSibling as HTMLElement;\n                break;\n            case 'parent':\n                target = dataContainer?.parentElement;\n                break;\n            default:\n                console.warn('Unknown apply setting for param.');\n        }\n\n        // Apply attribute\n        if (target) {\n            target.setAttribute(data.getAttribute('wfu-attr') || '', data.getAttribute('wfu-attr-val') || '');\n        }\n\n    });\n};\n\n\n/*\n\n\nexport var applyDynamicAttributes = function () {\n\n    // Find all <data> elements which specify a data-source\n    // for data binding\n    var dynamicAttributeDatas = $('data[wfu-attr]');\n\n    // Iterate and bind each individually\n    $.each(dynamicAttributeDatas, function (i, elem) {\n\n        var data = this;\n\n        // Webflow wraps EMBEDS in a DIV, so we work from that parent as a positional reference\n        var dataContainer = $(data).parent();\n\n        // hide this node\n        $(dataContainer).attr(\"style\", \"display: none;\");\n\n        var target = null;\n\n        // Webflow wraps EMBEDS in a DIV[wf-embed], so we work from that parent as a reference\n        switch ($(data).attr(\"wfu-attr-target\")) {\n            case \"prev\":\n                target = $(dataContainer).prev();\n                break;\n            case \"next\":\n                target = $(dataContainer).next();\n                break;\n            case \"parent\":\n                target = $(dataContainer).parent();\n                break;\n            default:\n\n                if (vars.logging)\n                    console.warn(\"Unknown apply setting for param.\");\n        }\n\n        // Apply attribute\n        var dataItem = this;\n        $(target).attr(\n            $(dataItem).attr(\"wfu-attr\"),\n            $(dataItem).attr(\"wfu-attr-val\")\n        );\n\n    });\n\n}\n\n*/\n\n//#endregion\n\n\n\n\n//#region Data Formatting\n\nexport const formatJson = (data: any): string | undefined => {\n    let json;\n\n    // Convert JSON to string\n    if (typeof data !== 'string') {\n        json = JSON.stringify(data, undefined, 2);\n    }\n\n    return json;\n}\n\nexport const formatJsonAsHtml = (data: any): string => {\n    // Convert JSON to string\n    let json = formatJson(data);\n\n    json = json?.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n    // Add JSON styling classes\n    return json?.replace(\n        /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n        (match) => {\n            let cls = 'wfu-json-number';\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) {\n                    cls = 'wfu-json-key';\n                } else {\n                    cls = 'wfu-json-string';\n                }\n            } else if (/true|false/.test(match)) {\n                cls = 'wfu-json-boolean';\n            } else if (/null/.test(match)) {\n                cls = 'wfu-json-null';\n            }\n            return `<span class=\"${cls}\">${match}</span>`;\n        }) || '';\n}\n\nexport const displayDataAsHtml = (el: HTMLElement, data: any): void => {\n    // Create <pre> element\n    const pre = document.createElement('pre');\n    pre.className = 'wfu-code';\n\n    // Populate <pre> element with formatted JSON data\n    pre.innerHTML = formatJsonAsHtml(data);\n\n    // Append <pre> element to the target element\n    el.innerHTML = '';\n    el.appendChild(pre);\n}\n\n/*\n\nexport var formatJson = function (data) {\n\n    var json;\n\n    // Convert JSON to string\n    if (typeof data != 'string') {\n        json = JSON.stringify(data, undefined, 2);\n    }\n\n    return json;\n}\n\nexport var formatJsonAsHtml = function (data) {\n\n    // Convert JSON to string\n    var json = formatJson(data);\n\n    json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n    // Add JSON styling classes\n    return json.replace(\n        /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n        function (match) {\n            var cls = 'wfu-json-number';\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) {\n                    cls = 'wfu-json-key';\n                } else {\n                    cls = 'wfu-json-string';\n                }\n            } else if (/true|false/.test(match)) {\n                cls = 'wfu-json-boolean';\n            } else if (/null/.test(match)) {\n                cls = 'wfu-json-null';\n            }\n            return '<span class=\"' + cls + '\">' + match + '</span>';\n        });\n\n}\n\nexport var displayDataAsHtml = function (el, data) {\n\n//    var json = formatJson(data);\n\n    // Create <pre> element\n    $(el).html(\"<pre class='wfu-code'></pre>\");\n\n    // Populate <pre> element with formatted JSON data\n    $(el).children(\"pre\").html(\n        formatJsonAsHtml(data)\n    );\n\n}\n\n*/\n\n//#endregion \n\n\n\n//#region Macros\n\n/* expandMacrosInElement\n * Expands {{ var }} constructs in an elements innerHtml\n * using dictionary lookup, and replaces the element content.\n */\n\nexport function expandMacrosInElement (el: HTMLElement, dict: Map<string, string>): void {\n    let html = el.innerHTML;\n\n    html = expandMacrosInText(html, dict);\n\n    el.innerHTML = html;\n}\n\n/* expandMacrosInText\n * Expands {{ var }} constructs in text\n */\n\nexport const expandMacrosInText = (text: string, dict: Map<string, string>): string => {\n    // Must be positioned before regex replace call\n    const replacer = (match: string, p1: string, p2: string, p3: string, offset: number, string: string): string => {\n        return dict.get(p2) || '';\n    }\n\n    text = text.replace(\n        /{\\s*(?<cmd>\\w*)\\s*\\{\\s*(?<params>\\w*)\\s*\\}\\s*(?<options>\\w*)\\s*\\}/g,\n        replacer\n    );\n\n    return text;\n}\n\n\n\n/*\n\nexport var expandMacrosInElement = function (el, dict) {\n\n    var html = $(el).html();\n\n    html = expandMacrosInText(html, dict);\n\n    $(el).html(\n        html\n    );\n\n}\n\n\nexport var expandMacrosInText = function (text, dict) {\n\n\n\n    // https://regexr.com/\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n    // Must be positioned before regex replace call\n    var replacer = function (match, p1, p2, p3, offset, string) {\n\n        return dict.get(p2);\n    }\n\n    text = text.replace(\n        /{\\s*(?<cmd>\\w*)\\s*\\{\\s*(?<params>\\w*)\\s*\\}\\s*(?<options>\\w*)\\s*\\}/g,\n        replacer\n    );\n\n    return text;\n}\n\n*/\n\n\n//#endregion\n\n/**\n * Sequence a group of items\n * @param groupElement \n */\n\nexport function sequence (groupElement: HTMLElement): void {\n \n    // Get the group name\n    const groupName = groupElement.getAttribute(\"wfu-seq-group\");\n    console.log(\"sequence group\", groupName)\n\n    // Find matching items \n    let i = 0;\n    const elements = groupElement.querySelectorAll(`[wfu-seq=\"${groupName}\"]`);\n    elements.forEach((element: Element) => {\n        element.innerHTML = (++i).toString();\n    }); \n}\n\n\n/*\n\nexport var sequence = function (l) {\n\n    const $group = $(l);\n    \n    // Get the group name\n    const groupName = $group.attr(\"wfu-seq-group\");\n\n    // Find matching items \n    var i = 0;\n    $group.find(`[wfu-seq=\"${groupName}\"]`).each(function() {\n        $(this).html(++i);\n    }); \n\n}\n\n*/\n\n\n/**\n * Shuffle array randomly\n * Fisher-Yates (also known as Knuth) shuffle \n * iterates over the array from the last element to the first, randomly choosing an element in the unshuffled portion of the array and swapping it with the current element. This provides a uniform distribution of array permutations.\n * @param array \n * @returns \n */\n\nfunction shuffleArray(array: any[]) {\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n}\n\n\n\n", "\n/*\n * webflow-crypto\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Hashing & Cryptographic Utilities\n */\n\n// xxhash64 implementation\n// Copyright 2019-2020, Yann Collet <github.com/Cyan4973>\n// Copyright 2016, Pierre Curto <github.com/pierrec>\n// Copyright 2019, Daniel Lo Nigro <github.com/Daniel15>\n// Copyright 2021, intrnl <github.com/intrnl> \n// https://codeberg.org/intrnl/js-xxhash64/src/branch/trunk/src/index.js \n\n\nconst PRIME64_1 = 11400714785074694791n;\nconst PRIME64_2 = 14029467366897019727n;\nconst PRIME64_3 = 1609587929392839161n;\nconst PRIME64_4 = 9650029242287828579n;\nconst PRIME64_5 = 2870177450012600261n;\n\nconst BITS = 64n;\nconst BITMASK = 2n ** BITS - 1n;\n\nconst encoder = new TextEncoder();\n\nfunction bitsToBigInt (a00, a16, a32, a48) {\n\treturn (\n\t\t(BigInt(a00)) |\n\t\t(BigInt(a16) << 16n) |\n\t\t(BigInt(a32) << 32n) |\n\t\t(BigInt(a48) << 48n)\n\t);\n}\n\nfunction memoryToBigInt(memory, offset) {\n\treturn (\n\t\t(BigInt(memory[offset])) |\n\t\t(BigInt(memory[offset+1]) << 8n) |\n\t\t(BigInt(memory[offset+2]) << 16n) |\n\t\t(BigInt(memory[offset+3]) << 24n) |\n\t\t(BigInt(memory[offset+4]) << 32n) |\n\t\t(BigInt(memory[offset+5]) << 40n) |\n\t\t(BigInt(memory[offset+6]) << 48n) |\n\t\t(BigInt(memory[offset+7]) << 56n)\n\t);\n}\n\nfunction rotl (value, rotation) {\n\treturn (\n\t\t((value << rotation) & BITMASK) |\n\t\t(value >> (BITS - rotation))\n\t);\n}\n\nfunction trunc (value) {\n\treturn BigInt.asUintN(64, value);\n}\n\n\nexport class XXH64 {\n\t#seed;\n\t#v1;\n\t#v2;\n\t#v3;\n\t#v4;\n\n\t#memory;\n\n\t#len;\n\t#memsize;\n\n\tconstructor (seed = 0) {\n\t\tthis.reset(seed);\n\t}\n\n\treset (seed = this.#seed) {\n\t\tthis.#seed = BigInt.asUintN(32, BigInt(seed));\n\t\tthis.#v1 = trunc(this.#seed + PRIME64_1 + PRIME64_2);\n\t\tthis.#v2 = trunc(this.#seed + PRIME64_2);\n\t\tthis.#v3 = this.#seed;\n\t\tthis.#v4 = trunc(this.#seed - PRIME64_1);\n\n\t\tthis.#memory = null;\n\n\t\tthis.#len = 0;\n\t\tthis.#memsize = 0;\n\n\t\treturn this;\n\t}\n\n\tupdate (input) {\n\t\tif (typeof input === 'string') {\n\t\t\tinput = encoder.encode(input);\n\t\t}\n\n\t\tlet p = 0;\n\t\tlet len = input.length;\n\t\tlet bEnd = p + len;\n\n\t\tif (len === 0) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.#len += len;\n\n\t\tif (this.#memsize === 0) {\n\t\t\tthis.#memory = new Uint8Array(32);\n\t\t}\n\n\t\tif (this.#memsize + len < 32) {\n\t\t\tthis.#memory.set(input.subarray(0, len), this.#memsize);\n\n\t\t\tthis.#memsize += len;\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.#memsize > 0) {\n\t\t\tthis.#memory.set(input.subarray(0, 32 - this.#memsize), this.#memsize);\n\n\t\t\tlet p64 = 0;\n\t\t\tlet other;\n\n\t\t\tother = memoryToBigInt(this.#memory, p64);\n\t\t\tthis.#v1 = trunc(rotl(trunc(this.#v1 + other * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\tp64 += 8\n\t\t\tother = memoryToBigInt(this.memory, p64)\n\t\t\tthis.#v2 = trunc(rotl(trunc(this.#v2 + other * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\tp64 += 8\n\t\t\tother = memoryToBigInt(this.memory, p64)\n\t\t\tthis.#v3 = trunc(rotl(trunc(this.#v3 + other * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\tp64 += 8\n\t\t\tother = memoryToBigInt(this.memory, p64)\n\t\t\tthis.#v4 = trunc(rotl(trunc(this.#v4 + other * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\tp += 32 - this.#memsize;\n\t\t\tthis.#memsize = 0;\n\t\t}\n\n\t\tif (p <= bEnd - 32) {\n\t\t\tconst limit = bEnd - 32;\n\n\t\t\tdo {\n\t\t\t\tlet other;\n\n\t\t\t\tother = memoryToBigInt(input, p)\n\t\t\t\tthis.#v1 = trunc(rotl(trunc(this.#v1 + other * PRIME64_2), 31n) * PRIME64_1);\n\t\t\t\tp += 8\n\n\t\t\t\tother = memoryToBigInt(input, p)\n\t\t\t\tthis.#v2 = trunc(rotl(trunc(this.#v2 + other * PRIME64_2), 31n) * PRIME64_1);\n\t\t\t\tp += 8\n\n\t\t\t\tother = memoryToBigInt(input, p)\n\t\t\t\tthis.#v3 = trunc(rotl(trunc(this.#v3 + other * PRIME64_2), 31n) * PRIME64_1);\n\t\t\t\tp += 8\n\n\t\t\t\tother = memoryToBigInt(input, p)\n\t\t\t\tthis.#v4 = trunc(rotl(trunc(this.#v4 + other * PRIME64_2), 31n) * PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t} while (p <= limit)\n\t\t}\n\n\t\tif (p < bEnd) {\n\t\t\tthis.#memory.set(input.subarray(p, bEnd), this.#memsize);\n\t\t\tthis.#memsize = bEnd - p;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tdigest () {\n\t\tlet input = this.#memory;\n\n\t\tlet bEnd = this.#memsize;\n\t\tlet p = 0;\n\t\tlet h64 = 0n;\n\t\tlet h = 0n;\n\t\tlet u = 0n;\n\n\t\tif (this.#len >= 32) {\n\t\t\th64 = rotl(this.#v1, 1n) + rotl(this.#v2, 7n) + rotl(this.#v3, 12n) + rotl(this.#v4, 18n);\n\n\t\t\th64 = trunc(h64 ^ (rotl(trunc(this.#v1 * PRIME64_2), 31n) * PRIME64_1));\n\t\t\th64 = trunc(h64 * PRIME64_1 + PRIME64_4);\n\n\t\t\th64 = trunc(h64 ^ (rotl(trunc(this.#v2 * PRIME64_2), 31n) * PRIME64_1));\n\t\t\th64 = trunc(h64 * PRIME64_1 + PRIME64_4);\n\n\t\t\th64 = trunc(h64 ^ (rotl(trunc(this.#v3 * PRIME64_2), 31n) * PRIME64_1));\n\t\t\th64 = trunc(h64 * PRIME64_1 + PRIME64_4);\n\n\t\t\th64 = trunc(h64 ^ (rotl(trunc(this.#v4 * PRIME64_2), 31n) * PRIME64_1));\n\t\t\th64 = trunc(h64 * PRIME64_1 + PRIME64_4);\n\t\t}\n\t\telse {\n\t\t\th64 = trunc(this.#seed + PRIME64_5);\n\t\t}\n\n\t\th64 += BigInt(this.#len);\n\n\t\twhile (p <= bEnd - 8) {\n\t\t\tu = memoryToBigInt(input, p);\n\t\t\tu = trunc(rotl(trunc(u * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\th64 = trunc((rotl(h64 ^ u, 27n) * PRIME64_1) + PRIME64_4);\n\t\t\tp += 8;\n\t\t}\n\n\t\tif (p + 4 <= bEnd) {\n\t\t\tu = bitsToBigInt((input[p+1] << 8) | input[p], (input[p+3] << 8) | input[p+2], 0, 0);\n\t\t\th64 = trunc((rotl(h64 ^ trunc((u * PRIME64_1)), 23n) * PRIME64_2) + PRIME64_3);\n\t\t\tp += 4;\n\t\t}\n\n\t\twhile (p < bEnd) {\n\t\t\tu = bitsToBigInt(input[p++], 0, 0, 0);\n\t\t\th64 = trunc(rotl(h64 ^ trunc(u * PRIME64_5), 11n) * PRIME64_1);\n\t\t}\n\n\t\th = trunc(h64 >> 33n);\n\t\th64 = trunc((h64 ^ h) * PRIME64_2);\n\n\t\th = trunc(h64 >> 29n);\n\t\th64 = trunc((h64 ^ h) * PRIME64_3);\n\n\t\th = trunc(h64 >> 32n);\n\t\th64 = trunc(h64 ^ h);\n\n\t\treturn h64;\n\t}\n\n    static hash (input, seed = 0) {\n        return new XXH64(seed).update(input).digest()\n            .toString(16); // Hex\n    }    \n\n}\n\n\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import \n// https://www.npmjs.com/package/blueimp-md5-es6\n// https://github.com/pvorb/node-md5/issues/52 \n// https://code.tutsplus.com/tutorials/how-to-hash-and-decrypt-with-md5-in-javascript--cms-38297\n// import CryptoJS from ''; \n\n// import * as md5 from 'https://cdnjs.cloudflare.com/ajax/libs/blueimp-md5/2.19.0/js/md5.min.js';\n\n// const toUtf8_1 = require(\"https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/toUtf8.js\");\nconst PRIME32_1 = 2654435761;\nconst PRIME32_2 = 2246822519;\nconst PRIME32_3 = 3266489917;\nconst PRIME32_4 = 668265263;\nconst PRIME32_5 = 374761393;\n\n// https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/toUtf8.js \n\nfunction toUtf8_1(text) {\n    const bytes = [];\n    const w = new Array(4);\n    const h = [0x00, 0xc0, 0xe0, 0xf0];\n    const m = [0x7f, 0x3f, 0x3f, 0x3f];\n    const p = [0x00, 0x80, 0x80, 0x80];\n    for (const char of text) {\n        const b = w;\n        const cp = char.codePointAt(0);\n        const n = 0\n            - ((-(cp & 0xffffff80) >> 31))\n            - ((-(cp & 0xfffff800) >> 31))\n            - ((-(cp & 0xffff0000) >> 31));\n        const z = m[n];\n        const y = p[n];\n        b[3] = y | (cp & z);\n        b[2] = y | ((cp >>> 6) & z);\n        b[1] = y | ((cp >>> 12) & z);\n        b[0] = y | ((cp >>> 18) & z);\n        const s = 3 - n;\n        b[s] |= h[n];\n        Array.prototype.push.apply(bytes, b.slice(s));\n    }\n    return new Uint8Array(bytes);\n}\n\n\n\nexport class XXH32 {\n\n    /**\n     *\n     * @param buffer - byte array or string\n     * @param seed - optional seed (32-bit unsigned);\n     */\n    // https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/xxHash32.js\n\n    static hash(buffer, seed = 0) {\n        buffer = typeof buffer === 'string' ? toUtf8_1(buffer) : buffer;\n        const b = buffer;\n        /*\n            Step 1. Initialize internal accumulators\n            Each accumulator gets an initial value based on optional seed input. Since the seed is optional, it can be 0.\n\n            ```\n                u32 acc1 = seed + PRIME32_1 + PRIME32_2;\n                u32 acc2 = seed + PRIME32_2;\n                u32 acc3 = seed + 0;\n                u32 acc4 = seed - PRIME32_1;\n            ```\n            Special case : input is less than 16 bytes\n            When input is too small (< 16 bytes), the algorithm will not process any stripe. Consequently, it will not\n            make use of parallel accumulators.\n\n            In which case, a simplified initialization is performed, using a single accumulator :\n\n            u32 acc  = seed + PRIME32_5;\n            The algorithm then proceeds directly to step 4.\n        */\n        let acc = (seed + PRIME32_5) & 0xffffffff;\n        let offset = 0;\n        if (b.length >= 16) {\n            const accN = [\n                (seed + PRIME32_1 + PRIME32_2) & 0xffffffff,\n                (seed + PRIME32_2) & 0xffffffff,\n                (seed + 0) & 0xffffffff,\n                (seed - PRIME32_1) & 0xffffffff,\n            ];\n            /*\n                Step 2. Process stripes\n                A stripe is a contiguous segment of 16 bytes. It is evenly divided into 4 lanes, of 4 bytes each.\n                The first lane is used to update accumulator 1, the second lane is used to update accumulator 2, and so on.\n\n                Each lane read its associated 32-bit value using little-endian convention.\n\n                For each {lane, accumulator}, the update process is called a round, and applies the following formula :\n\n                ```\n                accN = accN + (laneN * PRIME32_2);\n                accN = accN <<< 13;\n                accN = accN * PRIME32_1;\n                ```\n\n                This shuffles the bits so that any bit from input lane impacts several bits in output accumulator.\n                All operations are performed modulo 2^32.\n\n                Input is consumed one full stripe at a time. Step 2 is looped as many times as necessary to consume\n                the whole input, except the last remaining bytes which cannot form a stripe (< 16 bytes). When that\n                happens, move to step 3.\n            */\n            const b = buffer;\n            const limit = b.length - 16;\n            let lane = 0;\n            for (offset = 0; (offset & 0xfffffff0) <= limit; offset += 4) {\n                const i = offset;\n                const laneN0 = b[i + 0] + (b[i + 1] << 8);\n                const laneN1 = b[i + 2] + (b[i + 3] << 8);\n                const laneNP = laneN0 * PRIME32_2 + (laneN1 * PRIME32_2 << 16);\n                let acc = ((accN[lane] + laneNP) & 0xffffffff);\n                acc = (acc << 13) | (acc >>> 19);\n                const acc0 = acc & 0xffff;\n                const acc1 = acc >>> 16;\n                accN[lane] = (acc0 * PRIME32_1 + (acc1 * PRIME32_1 << 16)) & 0xffffffff;\n                lane = (lane + 1) & 0x3;\n            }\n            /*\n                Step 3. Accumulator convergence\n                All 4 lane accumulators from previous steps are merged to produce a single remaining accumulator\n                of same width (32-bit). The associated formula is as follows :\n\n                ```\n                acc = (acc1 <<< 1) + (acc2 <<< 7) + (acc3 <<< 12) + (acc4 <<< 18);\n                ```\n            */\n            acc = (((accN[0] << 1) | (accN[0] >>> 31))\n                + ((accN[1] << 7) | (accN[1] >>> 25))\n                + ((accN[2] << 12) | (accN[2] >>> 20))\n                + ((accN[3] << 18) | (accN[3] >>> 14))) & 0xffffffff;\n        }\n        /*\n            Step 4. Add input length\n            The input total length is presumed known at this stage. This step is just about adding the length to\n            accumulator, so that it participates to final mixing.\n\n            ```\n            acc = acc + (u32)inputLength;\n            ```\n        */\n        acc = (acc + buffer.length) & 0xffffffff;\n        /*\n            Step 5. Consume remaining input\n            There may be up to 15 bytes remaining to consume from the input. The final stage will digest them according\n            to following pseudo-code :\n            ```\n            while (remainingLength >= 4) {\n                lane = read_32bit_little_endian(input_ptr);\n                acc = acc + lane * PRIME32_3;\n                acc = (acc <<< 17) * PRIME32_4;\n                input_ptr += 4; remainingLength -= 4;\n            }\n            ```\n            This process ensures that all input bytes are present in the final mix.\n        */\n        let limit = buffer.length - 4;\n        for (; offset <= limit; offset += 4) {\n            const i = offset;\n            const laneN0 = b[i + 0] + (b[i + 1] << 8);\n            const laneN1 = b[i + 2] + (b[i + 3] << 8);\n            const laneP = laneN0 * PRIME32_3 + (laneN1 * PRIME32_3 << 16);\n            acc = ((acc + laneP) & 0xffffffff);\n            acc = (acc << 17) | (acc >>> 15);\n            acc = (((acc & 0xffff) * PRIME32_4) + (((acc >>> 16) * PRIME32_4) << 16)) & 0xffffffff;\n        }\n        /*\n            ```\n            while (remainingLength >= 1) {\n                lane = read_byte(input_ptr);\n                acc = acc + lane * PRIME32_5;\n                acc = (acc <<< 11) * PRIME32_1;\n                input_ptr += 1; remainingLength -= 1;\n            }\n            ```\n        */\n        for (; offset < b.length; ++offset) {\n            const lane = b[offset];\n            acc = acc + lane * PRIME32_5;\n            acc = (acc << 11) | (acc >>> 21);\n            acc = (((acc & 0xffff) * PRIME32_1) + (((acc >>> 16) * PRIME32_1) << 16)) & 0xffffffff;\n        }\n        /*\n            Step 6. Final mix (avalanche)\n            The final mix ensures that all input bits have a chance to impact any bit in the output digest,\n            resulting in an unbiased distribution. This is also called avalanche effect.\n            ```\n            acc = acc xor (acc >> 15);\n            acc = acc * PRIME32_2;\n            acc = acc xor (acc >> 13);\n            acc = acc * PRIME32_3;\n            acc = acc xor (acc >> 16);\n            ```\n        */\n        acc = acc ^ (acc >>> 15);\n        acc = ((acc & 0xffff) * PRIME32_2 & 0xffffffff) + ((acc >>> 16) * PRIME32_2 << 16);\n        acc = acc ^ (acc >>> 13);\n        acc = ((acc & 0xffff) * PRIME32_3 & 0xffffffff) + ((acc >>> 16) * PRIME32_3 << 16);\n        acc = acc ^ (acc >>> 16);\n        // turn any negatives back into a positive number;\n        return acc < 0 ? acc + 4294967296 : acc;\n    }\n\n}\n\n//https://cdnjs.com/libraries/crypto-js\n\n// https://cryptojs.gitbook.io/docs/ \n// https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/md5.min.js \n// https://stackoverflow.com/questions/56280825/crypto-js-module-is-imported-but-does-not-work-as-expected \n// import \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/core.min.js\";\n//import * as CryptoJS from \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"\n//  import HmacMD5 from \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/hmac-md5.min.js\";\n\n// import * as CryptoJS from \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/md5.js\"; \n\n// import * as XXH from \"https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/xxHash32.js\";\n//import * as xx from \"https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/index.js\"; \n// import { xxHash32 } from \"https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/index.js\";\n// https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/index.js\n\n// https://github.com/bryc/code/blob/master/jshash/hashes/murmurhash3.js\nfunction MurmurHash3(key, seed = 0) {\n    var k, p1 = 3432918353, p2 = 461845907, h = seed | 0;\n\n    for(var i = 0, b = key.length & -4; i < b; i += 4) {\n        k = key[i+3] << 24 | key[i+2] << 16 | key[i+1] << 8 | key[i];\n        k = Math.imul(k, p1); k = k << 15 | k >>> 17;\n        h ^= Math.imul(k, p2); h = h << 13 | h >>> 19;\n        h = Math.imul(h, 5) + 3864292196 | 0; // |0 = prevent float\n    }\n\n    k = 0;\n    switch (key.length & 3) {\n        case 3: k ^= key[i+2] << 16;\n        case 2: k ^= key[i+1] << 8;\n        case 1: k ^= key[i];\n                k = Math.imul(k, p1); k = k << 15 | k >>> 17;\n                h ^= Math.imul(k, p2);\n    }\n\n    h ^= key.length;\n\n    h ^= h >>> 16; h = Math.imul(h, 2246822507);\n    h ^= h >>> 13; h = Math.imul(h, 3266489909);\n    h ^= h >>> 16;\n\n    return h >>> 0;\n}", "\n/*\n * webflow-membership\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Member Information Utilities\n */\n\nimport { XXH64 } from '../webflow-crypto';\nimport { toTitleCase, getCookie } from '../utils';\n//import { WfuDebug } from './webflow-core.js';\n\nimport { Sa5Core } from '../webflow-core';\nimport { Sa5Debug } from '../webflow-core/debug';\n\n    \n\n\n/*\n * User class.\n */\n\n//import Md5 from \"crypto-api/src/hasher/md5\";\nexport class Sa5User {\n\n    // Track what data has been loaded\n    user_data_loaded = {\n        email: false,\n        account_info: false,\n        custom_fields: false,\n        access_groups: false\n    };\n\n    // Webflow data\n    user_id; // Webflow user_id\n\n    get user_id_alt() {\n        if (!this.email)\n            return undefined;\n\n        return XXH64.hash(this.email);\n    }\n\n    accept_communications;\n\n    email;\n\n    name;\n\n    get name_short_clean() {\n\n        if (!this.email)\n            return undefined;\n\n        // if (this.email == {}) \n        //     return undefined;\n\n        return this.email.split(\"@\")[0];\n    }\n    get name_short() { // @ segment of email\n\n        if (!this.email)\n            return undefined;\n\n        return this.name_short_clean + '@';\n    }\n    get name_short_tcase() {\n\n        if (!this.email)\n            return undefined;\n\n        return toTitleCase(this.name_short_clean);\n    }\n   \n    // access-groups\n    access_groups = [];\n\n    // User data\n    data = {}; // = new Map();\n\n    // Meta data\n    meta = {}; //  = new Map();\n\n    constructor() {\n\n    }\n\n    isLoggedIn = function() {\n\n        return getCookie(\"wf_loggedin\") || false;\n    }\n\n    fromJSON(json) {\n\n        if (!json)\n            return; // no data to load \n\n        this.user_id = json.user_id;\n        this.name = json.name;\n        this.email = json.email;\n\n        this.accept_communications = json.accept_communications; \n        this.access_groups = json.access_groups;\n\n        this.data = json.data;\n\n        this.user_data_loaded.email = json.user_data_loaded.email;\n        this.user_data_loaded.account_info = json.user_data_loaded.account_info;\n        this.user_data_loaded.custom_fields = json.user_data_loaded.custom_fields;\n        this.user_data_loaded.access_groups = json.user_data_loaded.access_groups;\n    }\n\n    /** \n    toJSON2() {\n        return {\n            \"user_id\": this.user_id,\n            \"name\": this.name,\n            \"email\": this.email,\n            \"accept_communications\": this.accept_communications,\n            \"access_groups\": this.access_groups, \n            \"user_data_loaded\": {\n                \"email\": this.email,\n                \"account_info\": this.account_info,\n                \"custom_fields\": this.custom_fields,\n                \"access_groups\": this.access_groups\n            }\n        }\n    }\n    */\n\n}\n\n", "\n/*\n * webflow-membership\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Member Information Utilities\n */\n\nimport { XXH64 } from './webflow-crypto';\nimport { toTitleCase, getCookie } from './utils';\n\nimport { Sa5Core } from './webflow-core';\nimport { Sa5Debug } from './webflow-core/debug';\nimport { Sa5User } from './webflow-membership/user'; \n\nimport { WfuDataBinder } from './webflow-databind';\nimport { Sa5GlobalEvent } from './globals';\n\nconst StorageKeys = Object.freeze({\n    user: 'wfuUser',\n    userKey: 'wfuUserKey',\n});\n\ntype UserInfoChangedCallback = (user: Sa5User) => void;\n\ninterface Sa5MembershipConfig {\n//    loadUserInfoCallback?: ((user: Sa5User) => void) | undefined; // Function callback \n    userInfoUpdatedCallback?: UserInfoChangedCallback; \n//    userLogoutPurge?: ((user: Sa5User) => void) | undefined;\n\n    debug?: boolean;\n\n    dataBind?: boolean; // Databind after user object load \n\n    // Advanced settings\n    advanced: {\n\n        accountInfoLoadDelay: number; // ms \n        accountInfoSaveDelay: number; // ms \n\n    }\n}\n\n\n/**\n * Memberships \n */\n\nexport class Sa5Membership {\n\n    debug: Sa5Debug;\n\n    config: Sa5MembershipConfig; // Optional config\n\n    // Type guard to check if a function is a UserInfoChangedCallback\n    private isUserInfoChangedCallback(func: Function): func is UserInfoChangedCallback {\n\n        if(!func) return false;\n\n        // Adjust this check as needed\n        return func.length === 1;\n    }\n\n    constructor(config: Partial<Sa5MembershipConfig> = {}) {\n\n        // Merge configs, with defaults\n        this.config = {\n            userInfoUpdatedCallback: config.userInfoUpdatedCallback,\n            debug: config.debug ?? false,\n            dataBind: config.dataBind ?? true,\n            advanced: {\n                accountInfoLoadDelay: \n                    config.advanced?.accountInfoLoadDelay ?? 300,\n                accountInfoSaveDelay: \n                    config.advanced?.accountInfoSaveDelay ?? 500,\n            },\n        }\n\n        let core: Sa5Core = Sa5Core.startup();\n\n        // Initialize debugging\n        this.debug = new Sa5Debug(\"sa5-membership\");\n        this.debug.debug (\"Initializing\");\n\n        // Load config\n\n        // Get any global handler\n        const userInfoChanged = core.getHandler(Sa5GlobalEvent.EVENT_USER_CHANGED); \n        if (this.isUserInfoChangedCallback(userInfoChanged)) {\n\n            this.config.userInfoUpdatedCallback = userInfoChanged;\n\n        }\n\n    }\n\n    init() {\n\n        // // Suppress IFRAME loads & user-account page loads \n        // // BUG: \n        // if (window.self != window.top)\n        //     return;\n        // if (window.location.pathname == `/user-account`) \n        //     return;\n\n        this.debug.group(`WfuUserInfo init - ${Date.now()}.`);\n\n        // Install listeners \n        // to listen for login events \n        // https://stackoverflow.com/questions/9347282/using-jquery-preventing-form-from-submitting \n        // https://stackoverflow.com/questions/11469616/jquery-form-validation-before-ajax-submit\n\n        // Select the form\n        let forms = document.querySelectorAll(\"form[data-wf-user-form-type='login']\");\n\n        // For each form\n        forms.forEach((form) => {\n            // Add a submit event listener\n            form.addEventListener('submit', (e) => {\n                // e.preventDefault();\n                // e.stopPropagation();\n\n                // On a login event, capture and save email temporarily \n                let emailInput = form.querySelector(\"#wf-log-in-email\") as HTMLInputElement;\n                let userEmail = emailInput.value;\n\n                let userKey = btoa(userEmail);\n                localStorage.setItem('StorageKeys.userKey', userKey); \n            });\n        });\n\n        forms = document.querySelectorAll(\"form[data-wf-user-form-type='userAccount']\");     \n\n        // For each form\n        forms.forEach((form) => {\n            // Add a submit event listener\n            form.addEventListener('submit', (e) => {\n                // e.preventDefault();\n                // e.stopPropagation();\n\n                setTimeout(async () => {\n\n//                    console.log(\"New User info saved\");\n\n                    // Refresh user info\n                    await this.loadUserInfoAsync();\n\n//                    console.log(\"User info refreshed\");\n\n                }, this.config.advanced.accountInfoSaveDelay);\n\n            });\n        });\n\n        // Call on every page on load.\n        this.readyUserInfo();\n\n        this.debug.groupEnd();\n    \n    }\n\n    isLoggedIn() {\n\n        return getCookie(\"wf_loggedin\") || false;\n    }\n\n    clearUserInfo() {\n\n        this.debug.group(\"clearUserInfo\");\n\n        this.debug.debug (\"logged out, cleaning info.\"); \n        \n        sessionStorage.removeItem(StorageKeys.user); \n        localStorage.removeItem(StorageKeys.userKey); \n\n        // Notify listeners \n        // if (this.config.userLogoutPurge)\n        //     this.config.userLogoutPurge(); // async \n\n            this.debug.groupEnd();\n\n    }\n\n    // setDomainCookie = function(key, value, expires) {\n\n    //     const domain = location.hostname;\n\n    // }\n\n    // Loads user info, from local and server data.\n    // readying it for use. \n    // Should be called on every page at the start. \n    async readyUserInfo() {\n\n        this.debug.group(\"readyUserInfo\");\n        \n        // If not logged in\n        // clear user tracking \n        if(!this.isLoggedIn()) { \n            this.clearUserInfo(); \n\n            this.debug.groupEnd();\n            return;\n        }\n    \n        // Load or create blank\n        var user = this.loadUserInfoCache();\n        if (user) {\n\n            // Databinding\n            if(this.config.dataBind) {\n                this.debug.debug(\"databinding\", user);\n                new WfuDataBinder(null, {\n                    user: user\n                }).bindAll(); \n            }\n\n            // User Callback \n            if (this.config.userInfoUpdatedCallback) {\n                this.debug.debug(\"userCallback\", user);\n                this.config.userInfoUpdatedCallback(user); // async\n            }\n\n        }\n\n        // If no cached user, load it \n        if (!user)\n            // user = \n            await this.loadUserInfoAsync();\n\n        this.debug.groupEnd();\n\n    }\n\n    async getUserKey() {\n\n        var userKey;\n        \n        // Get cached version if possible\n        const userKeyEncoded = localStorage.getItem(StorageKeys.userKey);\n        if (userKeyEncoded) {\n            return atob(userKeyEncoded);\n        }\n\n    }\n\n    //#region CONSTRUCT USER INFO OBJECT\n\n    // Loads user info, from local and server data.\n    // readying it for use. \n    // Should be called on every page at the start. \n    async loadUserInfoAsync() {\n        this.debug.group(\"loadUserInfoAsync\");\n\n        this.debug.debug(`isLoggedIn = ${this.isLoggedIn()}`); \n        \n        // If not logged in\n        // clear user tracking \n        if(!this.isLoggedIn()) { \n            this.clearUserInfo(); \n\n            this.debug.groupEnd();\n            return;\n        }\n\n        // Remove user\n        sessionStorage.removeItem(StorageKeys.user);\n\n        // Load layers asynchronously\n        // for maximum performance\n        // merge dynamically as results are gathered\n        this.loadUserInfoAsync_loginInfo(); // async\n        this.loadUserInfoAsync_accountInfo(); // async\n        this.loadUserInfoAsync_accessGroups(); // async\n    \n        // Load or create blank\n\n        this.debug.groupEnd();\n\n    }\n\n    // Get account info\n    // from cache \n    async loadUserInfoAsync_loginInfo() { \n\n        this.debug.group(\"loadUserInfoAsync_loginInfo\");\n     \n        // Create blank\n        var user = new Sa5User();\n        user.user_data_loaded.email = true;\n\n        const userKey = await this.getUserKey();\n        if (!userKey) {\n            // Logged in but no userKey\n            // Typically happens on first login from sign-up auth \n            this.debug.debug(\"No user key for loading.\"); \n\n            this.debug.groupEnd();\n            return;\n        }\n\n        // Loaded successfully\n\n        user.email = userKey;\n\n        // Cache locally (email only)\n        this.debug.debug(\"Caching user object [login].\", user);\n        this.saveUserInfoCache(user); \n\n        // // Hydrate user object with other data \n        // if (this.config.loadUserInfoCallback) {\n        //     await this.config.loadUserInfoCallback(user);\n\n        //     // Cache locally ( updated )\n        //     this.saveUserInfoCache(user); \n        // }\n\n        // Notify listeners\n        // if (this.config.userInfoUpdatedCallback)\n        //     this.config.userInfoUpdatedCallback(user); // async\n\n        this.debug.groupEnd();\n    }\n\n    // Get account info \n    // from /user-account page \n    async loadUserInfoAsync_accountInfo() {\n\n        this.debug.group(\"loadUserInfoAsync_accountInfo\");\n\n        // Suppress IFRAME loads & user-account page loads \n        if (window.self != window.top) {\n            return;\n        }\n\n        // Create the iframe element\n        let userInfoPixel = document.createElement('iframe');\n        userInfoPixel.src = \"/user-account\";\n        userInfoPixel.id = \"userInfoPixel\";\n        userInfoPixel.style.display = \"none\";\n\n        // Append the iframe to the body\n        document.body.append(userInfoPixel);\n\n        // Add a \"load\" event listener\n        userInfoPixel.addEventListener(\"load\", async () => {\n\n            this.debug.debug(\"Loading user account info.\"); \n            this.debug.debug(`%c here`, \"color: #ff0000; background-color: yellow;\"); \n\n            // Create blank\n            var user = new Sa5User();\n            user.user_data_loaded.email = true; \n            user.user_data_loaded.account_info = true; \n            user.user_data_loaded.custom_fields = true; \n\n//            user.user_data_loaded.access_groups = true;\n\n//             var $userAccountEmail = await userInfoPixel.contents().find(\"input#wf-user-account-email\");\n\n            let userAccountEmailInput: HTMLInputElement | null = null;\n\n            if (userInfoPixel.contentDocument) {\n                userAccountEmailInput = userInfoPixel.contentDocument.querySelector(\"input#wf-user-account-email\");\n            } else if (userInfoPixel.contentWindow) {\n                userAccountEmailInput = userInfoPixel.contentWindow.document.querySelector(\"input#wf-user-account-email\");\n            }\n            \n            if (!userAccountEmailInput) {\n                return;\n            }\n            \n            // Detect programmatic changes on input type text [duplicate]\n            // https://stackoverflow.com/a/72223895\n            const input = userAccountEmailInput; // $userAccountEmail[0];\n            const desc = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, \"value\");\n            Object.defineProperty(input, \"value\", {\n                get: desc.get,\n                set: function(v) {\n\n                    desc.set.call(this, v);\n\n                    // How can I trigger an onchange event manually? [duplicate]\n                    // https://stackoverflow.com/a/2856602\n                    if (\"createEvent\" in document) {\n\n                        var evt = document.createEvent(\"HTMLEvents\");\n                        evt.initEvent(\"change\", false, true);\n                        input.dispatchEvent(evt);\n\n                    } else {\n\n                        if (userAccountEmailInput) {\n                            // Create a new event\n                            let event = new Event('change', {\n                              bubbles: true,\n                              cancelable: true\n                            });\n                          \n                            // Dispatch the event\n                            userAccountEmailInput.dispatchEvent(event);\n                          }\n                          \n                    }\n//                    input.fireEvent(\"onchange\");\n\n                }\n            });\n\n            // setting up input change event \n            userAccountEmailInput.addEventListener(\"change\", async () => {\n\n                this.debug.debug(\"email field load detected.\");\n\n                this.debug.debug(`waiting ${this.config.advanced.accountInfoLoadDelay}ms`);\n\n                setTimeout(async () => {\n\n                    this.debug.debug(`%c USER-ACCOUNT LOADED`, \"color: #ff0000; background-color: yellow;\"); \n\n                    const userKey = userAccountEmailInput.value;\n\n                    user.email = userKey;\n\n                    // Get pixel \n                    let doc = userInfoPixel.contentDocument || userInfoPixel.contentWindow?.document;\n\n                    if (doc) {\n\n                        let userNameElement = doc.querySelector(\"[data-wf-user-field='wf-user-field-name']\") as HTMLInputElement;\n                        if (userNameElement) {\n                            user.name = userNameElement.value;\n                        }\n                        \n                        // Accept_communications, if defined \n                        let acceptCommunicationsCheckbox = doc.querySelector(\"#wf-user-account-accept-communications\") as HTMLInputElement;\n                        if (acceptCommunicationsCheckbox) {\n                            user.accept_communications = acceptCommunicationsCheckbox.checked;\n                        }\n                        \n                        // User data fields, if defined \n                        let userDataFields = doc.querySelectorAll(\"[data-wf-user-field]\");\n                        userDataFields.forEach((element) => {\n\n                            const id = element.id; \n                            const fieldType = element.getAttribute(\"data-wf-user-field-type\"); \n                            let val = (element as HTMLInputElement).value;\n\n                            if (!id)\n                                return;\n\n                            if (id.startsWith(\"wf-user-account-\"))\n                                return;\n\n                            switch(fieldType) {\n                                case \"PlainText\": // 256 char max \n                                case \"Email\":\n                                case \"Link\":\n                                case \"Option\":\n                                    user.data[id] = val;\n                                    return;\n\n                                case \"Number\": // step min max\n                                    user.data[id] = val; \n                                    return;\n\n                                case \"Bool\": // checkbox\n                                    let checkbox: HTMLInputElement = element as HTMLInputElement;\n                                    user.data[id] = checkbox.checked; \n                                    return;\n\n                                case \"FileRef\": // file - suppressed \n                                    break;\n                            }\n\n                        });\n\n                    }\n\n                    this.debug.debug(\"Final version\", user); \n\n                    // Cache locally (email only)\n                    this.debug.debug(\"Caching user object [account_info].\", user);\n                    this.saveUserInfoCache(user); \n            \n                    // // Hydrate user object with other data \n                    // if (this.config.loadUserInfoCallback) {\n                    //     await this.config.loadUserInfoCallback(user);\n            \n                    //     // Cache locally ( updated )\n                    //     this.saveUserInfoCache(user); \n                    // }\n            \n                    // // Notify listeners\n                    // if (that.config.userInfoUpdatedCallback)\n                    //     that.config.userInfoUpdatedCallback(user); // async\n\n                }, this.config.advanced.accountInfoLoadDelay\n                );\n\n            });\n\n            this.debug.groupEnd();\n        }); \n\n    }\n\n    async loadUserInfoAsync_accessGroups() {\n\n        this.debug.group(\"loadUserInfoAsync_accessGroups\");\n        this.debug.debug(\"Not yet implemented.\");\n        this.debug.groupEnd();\n\n    }\n\n    //#endregion\n\n    //#region USER CACHE\n\n    saveUserInfoCache(newUserData) {\n        \n        this.debug.group(\"saveUserInfoCache\");\n\n        if(!this.isLoggedIn) {\n            this.debug.debug(\"no user logged in.\"); \n            this.debug.groupEnd();\n            return null; \n        }\n\n        // Smart merge \n        // https://www.javascripttutorial.net/object/javascript-merge-objects/ \n        // https://masteringjs.io/tutorials/fundamentals/merge-two-objects \n        var userData = this.loadUserInfoCache();\n        if (!userData)\n            userData = new Sa5User();\n\n        if (newUserData.user_data_loaded.email) {\n            this.debug.debug(\"Merging user email.\");\n            userData.email = newUserData.email;\n        }\n        if (newUserData.user_data_loaded.account_info) {\n            this.debug.debug(\"Merging user account_info.\");\n            userData.email = newUserData.email;\n            userData.name = newUserData.name;\n            userData.accept_communications = newUserData.accept_communications;\n        }\n        if (newUserData.user_data_loaded.custom_fields) {\n            this.debug.debug(\"Merging user custom_fields.\");\n            userData.data = newUserData.data; \n        }\n        if (newUserData.user_data_loaded.access_groups) {\n            this.debug.debug(\"Merging user access_groups.\");\n            // Not yet implemented.\n        }\n\n        // Coalesge loaded info \n        userData.user_data_loaded.email = userData.user_data_loaded.email || newUserData.user_data_loaded.email;\n        userData.user_data_loaded.account_info = userData.user_data_loaded.account_info || newUserData.user_data_loaded.account_info;\n        userData.user_data_loaded.custom_fields = userData.user_data_loaded.custom_fields || newUserData.user_data_loaded.custom_fields;\n        userData.user_data_loaded.access_groups = userData.user_data_loaded.access_groups || newUserData.user_data_loaded.access_groups;\n\n        this.debug.debug(\"new user\", newUserData);\n\n        this.debug.debug(\"merged\", userData); // Merged \n\n        sessionStorage.setItem(StorageKeys.user,\n            btoa(JSON.stringify(userData)) // , jsonMapReplacer))\n            ); \n\n        // Databinding\n        if(this.config.dataBind) {\n            this.debug.debug(\"databinding\", userData);\n            new WfuDataBinder(\n                null, // datastore \n                {\n                    user: userData\n                }).bindAll(); \n        }\n\n        // Notify listeners \n//        console.log(\"%cchecking for handler\", \"background-color: yellow;\");\n\n        if (this.config.userInfoUpdatedCallback) {\n//            console.log(\"%ccalling handler\", \"background-color: yellow;\");\n            this.debug.debug(\"Notify listeners\", userData); // Merged \n\n            this.userInfoUpdatedCallback(userData); \n//            this.config.userInfoUpdatedCallback(userData); // async\n        }\n//this.userInfoUpdatedCallback\n        this.debug.groupEnd();\n    }\n\n    loadUserInfoCache() { \n\n        this.debug.group(\"loadUserInfoCache\");\n\n        if(!this.isLoggedIn) {\n            this.debug.debug(\"No user logged in.\");\n            this.debug.groupEnd();\n            return null; \n        }\n\n        const userInfo = sessionStorage.getItem(StorageKeys.user); \n\n        if(!userInfo) {\n            this.debug.debug(\"No user info to load.\");\n            this.debug.groupEnd();\n            return null;\n        } \n\n        this.debug.debug(userInfo);\n        this.debug.debug(\"getting user.\"); \n\n        // De-serialize User \n        const user = new Sa5User();\n        user.fromJSON(\n           JSON.parse(atob(userInfo)) //, jsonMapReviver)\n        );\n\n        this.debug.groupEnd();\n\n        return user;\n    } \n\n    //#endregion\n\n    //#region MEMBERSHIPS UX\n\n    // Expanded login button\n    // Used on a containing DIV to expand the trigger area of \n    // Webflow's Log-In / Log-Out button  \n    expandLoginButton($elem) {\n\n        // Get Webflow Login/Logout button\n        const $wfLoginButton = $elem.find(\"[data-wf-user-logout]\");\n\n        // Setup click event handler on outer DIV\n        $elem.click(function() {\n            // Click inner element\n            $wfLoginButton.trigger('click');\n        });\n\n        // Also interecept and stop propogation so event is not doubled\n        $wfLoginButton.click(function(e) {\n            e.stopPropagation();\n        });\n\n    }\n\n    //#endregion\n\n    //#region EVENT\n\n    // Breakpoint changed\n    // loadUserInfoCallback = ((user: Sa5User) => {\n\n    //     // Notify any config-specified handler\n    //     if(this.config.loadUserInfoCallback) \n    //         this.config.loadUserInfoCallback(\n    //             user\n    //         ); \n\n    // });\n\n    // User Info Updated\n    userInfoUpdatedCallback = ((user: Sa5User) => { \n\n//        console.log(\"%ccalled handler\", \"background-color: yellow;\", user);\n\n        // Notify any config-specified handler\n        if(this.config.userInfoUpdatedCallback) \n            this.config.userInfoUpdatedCallback(\n                user\n            ); \n\n    });\n\n    // Breakpoint changed\n    // userLogoutPurge = ((user: Sa5User) => {\n\n    //     // Notify any config-specified handler\n    //     if(this.config.userLogoutPurge) \n    //         this.config.userLogoutPurge(\n    //             user\n    //         ); \n\n    // });\n\n    //#endregion\n\n}\n", "\n/**\n * SA5 \n * Default Template Handler \n * Data-Binding Content Template Handler\n * \n * - Straightforward handling of {{ }} constructions\n * - Full support for SA5 data-binding syntax \n */\n\nimport { WfuDataBinder, Sa5DataSourceDescriptor } from \"../../webflow-databind\";\n\nexport class DefaultTemplateHandler {\n\n    _dataBinder: WfuDataBinder;\n\n    constructor(dataBinder: WfuDataBinder) {\n      this._dataBinder = dataBinder;\n    }\n\n    processElement(elem: HTMLElement) {\n\n        let html = elem.innerHTML; \n\n        // Use the replace function with a regex to find and replace {{...}} constructions\n        html = html.replace(/{{(.*?)}}/g, (match: string, p1: string) => {\n            return this.processItem(p1, elem); \n        });\n\n        elem.innerHTML = html; \n    }\n\n    processItem(dsdSpecifier: string, elem: HTMLElement): string {\n\n      let dsd = new Sa5DataSourceDescriptor(dsdSpecifier);\n      return this._dataBinder.getData(dsd, elem); \n\n    }\n\n}\n\n", "\n/*\n * Sygnal Technology Group\n * http://sygnal.com\n *\n * Data-binding functions.\n */\n\n//import { csvToObjects } from './webflow-data-csv.js';\n//import { prepareCollectionListDataSource } from '../datasources/webflow-collectionlist-data.js';\n//import { loadGoogleSheetFromSpec } from '../datasources/google-sheet-data.js';\nimport { HtmlBuilder } from './webflow-html-builder';\n\n//import { Database } from './webflow-data.js';\nimport { Sa5Membership } from './webflow-membership';\nimport { Sa5User } from './webflow-membership/user';\nimport { booleanValue, getCookie, identifyElement, selectOptionByValue } from './utils'; \n//import Handlebars from \"handlebars\";\nimport { HandlebarsTemplateHandler } from './webflow-databind/template/handlebars-template-handler';\nimport { DefaultTemplateHandler } from './webflow-databind/template/default-template-handler';\nimport { Sa5Datastore } from './webflow-data';\nimport { Sa5Attribute } from './globals';\n\n/*\n * DATA BINDER\n */\n\n// const DataSourceType = Object.freeze({\n//     db: 'db', // + // $db\n//     user: 'user', // @ // $user\n//     query: 'query', // ? // $query\n//     // cookie\n//     // local/session \n\n// });\n\nenum DataSourceTypeEnum {\n    DB = 'db', // + // $db\n    USER = 'user', // @ // $user\n    URL = 'url', // $url\n    QUERY = 'query', // ? // $query\n    LOCAL_STORAGE = 'local', // $local\n    SESSION_STORAGE = 'session', // $session\n    COOKIE = 'cookie', // $cookie\n}\n\n\n// function getKeyByValue(enumObj: any, value: string) {\n//     return Object.keys(enumObj).find(key => enumObj[key] === value);\n// }\n// function getDataSourceTypeEnum(myEnum, enumValue){\n//     let keys = Object.keys(myEnum).filter(x => myEnum[x] == enumValue);\n//     return keys.length > 0 ? keys[0] : null;\n// }\n\ninterface Sa5DataBinderConfig {\n\n    db?: string;\n    user?: Sa5User;\n    handlers: [];\n\n}\n\n// var dataBinderConfig = {\n//     db: undefined,\n//     user: undefined,\n//     handlers: [\n//     ]\n// }\n\nexport class Sa5DataSourceDescriptor {\n    \n    type: DataSourceTypeEnum;\n\n    name: string;\n\n    identifier: string;\n    identifierParts: string[];\n\n    get isValid(): boolean {\n        if (!this.name) return false;\n        if (!this.type) return false;\n        return true;\n    }\n\n    constructor(dataSourceDescriptor: string) {\n\n        this.parse(dataSourceDescriptor); \n    }\n\n    expandDataSourceTypeAbbr(dsd: string): string { \n\n        const DSN_TYPE_ABBR = {\n\n            \"@\": \"$user\",\n            \"+\": \"$db\",\n            \"?\": \"$query\",\n\n             // Reserved for future use\n            \"!\": \"$unknown\", \n            \"#\": \"$unknown\",\n            \"%\": \"$unknown\",\n            \"^\": \"$unknown\",\n            \"&\": \"$unknown\",\n            \"*\": \"$unknown\",\n            \"=\": \"$unknown\",\n            \"-\": \"$unknown\",\n            \"~\": \"$unknown\",\n            // / < > ; : \\ _  \n\n        };        \n\n        if (DSN_TYPE_ABBR.hasOwnProperty(dsd[0])) {\n            return DSN_TYPE_ABBR[dsd[0]] + '.' + dsd.slice(1);\n        }\n\n        return dsd;\n    }\n\n    // Parse the type of the dsn\n    parse(dsd: string): void {\n\n        this.name = undefined;\n        this.type = undefined;\n\n        // Clean whitespace \n        dsd = dsd.trim();\n\n        // If DSN Type is abbr, expand it\n        dsd = this.expandDataSourceTypeAbbr(dsd); \n\n        let parts = dsd.split('.');\n\n        // Resolve to type\n        // Extract & prepare DSN type part\n        var dsnTypeName = parts.shift(); \n\n        if(dsnTypeName[0] != '$') {\n            return; // bad DSD \n        }\n\n        dsnTypeName = dsnTypeName.slice(1); \n\n        // Parts \n        this.identifierParts = parts;\n        this.name = this.identifierParts.join('.');\n\n//        console.log(\"parse\", this.type, dsnTypeName); \n\n        // function getKeyByValue(value: string): DataSourceTypeEnum {\n        //     return Object.keys(DataSourceTypeEnum).find(key => DataSourceTypeEnum[key] === value) as DataSourceTypeEnum;\n        // }\n\n        this.type = dsnTypeName as DataSourceTypeEnum;\n\n//        this.type = getKeyByValue(dsnTypeName);\n\n        // let keys = Object.keys(DataSourceTypeEnum).filter(x => DataSourceTypeEnum[x] == dsnTypeName);\n        // this.type = (keys.length > 0 ? keys[0] : null) as DataSourceTypeEnum;\n\n//        console.log(\"parse after type\", this.type, DataSourceTypeEnum.QUERY);\n\n//console.log(this); \n\n    }\n\n}\n\nexport class WfuDataBinder {\n\n    store: Sa5Datastore;\n\n    config: Sa5DataBinderConfig; // config\n\n    constructor(store: Sa5Datastore, config: Partial<Sa5DataBinderConfig> = {}) {\n\n        this.store = store;\n\n//          this.config = $.extend({}, dataBinderConfig, config);\n//        this.config = {...dataBinderConfig, ...config};\n        // Merge configs, with defaults\n        this.config = {\n//            userInfoUpdatedCallback: config.userInfoUpdatedCallback,\n            db: config.db ?? null,\n            user: config.user ?? null,\n            handlers: [], \n        }\n    \n        // If no user found, load the current one if available\n        if (!this.config.user)\n            this.config.user = new Sa5Membership().loadUserInfoCache();\n\n    }\n\n\n\n    /* Bind all data sources\n    * tagged with [wfu-bind]\n    */\n    bindAll() {\n\n// NOCODE layer\n// Build datasources\n// find elements\n// do binding \n//      passing elements and datasources db \n\n        // BUG?? should be in nocode? \n        // Find all elements which specify a data-source for data binding\n        // Iterate and bind each individually\n        let dataBind = document.querySelectorAll(\n            `[${Sa5Attribute.ATTR_DATABIND}]`); // wfu-bind\n        dataBind.forEach((elem: HTMLElement) => {\n\n            this.bind(elem); \n//            elem.removeAttribute(Sa5Attribute.ATTR_DATABIND); // \"wfu-bind\"\n            elem.removeAttribute(Sa5Attribute.ATTR_PRELOAD); // \"wfu-bind\"\n\n        }); \n\n        // Bind content \n        let dataBindContent = document.querySelectorAll(\n            `[${Sa5Attribute.ATTR_DATABIND_CONTENT}]`); // wfu-bind-content \n        dataBindContent.forEach((elem: HTMLElement) => {\n\n            this.bindContent(elem); \n//            elem.removeAttribute(Sa5Attribute.ATTR_DATABIND_CONTENT); // \"wfu-bind-content\"\n            elem.removeAttribute(Sa5Attribute.ATTR_PRELOAD); // \"wfu-bind\"\n\n        }); \n\n    }\n\n    // Search upward through the DOM for a context for this element \n    // typically used for [wfu-bind-dsn] and [wfu-bind-item-id]\n    findContextSetting(element: HTMLElement, attr: string) {\n        while (element) {\n            if (element.getAttribute(attr) !== null) {\n              return element.getAttribute(attr);\n            }\n            element = element.parentElement;\n        }\n        return null; // no context found\n    }\n\n    bind(elem: HTMLElement) {\n\n        // Determine bind type \n        let dsnDescriptor = elem.getAttribute(Sa5Attribute.ATTR_DATABIND); // \"wfu-bind\" \n\n        let dsn = new Sa5DataSourceDescriptor(dsnDescriptor); \n\n        // is valid \n        if(!dsn.isValid) {\n            console.error(\"Invalid dsn.\", dsn);\n            return; \n        }\n\n        // Get data\n        let val: string = null;\n        val = this.getData(\n            dsn, \n            elem // as additioanl context, e.g. [wfu-bind-dsn] and [wfu-bind-item-id] contexts \n            ); \n\n        // Handle null situation \n        // BUG: differentiate no result v. empty result \n        if (!val) return;\n\n        // Bind data\n        switch(identifyElement(elem)) {\n            case 'HTMLLinkElement':\n\n                (elem as HTMLLinkElement).href = val;\n\n                break;\n            case 'HTMLCheckboxElement':\n\n                (elem as HTMLInputElement).checked = booleanValue(val);\n\n                break;\n            case 'HTMLRadioElement':\n                break;\n            case 'HTMLFileInputElement':\n                break;\n            case 'HTMLInputElement':\n\n                (elem as HTMLInputElement).value = val;\n\n                break;\n            case 'HTMLSelectElement':\n\n                selectOptionByValue(\n                    (elem as HTMLSelectElement),\n                    val\n                );\n\n                break;\n            case 'HTMLTextAreaElement':\n\n                (elem as HTMLInputElement).value = val;\n\n                break;\n            case 'HTMLButtonElement':\n                break;\n            default:\n\n                // Bind other element \n                elem.textContent = val;\n\n                break;\n\n        }\n\n    }\n    \n    // Binds content in a template \n    bindContent(elem: HTMLElement) {\n\n        new DefaultTemplateHandler(this).processElement(elem);\n\n    }\n\n    // Resolve the DSD to a value \n    // or null if none found  \n    getData(dsd: Sa5DataSourceDescriptor, elem: HTMLElement = null): string {\n\n// console.log(\"getdata dsd\", dsd);\n// console.log(\"getdata dsd.type\", dsd.type, DataSourceTypeEnum.QUERY); \n\n        switch(dsd.type) {\n            case DataSourceTypeEnum.USER:\n                return this.getData_user(\n                    dsd\n                );\n            case DataSourceTypeEnum.DB:\n\n                let dsnContext = this.findContextSetting(elem, \n                    Sa5Attribute.ATTR_DATABIND_CONTEXT_DSN ); // \"wfu-bind-dsn\"\n                let itemContext = this.findContextSetting(elem, \n                    Sa5Attribute.ATTR_DATABIND_CONTEXT_ITEM_ID ); // \"wfu-bind-item-id\" \n\n                // if(elemContext) {\n                //     dsnContext = elemContext.getAttribute(\"wfu-bind-dsn\");\n                //     itemContext = elemContext.getAttribute(\"wfu-bind-item-id\");\n                // }\n\n                // console.log(\"getData db elem\", elemContext); \n                // console.log(\"getData db\", dsnContext, itemContext); \n\n                return this.getData_db(\n                    dsd,\n                    dsnContext,\n                    itemContext\n//                    this.config.db,\n                );\n            case DataSourceTypeEnum.QUERY:\n                return this.getData_query(\n                    dsd\n                );\n            case DataSourceTypeEnum.URL:\n                return this.getData_url(\n                    dsd\n                );\n            case DataSourceTypeEnum.LOCAL_STORAGE:\n                return this.getData_localStorage(\n                    dsd\n                );\n            case DataSourceTypeEnum.SESSION_STORAGE:\n                return this.getData_sessionStorage(\n                    dsd\n                );\n            case DataSourceTypeEnum.COOKIE:\n                return this.getData_cookieStorage(\n                    dsd\n                );\n        } \n\n    } \n\n    private getData_user(dsd: Sa5DataSourceDescriptor): string {\n\n        // If no user, return nothing\n        // TODO: warn? \n        if (!this.config.user || !this.config.user.email)\n            return null; \n    \n        let val: string = \"\";\n        switch (dsd.identifierParts[0]) {\n            case \"data\":\n                val = this.config.user.data[dsd.identifierParts[1]];\n                break;\n            default:\n                val = this.config.user[dsd.name]; \n                break;\n        }\n\n    }\n\n    private getData_cookieStorage(dsd: Sa5DataSourceDescriptor): string {\n\n        // Abort if not in a browser context \n        if (typeof window == 'undefined')\n            return null;\n\n        // Should return null if there is none\n        return getCookie(dsd.name);\n    }\n\n    private getData_localStorage(dsd: Sa5DataSourceDescriptor): string {\n\n        // Abort if not in a browser context \n        if (typeof window == 'undefined')\n            return null;\n\n        // Should return null if there is none\n        return localStorage.getItem(dsd.name);\n    }\n\n    private getData_sessionStorage(dsd: Sa5DataSourceDescriptor): string {\n\n        // Abort if not in a browser context \n        if (typeof window == 'undefined')\n            return null;\n\n        // Should return null if there is none\n        return sessionStorage.getItem(dsd.name);\n    }\n    \n    private getData_query(dsd: Sa5DataSourceDescriptor): string {\n\n        // Abort if not in a browser context \n        if (typeof window == 'undefined')\n            return null;\n        \n        // Get Params \n        let urlParams = new URLSearchParams(window.location.search);\n\n        // Should return null if there is none\n        return urlParams.get(dsd.name);\n    }\n    \n    private getData_url(dsd: Sa5DataSourceDescriptor): string {\n\n        // Abort if not in a browser context \n        if (typeof window == 'undefined')\n            return null;\n        \n        // Get Params \n//        let urlParams = new URLSearchParams(window.location.search);\n\n        const url = new URL(window.location.href);\n\n//        const fieldName = 'pathname';  // This is the string representing the field name\n        \n        const fieldValue = url[dsd.name];\n        \n        console.log(fieldValue);  // Outputs: \"/path/to/resource\"\n        \n\n        // Should return null if there is none\n        return fieldValue; // urlParams.get(dsd.name);\n    }\n\n    private getData_db(dsd: Sa5DataSourceDescriptor, dsnContext: string, itemContext: string): string {\n\n        // Get data source name \n//        let dsn = el.getAttribute(\"wfu-bind\");\n //   console.log(\"getData_db\", dsd, dsnContext, itemContext);\n        // Find all elements which identify themselves\n        // as a data-source\n        //let dataSource = document.querySelector(`*[wfu-bind='${dsn}']`);\n        //if (!dataSource) {\n        //    console.warn(`Datasource: '${name}' does not exist`);\n        //    return;\n        //}\n\n//console.log(this.store);\n\n    let db = this.store.store[dsnContext]\n//    console.log(this.store);\n\n    let item = db.data.get(itemContext);\n\n //   console.log(item); \n\nreturn item[dsd.name];\n\n\n        // BUG: \n// return 'foo';\n\n/* \n\n        // Get data\n        let data = db.getData(dsn);\n    \n        if(!db) {\n            console.warn(`Data binding requested for elem '${data}', but no db defined.`);\n            return; // exit \n        }\n    \n        let templateId = el.getAttribute(\"wfu-bind-template\");\n    \n        let template: HTMLElement = document.querySelector(\"#\" + templateId);\n    \n        let hb = new HtmlBuilder();\n        hb.addTemplate(\n            template,\n            data\n        );\n    \n        // Push HTML to element\n        el.innerHTML = hb.render();\n\n        */\n    }\n\n}\n\n", "\n/*\n * webflow-utils\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * NO-CODE version, keys off of [wfu] attributes.\n */\n\n//import { WfuQuery, WfuRelativeLinkFixup, WfuTargetLinks } from '../webflow-url';\nimport { Sa5Core } from '../webflow-core'; \nimport { Sa5Debug } from '../webflow-core/debug';\n\n//import { loadAllData } from '../modules/webflow-data.js';\n\nimport { Sa5Datastore } from '../webflow-data';\nimport { WfuDataBinder} from '../webflow-databind';\n\n//import { dataBindAllForms } from '../modules/webflow-form.js';\n\n// export var dataBindAll = function () {\n\nconst init = () => { \n\n//    new Sa5Core().init();\n    let core: Sa5Core = Sa5Core.startup();\n\n//    console.log(\"webflow-data\", \"init\"); \n\n    // Initialize debugging\n    let debug = new Sa5Debug(\"sa5-data\");\n    debug.debug (\"Initializing\");\n\n    // Create datastore\n    var ds: Sa5Datastore = new Sa5Datastore();\n    ds.init();\n\n    // BUG: DEPRECATED \n    // Bind all form elements\n//    dataBindAllForms(db);\n\n    let binder = new WfuDataBinder(ds).bindAll();\n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", init); "],
  "mappings": "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",
  "names": ["item", "$", "loadGoogleSheetFromSpec", "loadGoogleSheetFromSpec"]
}
