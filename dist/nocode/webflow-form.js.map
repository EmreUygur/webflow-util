{
  "version": 3,
  "sources": ["../../src/webflow-core/debug.ts", "../../src/globals.ts", "../../src/webflow-core/designer.ts", "../../src/webflow-core.ts", "../../src/webflow-form.ts", "../../src/webflow-form/handler/form-handler.ts", "../../src/webflow-form/handler/basin-handler.ts", "../../src/webflow-form/handler/make-handler.ts", "../../src/webflow-form/handler/n8n-handler.ts", "../../src/webflow-form/handler/zapier-handler.ts", "../../src/webflow-form/handler/form-handler-factory.ts", "../../src/webflow-form/ip-info.ts", "../../src/nocode/webflow-form.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Debug Utilities\n */\n\n\n\nexport class Sa5Debug {\n    \n    private localStorageDebugFlag: string = 'sa5-debug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"sa5-core debug enabled (persistent).\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"sa5-core debug disabled (persistent).\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n/**\n * SA5 Globals\n * \n */\n\nexport enum Sa5GlobalEvent {\n\n    EVENT_USER_CHANGED = 'userInfoChanged',\n    EVENT_DATASTORE_LOADED = 'datastoreLoaded',\n    EVENT_SLIDE_CHANGED = 'slideChanged', \n    EVENT_VIDEO_PLAYER_STATE_CHANGE = 'playerStateChange', \n    \n}\n\nexport enum Sa5ScriptType {\n\n    SCRIPT_TYPE_DATA_ITEM = 'wfu-data-item', \n    SCRIPT_TYPE_SA5_DATA_ITEM = 'sygnal/sa5-data-proto', // 'sygnal/sa5-data', \n\n}\n\nexport namespace Sa5Attribute {\n    export function getBracketed(attr: Sa5Attribute): string {\n        return `[${attr}]`;\n    }\n}\n\nexport enum Sa5Attribute {\n\n    // Video\n    ATTR_VIDEO = 'wfu-video',\n    ATTR_VIDEO_DATA_POSTER_URL = 'wfu-data-poster-url', \n\n    // Designer\n    ATTR_DESIGN = 'wfu-design',\n\n    // Elements \n    ATTR_ELEMENT_SLIDER = 'wfu-slider',\n    ATTR_ELEMENT_TABS = 'wfu-tabs',\n    ATTR_ELEMENT_BUTTON = 'wfu-button', \n        ATTR_BUTTON_ENABLED = 'wfu-button-enabled', \n        ATTR_BUTTON_DISABLED_CLASS = 'wfu-button-disabled-class',\n\n    // Data\n    ATTR_DATA = 'wfu-data',\n    ATTR_DATA_TYPE = 'wfu-data-type',\n    ATTR_DATA_DSN = 'wfu-data-dsn',\n    ATTR_DATA_ITEM_ID = 'wfu-data-item-id',\n    \n    // Data-binding\n    ATTR_DATABIND = 'wfu-bind',\n    ATTR_DATABIND_CONTENT = 'wfu-bind-content',\n    ATTR_DATABIND_CONTEXT_DSN = 'wfu-bind-dsn',\n    ATTR_DATABIND_CONTEXT_ITEM_ID = 'wfu-bind-item-id',\n\n    // Pre-loaders\n    ATTR_PRELOAD = 'wfu-preload', \n\n    // Interactions\n    ATTR_IX_TRIGGER = 'wfu-ix-trigger',\n    ATTR_IX_ID = 'wfu-ix-id',\n\n    // Sort\n    ATTR_SORT = 'wfu-sort',\n\n    // Filter\n    ATTR_FILTER = 'wfu-filter',\n    ATTR_FILTER_MATCH = 'wfu-filter-match',\n    ATTR_FILTER_EVAL = 'wfu-filter-eval',\n    ATTR_FILTER_FUNC = 'wfu-filter-func',\n\n}", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Designer Utilities\n */\n\nimport { Sa5Attribute } from \"../globals\";\n\n\n\nexport class Sa5Designer {\n\n    constructor() {\n\n    }\n\n    init() {\n        this.removeDesignTimeElements();\n    }\n\n    // Remove any element tagged for design-time-only\n    // used typically for in-designer <style> elements\n    // in HTML Embeds. \n    removeDesignTimeElements() {\n\n// console.log(\"designer clean\"); \n\n        const elements: NodeListOf<HTMLElement> = document.querySelectorAll(\n            Sa5Attribute.getBracketed(Sa5Attribute.ATTR_DESIGN)\n            );\n\n        elements.forEach(element => {\n            element.remove();\n        });\n\n    }\n\n}\n\n\n", "\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n// export interface Sa5Handler {\n//     [0]: string;\n//     [1]: Function;\n// }\n\n\n// import { HtmlBuilder } from './modules/webflow-html-builder';\nimport { Sa5Debug } from './webflow-core/debug'\nimport { Sa5Designer } from './webflow-core/designer';\n\n/*\n * Debugging class.\n */\n\nexport class Sa5Core {\n\n    // let sa5: [string, Function][] = window.sa5 || [];\n    public handlers = [];\n\n    getHandlers(name: string): Function[] {\n\n        return this.handlers.filter(item => item[0] === name)\n            .map(item => item[1]);\n\n//        return null;\n    }\n\n    getHandler(name: string): Function | undefined {\n        const item = this.handlers\n            .find(item => item[0] === name);\n        return item ? item[1] : undefined;\n    }\n\n    // Map for elements wired to Sa5 objects \n//    public elements: WeakMap<HTMLElement, object>;\n//     map.set(elem, myObject);\n\n// // Later, you can retrieve the object like this\n// let retrievedObject = map.get(elem);\n\n    constructor() {\n\n        // Remove any designer-only elements\n        (new Sa5Designer).init();    \n\n    }\n\n    init() {\n\n        this.initDebugMode();\n\n    }\n\n    // Auto-enable debug\n    // based on ?sa-debug=true querystring param\n    initDebugMode() {\n\n        const debugParamKey = 'debug'; // ?sa-debug=true\n\n//        var wfuDebugValue = Boolean(localStorage.setItem('wfuDebug', 'true')); \n\n        let params = new URLSearchParams(window.location.search);\n        let hasDebug = params.has(debugParamKey);\n\n        if (hasDebug) {\n            let wfuDebug = new Sa5Debug(`sa5 init`);\n            wfuDebug.persistentDebug = this.stringToBoolean(params.get(debugParamKey));\n        }\n\n    }\n\n    stringToBoolean(str: string): boolean {\n        const truthyValues: string[] = ['1', 'true', 'yes'];\n        const falsyValues: string[] = ['0', 'false', 'no'];\n      \n        if (truthyValues.indexOf(str.toLowerCase()) !== -1) {\n            return true;\n        // } else if (falsyValues.indexOf(str.toLowerCase()) !== -1) {\n        //     return false;\n        } else {\n            return false;\n        }\n    }\n\n    // Factory \n    // Get or create Sa5Core \n    static startup(module: any | null = null): Sa5Core {\n\n//        console.debug(\"sa5core\", \"startup\");\n\n//        console.debug(\"INITIALIZING SA5CORE\");\n//        console.log(window[\"sa5\"]);\n        \n        let sa5instance = window['sa5'];\n\n        var core: Sa5Core; // = new Sa5Core();\n\n        // Initialize Sa5Core if needed\n\n        if(sa5instance?.constructor?.name == \"Sa5Core\") {\n\n            core = sa5instance;\n\n        } else {\n\n    //         if(window[\"sa5\"])\n    // console.log(\"name\", window[\"sa5\"].name);\n\n            core = new Sa5Core();\n\n            // Absorb handlers\n            if(Array.isArray(sa5instance))\n                core.handlers = sa5instance; //window[\"sa5\"];\n\n            window[\"sa5\"] = core;\n            window[\"Sa5\"] = window[\"sa5\"];\n//            console.log(\"post\", window[\"sa5\"] instanceof Sa5Core);\n\n        } \n\n        // Add new module\n        //window[\"sa5\"] = window[\"sa5\"] || []; // {};\n        if (module) {\n\n//            console.debug(\"Registered module\", module.name); \n\n            window[\"sa5\"][module.name] = module;\n//            console.log(window[\"sa5\"][module.name]);\n        }\n\n        // instance.constructor.name\n\n        return core;\n    }\n\n    // Add new handlers\n    push(o) {\n        this.handlers.push(o);\n    }\n\n}\n\n\n// Complete initialization \n// even though we don't need it yet \nSa5Core.startup(); \n\n\n// Register\n//window[\"sa5\"] = window[\"sa5\"] || []; // {};\n//window[\"sa5\"][\"Sa5Core\"] = Sa5Core;\n", "\n/*\n * webflow-form\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Adds capabilities to Webflow Forms and form elements.\n */\n\nimport { Sa5Core } from './webflow-core';\nimport { Sa5Debug } from './webflow-core/debug';\n\n\n\nexport enum WebflowFormMode {\n    Active,\n    Success,\n    Error, \n}\n\n\nexport class Sa5Form {\n//    private _element: HTMLElement;\n\n    debug: Sa5Debug;\n\n    formBlockElement: HTMLElement;\n    formElement: HTMLFormElement;\n\n    isValid: boolean;\n\n    constructor(element: HTMLElement) {\n//        this._element = element;\n\n        this.debug = new Sa5Debug(\"sa5-form\");\n        this.debug.debug (\"Initializing\");\n\n        // Resolve Form Block pointer\n        if (element.tagName == \"FORM\")\n            this.formBlockElement = element.parentElement;\n        else\n            this.formBlockElement = element;\n        console.debug(this.formBlockElement);\n\n        // Resolve Form pointer\n        this.formElement = this.formBlockElement.querySelector(\"form\");\n\n        // TODO: everywhere \n        this.isValid = true; \n\n        console.debug(this.formElement);\n\n    }\n\n    init() {\n\n\n    }\n\n    // es6 call class methods from within same class\n    // https://stackoverflow.com/a/36248405\n\n    setMode(mode: WebflowFormMode, message = \"\") {\n\n        this.debug.debug(\"setting mode.\", mode, message); \n\n        let success: HTMLElement = this.formBlockElement.querySelector(\"div.w-form-done\");\n        let error: HTMLElement = this.formBlockElement.querySelector(\"div.w-form-fail\");\n\n        switch (mode as WebflowFormMode) {\n            case WebflowFormMode.Active:\n\n                this.formElement.style.display = \"block\";\n                success.style.display = \"none\";\n                error.style.display = \"none\";\n                \n                break;\n            case WebflowFormMode.Success:\n\n                // Display message\n                let successMessage = error.querySelector(\"[wfu-form-message]\");\n                if (successMessage)\n                    successMessage.innerHTML = message;\n\n                this.formElement.style.display = \"none\";\n                success.style.display = \"block\";\n                error.style.display = \"none\";\n\n                break;\n            case WebflowFormMode.Error:\n                \n                // Display message\n                let errorMessage = error.querySelector(\"[wfu-form-message]\");\n                if (errorMessage)\n                    errorMessage.innerHTML = message;\n                \n                this.formElement.style.display = \"none\";\n                success.style.display = \"none\";\n                error.style.display = \"block\";\n\n                break;\n        }\n\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n", "\nimport { Sa5Core } from '../../webflow-core';\nimport { Sa5Debug } from '../../webflow-core/debug';\nimport { Sa5Form, WebflowFormMode } from '../../webflow-form';\n\n// import { WfuFormHandlerBasin } from './basin-handler';\n// import { WfuFormHandlerMake } from './make-handler';\n// import { WfuFormHandlerN8N } from './n8n-handler';\n// import { WfuFormHandlerZapier } from './zapier-handler';\n\n\n/*\n * WfuFormHandler class.\n */\n\nvar defaultFormHandlerConfig = {\n\n    debug: false, // Debugging mode\n\n}\n\n\nexport class WfuFormHandler {\n\n    debug: Sa5Debug;\n    form: Sa5Form;\n\n//    formBlock;\n    config; // Optional config\n    // action;\n    // waitMessage;\n    handler;\n\n    // static get WebflowFormMode() {\n    //     return WebflowFormMode;\n    // }\n\n    constructor(form: Sa5Form, config = {}) {\n\n        // Initialize debugging\n        this.debug = new Sa5Debug(\"sa5-form-handler\");\n        this.debug.debug (\"Initializing\");\n\n        this.form = form; \n\n//        this.handler = this;\n\n//        this.config = $.extend({}, defaultFormHandlerConfig, config);\n\n//        this.debug.enabled = this.config.debug; \n\n        // Resolve Form Block pointer\n        // if ($(elem).is(\"form\"))\n        //     this.formBlock = $(elem).parent();\n        // else\n        //     this.formBlock = $(elem);\n        // this.debug.debug(this.formBlock);\n\n        // // Resolve ancillary pointers\n        // this.form = this.formBlock.children(\"form\");\n        // this.debug.debug(this.form);\n\n        let action = this.form.formElement.getAttribute(\"action\");\n        this.debug.debug(\"action\", action);\n\n        // Get the Webflow wait message\n        let waitMessage = this.form.formElement.querySelector(\"input[type=submit]\")\n            .getAttribute(\"data-wait\");\n        this.debug.debug(`waitMessage: ${waitMessage}`);\n\n    }\n\n\n    handleResponse(data, status, xhr) {\n\nconsole.log(\"response\", data); \n\n        // How to access the correct `this` inside a callback \n        // https://stackoverflow.com/a/20279485\n\n        this.debug.debug(`Webhook response status: ${status}`);\n\n        // Assume success\n        this.form.setMode(WebflowFormMode.Success);\n\n    }\n\n    handleFailResponse(jqxhr, settings, ex) {\n\n        this.debug.debug(`Webhook response FAILED jqxhr: ${jqxhr}`);\n        this.debug.debug(`Webhook response FAILED settings: ${settings}`);\n        this.debug.debug(`Webhook response FAILED ex: ${ex}`);\n\n    }\n\n    formDataToJson(formElement: HTMLFormElement): string {\n        let formData = new FormData(formElement);\n        let jsonObject: { [key: string]: FormDataEntryValue; } = {};\n    \n        for (const [key, value] of formData.entries()) {\n            jsonObject[key] = value;\n        }\n    \n        return JSON.stringify(jsonObject);\n    }\n    \n\n    \n\n    init() {\n\n//        const handler = this.handler;\n        const form = this.form;\n\n        this.debug.debug(\"WFU Handle Form submit to webhook (success response).\");\n\n//        const that = this;\n\n// console.log(\"installing form handler 1.\"); \n\n        // Catch any submits on forms\n        // Which post to Zapier-webhooks \n\nconsole.log (\"init form handler.\");\n\n        this.form.formElement.addEventListener('submit', async (e) => {\n\n\n\n            e.preventDefault();\n\n            // Get form post data\n            //    var data = $(form).serialize();\n\n            this.debug.debug(\"Posting data.\");\n            this.debug.debug(`Webhook - ${this.form.formElement.getAttribute(\"action\")}`);\n//            this.debug.debug(`Data - ${this.form.formElement.serialize()}`);\n\n            // Post to hook,\n            // Capture & handle result\n            let formData = new FormData(this.form.formElement);\n\n// // let formElement = <HTMLFormElement>document.getElementById('your-form-id');\n// let json = this.formDataToJson(this.form.formElement);\n\n// console.log(json);  // Outputs the JSON string\n\n//console.log(this.form.formElement.action);\n\n//console.log(formData); \n\n/** \n            try {\n\n                let response = await fetch(this.form.formElement.action, {\n                    method: 'POST',\n                    body: formData,\n                });\n        \n//console.log(response); \n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n  //              console.log(response.ok); \n        \n                let jsonResponse = await response.json();\n                console.log(jsonResponse); // Outputs the server response\n\n//                console.log(\"done\"); \n\n\n            } catch (error) {\n\n                console.error('Error:', error);\n\n            }\n*/\n\nconsole.log(\"sending data\");\n\n            fetch(this.form.formElement.action, {\n                method: 'POST',\n                body: formData\n            })\n            .then(response => response.json())\n            .then(data => this.handleResponse(data, \"success\", null)) // response\n            .catch((error) => this.handleFailResponse(error, \"error\", error));\n            // .finally(() => {\n            //     // Any cleanup code goes here\n            // });\n\n\n\n            // $.post(\n            //     form.attr(\"action\"),\n            //     form.serialize(),\n            //     function (data, status, xhr) {\n            //         that.handleResponse(data, status, xhr); \n            //     }.bind(handler)\n            //     )\n            //     .done(function () {\n            //     })\n            //     .fail(function (jqxhr, settings, ex) {\n            //         that.handleFailResponse(jqxhr, settings, ex); \n            //     })\n            //     .always(function () {\n            //     });\n\n            return false;\n        });\n\n    }\n\n    // static create(form: Sa5Form, config = {}) {\n    //     //type, elem, config) {\n    //     var handler;\n\n    //     let type = form.formElement.getAttribute(\"wfu-form-handler\"); \n\n    //     switch (type) {\n    //         case \"zapier\":\n\n    //             handler = new WfuFormHandlerZapier(form, config);\n    //             handler.init();\n\n    //             break;\n    //         case \"n8n\":\n\n    //             handler = new WfuFormHandlerN8N(form, config);\n    //             handler.init();\n\n    //             break;\n    //         case \"make\":\n\n    //             handler = new WfuFormHandlerMake(form, config);\n    //             handler.init();\n\n    //             break;\n    //         case \"basin\":\n\n    //             handler = new WfuFormHandlerBasin(form, config);\n    //             handler.init();\n\n    //             break;\n    //         case \"other\":\n    //         case \"\": // unspecified \n\n    //             handler = new WfuFormHandler(form, config);\n    //             handler.init();\n\n    //             break;\n    //         default:\n\n    //             console.error(`Unknown wfu-form-handler ${type}`);\n\n    //             break;\n    //     }\n\n    //     return handler;\n    // }\n\n    // static createFromElement(elem: HTMLElement) {\n\n    //     let form: Sa5Form = new Sa5Form(elem);\n\n    //     // if form is valid\n    //     if (!form.isValid) {\n    //         console.error(\"Cannot only instantiate Sa5 form handler from a Form element.\"); \n    //     }\n\n    //     return WfuFormHandler.create(form); \n\n    // }\n\n}\n\n/* \n// https://dev.to/sanderdebr/js-es6-design-patterns-factory-3a3g \nexport const WfuFormHandlerFactory = {\n    create: function (type, elem, config) {\n    }\n}\n*/", "\n\n\nimport { WfuFormHandler } from './form-handler';\nimport { Sa5Form, WebflowFormMode } from '../../webflow-form';\n\n\n\nexport class WfuFormHandlerBasin extends WfuFormHandler {\n\n    constructor(form: Sa5Form, config = {}) {\n\nconsole.log(\"BASIN HANDLER.\"); \n\n        super(form, config); // call the super class constructor and pass in the name parameter\n    }\n    \n}\n\n\n\n", "\n\n\nimport { WfuFormHandler } from './form-handler';\nimport { Sa5Form, WebflowFormMode } from '../../webflow-form';\n\n\n\nexport class WfuFormHandlerMake extends WfuFormHandler {\n\n    constructor(form: Sa5Form, config) {\n        super(form, config); // call the super class constructor and pass in the name parameter\n    }\n\n    handleResponse(data, status, xhr) {\n\n        // How to access the correct `this` inside a callback \n        // https://stackoverflow.com/a/20279485\n\n        this.debug.debug(`Webhook response data: ${JSON.stringify(data)}`);\n        this.debug.debug(`Webhook response status: ${status}`);\n        this.debug.debug(`Webhook response xhr: ${JSON.stringify(xhr)}`);\n\n        if (xhr.status >= 200 && xhr.status < 300) { \n            this.form.setMode(WebflowFormMode.Success, \n                xhr.responseJSON?.message);\n        } else {\n            this.form.setMode(WebflowFormMode.Error, \n                xhr.responseJSON?.message);\n        }\n\n    }\n\n    handleFailResponse(jqxhr, settings, ex) {\n\n        this.debug.debug(`Webhook response FAILED jqxhr: ${JSON.stringify(jqxhr)}`);\n        this.debug.debug(`Webhook response FAILED settings: ${settings}`);\n        this.debug.debug(`Webhook response FAILED ex: ${ex}`);\n\n        // Webhook is off - Webhook is temporarily disabled.\n        // ? Scenario is off\n        if (jqxhr.status == 400) {\n            console.error(jqxhr.responseText);\n            // use default error message, or maybe \"Service unavailable.\" \n            this.form.setMode(WebflowFormMode.Error, \n                jqxhr.responseJSON?.message);\n        } else {\n            this.form.setMode(WebflowFormMode.Error, \n                jqxhr.responseJSON?.message);\n        }\n\n    } \n    \n}\n\n\n\n", "\n\n\nimport { WfuFormHandler } from './form-handler';\nimport { Sa5Form, WebflowFormMode } from '../../webflow-form';\n\n\n\nexport class WfuFormHandlerN8N extends WfuFormHandler {\n\n    constructor(form: Sa5Form, config) {\n        super(form, config); // call the super class constructor and pass in the name parameter\n    }\n\n    handleResponse(data, status, xhr) {\n\n        // How to access the correct `this` inside a callback \n        // https://stackoverflow.com/a/20279485\n        this.debug.debug(`Webhook response data: ${JSON.stringify(data)}`);\n        this.debug.debug(`Webhook response status: ${status}`);\n        this.debug.debug(`Webhook response xhr: ${JSON.stringify(xhr)}`);\n\n        if (xhr.status >= 200 && xhr.status < 300) { \n            this.form.setMode(WebflowFormMode.Success, \n                xhr.responseJSON?.message);\n        } else {\n            this.form.setMode(WebflowFormMode.Error, \n                xhr.responseJSON?.message);\n        }\n\n    }\n\n    handleFailResponse(jqxhr, settings, ex) {\n\n        this.debug.debug(`Webhook response FAILED jqxhr: ${JSON.stringify(jqxhr)}`);\n        this.debug.debug(`Webhook response FAILED settings: ${settings}`);\n        this.debug.debug(`Webhook response FAILED ex: ${ex}`);\n\n        // Webhook is off - Webhook is temporarily disabled.\n        // ? Scenario is off\n        if (jqxhr.status == 400) {\n            console.error(jqxhr.responseText);\n            // use default error message, or maybe \"Service unavailable.\" \n            this.form.setMode(WebflowFormMode.Error, \n                jqxhr.responseJSON?.message);\n        } else {\n            this.form.setMode(WebflowFormMode.Error, \n                jqxhr.responseJSON?.message);\n        }\n\n    } \n    \n}\n\n\n\n", "\n\n\nimport { WfuFormHandler } from './form-handler';\nimport { Sa5Form, WebflowFormMode } from '../../webflow-form';\n\n\n\nexport class WfuFormHandlerZapier extends WfuFormHandler {\n\n    constructor(form: Sa5Form, config) {\n        super(form, config); // call the super class constructor and pass in the name parameter\n    }\n\n    handleResponse(data, status, xhr) {\n\n        // How to access the correct `this` inside a callback \n        // https://stackoverflow.com/a/20279485\n\n        this.debug.debug(`Webhook response status: ${status}`);\n        this.debug.debug(`Zapier result: ${data.status}`);\n\n        if (data.status == \"success\") {\n            this.form.setMode(WebflowFormMode.Success);\n        } else {\n            this.form.setMode(WebflowFormMode.Error);\n        }\n\n    }\n\n    handleFailResponse(jqxhr, settings, ex) {\n\n//console.log(\"what\"); \n\n        this.debug.debug(`Webhook response FAILED jqxhr: ${jqxhr}`);\n        this.debug.debug(`Webhook response FAILED settings: ${settings}`);\n        this.debug.debug(`Webhook response FAILED ex: ${ex}`);\n\n\n    } \n    \n}\n\n\n\n", "\nimport { Sa5Core } from '../../webflow-core';\nimport { Sa5Debug } from '../../webflow-core/debug';\nimport { Sa5Form, WebflowFormMode } from '../../webflow-form';\n\nimport { WfuFormHandler } from './form-handler';\n\nimport { WfuFormHandlerBasin } from './basin-handler';\nimport { WfuFormHandlerMake } from './make-handler';\nimport { WfuFormHandlerN8N } from './n8n-handler';\nimport { WfuFormHandlerZapier } from './zapier-handler';\n\n\n\n\nexport class WfuFormHandlerFactory {\n\n    constructor(form: Sa5Form, config = {}) {\n\n\n    }\n\n    static create(form: Sa5Form, config = {}): WfuFormHandler {\n        //type, elem, config) {\n        var handler: WfuFormHandler;\n\n        let type = form.formBlockElement.getAttribute(\"wfu-form-handler\"); \n\n        switch (type) {\n            case \"zapier\":\n\n                handler = new WfuFormHandlerZapier(form, config);\n//                handler.init();\n\n                break;\n            case \"n8n\":\n\n                handler = new WfuFormHandlerN8N(form, config);\n    //            handler.init();\n\n                break;\n            case \"make\":\n\n                handler = new WfuFormHandlerMake(form, config);\n   //             handler.init();\n\n                break;\n            case \"basin\":\n\n                handler = new WfuFormHandlerBasin(form, config);\n      //          handler.init();\n\n                break;\n            case \"other\":\n            case \"\": // unspecified \n\n                handler = new WfuFormHandler(form, config);\n      //          handler.init();\n\n                break;\n            default:\n\n                console.error(`Unknown wfu-form-handler ${type}`);\n\n                break;\n        }\n\n        return handler;\n    }\n\n    static createFromElement(elem: HTMLElement): WfuFormHandler {\n\n        let form: Sa5Form = new Sa5Form(elem);\n\n        // if form is valid\n        if (!form.isValid) {\n            console.error(\"Cannot only instantiate Sa5 form handler from a Form element.\"); \n        }\n\n        return WfuFormHandlerFactory.create(form); \n\n    }\n\n}\n\n/* \n// https://dev.to/sanderdebr/js-es6-design-patterns-factory-3a3g \nexport const WfuFormHandlerFactory = {\n    create: function (type, elem, config) {\n    }\n}\n*/", "\n/*\n * webflow-form-ipinfo\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * For capturing sender IP info,\n * and appending to a form.\n */\n\nimport { Sa5Form } from \"../webflow-form\";\n\nexport class Sa5FormIPInfo {\n\n    formBlock;\n    form: Sa5Form;\n\n    config; // Optional config\n\n    handler;\n\n    prefix = \"ip\";\n\n    constructor(form: Sa5Form, config = {}) {\n\n        this.handler = this;\n\n        this.form = form;\n\n        this.config = config;\n\n        // Resolve Form Block pointer \n        // if ($(elem).is(\"form\"))\n        //     this.formBlock = $(elem).parent();\n        // else\n        //     this.formBlock = $(elem);\n        // console.debug(this.formBlock);\n\n        // // Resolve Form pointer\n        // this.form = this.formBlock.children(\"form\");\n        // console.debug(this.form);\n\n    }\n\n\n    init(): void {\n\n        const handler = this.handler;\n    \n        console.debug(\"WFU append IP Info to form.\");\n    \n        // Get GeoIP info and append in hidden fields \n        fetch(\"https://get.geojs.io/v1/ip/geo.json\")\n            .then(response => response.json())\n            .then(data => {\n                const fields = ['ip', 'continent_code', 'address', 'country', 'country-code', 'region', 'city', 'timezone', 'latitude', 'longitude'];\n                fields.forEach(field => {\n                    if (data[field]) {\n                        let input = document.createElement('input');\n                        input.type = 'hidden';\n                        input.name = `${handler.prefix}-${field}`;\n                        input.value = data[field];\n                        this.form.formElement.appendChild(input)\n                    }\n                });\n            })\n            .catch(error => console.error('Error:', error));\n    }\n\n    static createFromElement(elem: HTMLElement) {\n\n        let form: Sa5Form = new Sa5Form(elem);\n\n        // if form is valid\n        if (!form.isValid) {\n            console.error(\"Cannot only instantiate IP Info from a Form element.\"); \n        }\n\n        return new Sa5FormIPInfo(form); \n\n    }\n\n    // appendIPInfo() {\n\n    //     const handler = this.handler;\n    //     const form = this.form;\n\n    //     console.debug(\"WFU append IP Info to form.\");\n\n    //     // Get GeoIP info\n    //     // and append in hidden fields \n    //     $.getJSON(\n    //         \"https://get.geojs.io/v1/ip/geo.json\",\n    //         function (data) {\n\n    //         $('<input>').attr({\n    //             type: 'hidden',\n    //             name: `${handler.prefix}-address`,\n    //             value: data.ip\n    //         }).appendTo(form);\n\n    //         $('<input>').attr({\n    //             type: 'hidden',\n    //             name: `${handler.prefix}-country`,\n    //             value: data.country\n    //         }).appendTo(form);\n\n    //         $('<input>').attr({\n    //             type: 'hidden',\n    //             name: `${handler.prefix}-country-code`,\n    //             value: data.country_code\n    //         }).appendTo(form);\n\n    //         $('<input>').attr({\n    //             type: 'hidden',\n    //             name: `${handler.prefix}-region`,\n    //             value: data.region\n    //         }).appendTo(form);\n\n    //         $('<input>').attr({\n    //             type: 'hidden',\n    //             name: `${handler.prefix}-city`,\n    //             value: data.city\n    //         }).appendTo(form);\n\n    //         $('<input>').attr({\n    //             type: 'hidden',\n    //             name: `${handler.prefix}-timezone`,\n    //             value: data.timezone\n    //         }).appendTo(form);\n\n    //         $('<input>').attr({\n    //             type: 'hidden',\n    //             name: `${handler.prefix}-latitude`,\n    //             value: data.latitude\n    //         }).appendTo(form);\n\n    //         $('<input>').attr({\n    //             type: 'hidden',\n    //             name: `${handler.prefix}-longitude`,\n    //             value: data.longitude\n    //         }).appendTo(form);\n\n    //     });\n\n    // }\n\n}\n", "\n/*\n * webflow-form\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * NO-CODE version, keys off of [wfu] attributes.\n */\n\n// import {  } from '../modules/webflow-form';\nimport { Sa5Core } from '../webflow-core';\nimport { Sa5Debug } from '../webflow-core/debug';\n\nimport { Sa5Form } from '../webflow-form';\nimport { WfuFormHandler } from '../webflow-form/handler/form-handler'; \nimport { WfuFormHandlerFactory } from '../webflow-form/handler/form-handler-factory'; \nimport { Sa5FormIPInfo } from '../webflow-form/ip-info';\n\nconst init = () => { \n\n//    new Sa5Core().init();\nlet core: Sa5Core = Sa5Core.startup();\n\n    // Initialize debugging\n    let debug = new Sa5Debug(\"sa5-form\");\n    debug.debug (\"Initializing\");\n\n    // const sa5Hotkeys = new Sa5Hotkeys();\n    // sa5Hotkeys.init();\n\n\n    // Prepare any tagged forms by appending IP Info\n    document.querySelectorAll('[wfu-form-ipinfo]')\n      .forEach((element: HTMLElement) => {\n//        console.log(\"test ip-info\"); \n\n        Sa5FormIPInfo.createFromElement(element)\n            .init();\n\n    });\n\n    // Catch any submits on forms\n    // Which post to Zapier-webhooks \n    document.querySelectorAll('[wfu-form-handler]')\n      .forEach((element: HTMLElement) => {\n\n console.log(\"installing form handler.\"); \n\n        WfuFormHandlerFactory.createFromElement(element)\n            .init();\n\n\n        // (new WfuFormIPInfo(element))\n        //     .appendIPInfo();\n\n        // const handlerName = element.getAttribute(\"wfu-form-handler\");\n        // var handler;\n\n        // handler = WfuFormHandlerFactory\n        //     .create(handlerName, element);\n\n    });\n\n/* \n    dataBindAllForms(db) {\n\n        // Create datalists from all data sources\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\n        db.data.forEach((data, dataSourceName) => {\n\n            // Create HTML datalists of all data sources\n            // for data binding\n            createHtmlDataList(\n                createDsnMoniker(dataSourceName), // creates a more unique name to avoid element ID conflicts\n                data\n            );\n        });\n\n        // Bind all SELECTS with [wfu-bind] specified\n        dataBindAllFormSelects(db);\n\n        // Bind all INPUTS with [wfu-bind] specified\n        dataBindAllFormInputs(db);\n\n    }\n*/\n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", init)\n\n\n"],
  "mappings": "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",
  "names": ["Sa5Attribute", "item"]
}
