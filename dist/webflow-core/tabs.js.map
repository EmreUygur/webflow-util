{
  "version": 3,
  "sources": ["../../src/webflow-core/tabs.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n/*\n * Webflow Tabs.\n */\n\n\n/*\n<div wfu-tabs=\"main\" data-current=\"Tab 1\" data-easing=\"ease\" data-duration-in=\"300\" data-duration-out=\"100\" class=\"w-tabs\">\n  <div class=\"w-tab-menu\" role=\"tablist\"><a data-w-tab=\"Tab 1\" class=\"tab w-inline-block w-tab-link w--current\" id=\"w-tabs-0-data-w-tab-0\" href=\"#w-tabs-0-data-w-pane-0\" role=\"tab\" aria-controls=\"w-tabs-0-data-w-pane-0\" aria-selected=\"true\">\n      <div>Tab 1</div>\n    </a><a data-w-tab=\"Tab 2\" class=\"tab w-inline-block w-tab-link\" tabindex=\"-1\" id=\"w-tabs-0-data-w-tab-1\" href=\"#w-tabs-0-data-w-pane-1\" role=\"tab\" aria-controls=\"w-tabs-0-data-w-pane-1\" aria-selected=\"false\">\n      <div>Tab 2</div>\n    </a><a data-w-tab=\"Tab 3\" class=\"tab w-inline-block w-tab-link\" tabindex=\"-1\" id=\"w-tabs-0-data-w-tab-2\" href=\"#w-tabs-0-data-w-pane-2\" role=\"tab\" aria-controls=\"w-tabs-0-data-w-pane-2\" aria-selected=\"false\">\n      <div>Tab 3</div>\n    </a></div>\n  <div class=\"w-tab-content\">\n    <div data-w-tab=\"Tab 1\" class=\"w-tab-pane w--tab-active\" id=\"w-tabs-0-data-w-pane-0\" role=\"tabpanel\" aria-labelledby=\"w-tabs-0-data-w-tab-0\"></div>\n    <div data-w-tab=\"Tab 2\" class=\"w-tab-pane\" id=\"w-tabs-0-data-w-pane-1\" role=\"tabpanel\" aria-labelledby=\"w-tabs-0-data-w-tab-1\"></div>\n    <div data-w-tab=\"Tab 3\" class=\"w-tab-pane\" id=\"w-tabs-0-data-w-pane-2\" role=\"tabpanel\" aria-labelledby=\"w-tabs-0-data-w-tab-2\"></div>\n  </div>\n</div>\n*/\n\n/*\n- can we add/remove tabs\n- hide/show tabs\n- reorder tabs\n\n.w--current\n[data-w-tab] weems to be the identifier \n*/\n\nexport class WebflowTabs {\n    \n //    urlTemplate;\n    element: HTMLElement;\n    elementTabMenu: HTMLElement;\n    elementTabContent: HTMLElement;\n\n    // Initialize\n    constructor(element: HTMLElement) {\n\n// Verify it's a tabs element .w-tabs\n\n        \n        this.init(element);\n    }\n\n    init(element: HTMLElement) {\n\n        this.element = element; \n\n        console.log(\"init.\"); \n\n        this.elementTabMenu = element.querySelector('.w-tab-menu');\n        this.elementTabContent = element.querySelector('.w-tab-content');\n//.w-tab-menu\n\nconsole.log(\"count\", this.tabCount());\nconsole.log(\"index\", this.currentTabIndex()); \n//.w-tab-content\n\n//        this.initCopyGist();\n    }\n\n    setTab(index: number) {\n        // verify number in range\n        if (index < 0) \n            return; \n        if (index >= this.tabCount())\n            return;\n\n        let clickEvent = new MouseEvent('click', {\n            // Event properties\n            bubbles: true,\n            cancelable: true,\n            view: window,\n            // More properties can be added as needed\n            }); \n\n        this.getTab(index).dispatchEvent(clickEvent);\n\n//        this.elementTabMenu.children[index].click\n    }\n\n    getTab(index: number): HTMLElement { \n\n        // verify number in range\n        if (index < 0) \n            return; \n        if (index >= this.tabCount())\n            return;\n\n        return this.elementTabMenu.children[index] as HTMLElement;\n    }\n\n    tabCount(): number {\n        return this.elementTabMenu.children.length;\n    }\n\n    currentTabIndex(): number | null {\n//        let parentElement: HTMLElement; // Assume this is your parent element with class .w-tab-menu\n\n        let currentIndex: number | null = null;\n        \n        for (let i = 0; i < this.elementTabMenu.children.length; i++) {\n          if (this.elementTabMenu.children[i].classList.contains('w--current')) {\n            currentIndex = i;\n            break;\n          }\n        }\n        \n        // if (currentIndex !== null) {\n        //   console.log(`The child with class 'w--current' is at index ${currentIndex}`);\n        // } else {\n        //   console.log(\"No child with class 'w--current' was found\");\n        // }\n        \n        return currentIndex; \n    }\n\n    onClick() {\n        // Raise event\n    }\n\n// get set\n    currentTab() {\n//        .w--current\n\n    }\n\n    nextTab() {\n        var newTab: number = this.currentTabIndex() + 1;\n        if (newTab >= this.tabCount())\n            newTab = 0;\n\n        console.log(newTab);\n        \n        this.setTab(newTab);\n    }\n\n    prevTab() {\n        var newTab: number = this.currentTabIndex() - 1;\n        if (newTab < 0)\n            newTab = this.tabCount() - 1;\n\n        console.log(newTab);\n        \n        this.setTab(newTab);\n    }\n\n    firstTab() {\n        this.setTab(0);\n    }\n\n    lastTab() {\n        var newTab: number = this.tabCount() - 1;\n        this.setTab(newTab);\n    }\n\n/*         \n    initCopyGist() {\n\n        document.querySelectorAll('[wfu-gist-copy]').forEach((el: HTMLElement) => {\n            el.addEventListener('click', (e: Event) => {\n                \n//                console.log(\"clicked\"); \n                \n                let a: string | null = el.getAttribute('wfu-gist-copy');\n//                console.log(a); \n                \n                let gist: Element | null = document.querySelector(`[wfu-gist=\"${a}\"]`);\n                \n                if (gist !== null) {\n                    this.copyToClipboard(this.getGistCode(gist));\n                }\n                \n            });\n        });\n\n    }\n\n    copyToClipboard(text: string) {\n\n        navigator.clipboard.writeText(text).then(() => {\n//            console.log('Copying to clipboard was successful!');\n        }, (err: any) => {\n            console.error('Could not copy text: ', err);\n        });\n\n    }\n\n    getGistCode(el: Element | null): string {\n    \n        if(!el) return;\n        \n        // Extract the GIST content\n        let code = el.querySelector(\".gist-file\")?.textContent || '';\n        \n        // Remove whitespace-only lines\n        let cleanString = code.replace(/\\n\\s*\\n/g, '\\n');\n        \n//        console.log(cleanString);\n  \n        // Trim the last four lines \n        let lines = cleanString.split('\\n');\n        lines = lines.slice(0, -4);  \n        let finalString = lines.join('\\n');\n    \n//        console.log(finalString);\n        \n        // Trim 10 pre-whitespaces\n        let finalLines = finalString.split('\\n').map((line: string) => {\n            return line.startsWith('          ') ? line.slice(10) : line;\n        });\n        let trimmedString = finalLines.join('\\n');\n    \n//        console.log(trimmedString);\n\n        return trimmedString;\n    }\n*/\n\n}\n\nwindow[\"WebflowTabs\"] = WebflowTabs;\n\n\n"],
  "mappings": ";;AA2CO,MAAM,cAAN,MAAkB;AAAA,IAQrB,YAAY,SAAsB;AAK9B,WAAK,KAAK,OAAO;AAAA,IACrB;AAAA,IAEA,KAAK,SAAsB;AAEvB,WAAK,UAAU;AAEf,cAAQ,IAAI,OAAO;AAEnB,WAAK,iBAAiB,QAAQ,cAAc,aAAa;AACzD,WAAK,oBAAoB,QAAQ,cAAc,gBAAgB;AAGvE,cAAQ,IAAI,SAAS,KAAK,SAAS,CAAC;AACpC,cAAQ,IAAI,SAAS,KAAK,gBAAgB,CAAC;AAAA,IAIvC;AAAA,IAEA,OAAO,OAAe;AAElB,UAAI,QAAQ;AACR;AACJ,UAAI,SAAS,KAAK,SAAS;AACvB;AAEJ,UAAI,aAAa,IAAI,WAAW,SAAS;AAAA,QAErC,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,MAAM;AAAA,MAEN,CAAC;AAEL,WAAK,OAAO,KAAK,EAAE,cAAc,UAAU;AAAA,IAG/C;AAAA,IAEA,OAAO,OAA4B;AAG/B,UAAI,QAAQ;AACR;AACJ,UAAI,SAAS,KAAK,SAAS;AACvB;AAEJ,aAAO,KAAK,eAAe,SAAS;AAAA,IACxC;AAAA,IAEA,WAAmB;AACf,aAAO,KAAK,eAAe,SAAS;AAAA,IACxC;AAAA,IAEA,kBAAiC;AAG7B,UAAI,eAA8B;AAElC,eAAS,IAAI,GAAG,IAAI,KAAK,eAAe,SAAS,QAAQ,KAAK;AAC5D,YAAI,KAAK,eAAe,SAAS,GAAG,UAAU,SAAS,YAAY,GAAG;AACpE,yBAAe;AACf;AAAA,QACF;AAAA,MACF;AAQA,aAAO;AAAA,IACX;AAAA,IAEA,UAAU;AAAA,IAEV;AAAA,IAGA,aAAa;AAAA,IAGb;AAAA,IAEA,UAAU;AACN,UAAI,SAAiB,KAAK,gBAAgB,IAAI;AAC9C,UAAI,UAAU,KAAK,SAAS;AACxB,iBAAS;AAEb,cAAQ,IAAI,MAAM;AAElB,WAAK,OAAO,MAAM;AAAA,IACtB;AAAA,IAEA,UAAU;AACN,UAAI,SAAiB,KAAK,gBAAgB,IAAI;AAC9C,UAAI,SAAS;AACT,iBAAS,KAAK,SAAS,IAAI;AAE/B,cAAQ,IAAI,MAAM;AAElB,WAAK,OAAO,MAAM;AAAA,IACtB;AAAA,IAEA,WAAW;AACP,WAAK,OAAO,CAAC;AAAA,IACjB;AAAA,IAEA,UAAU;AACN,UAAI,SAAiB,KAAK,SAAS,IAAI;AACvC,WAAK,OAAO,MAAM;AAAA,IACtB;AAAA,EAiEJ;AAEA,SAAO,iBAAiB;",
  "names": []
}
