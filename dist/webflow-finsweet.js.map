{
  "version": 3,
  "sources": ["../src/webflow-finsweet/fs-load.ts", "../src/webflow-finsweet.ts"],
  "sourcesContent": ["\r\n/*\r\n * SA5 \r\n * webflow-finsweet | fs-load\r\n * \r\n * Sygnal Technology Group\r\n * http://sygnal.com\r\n * \r\n * For extensions to Finsweet's Load Attributes\r\n */\r\n\r\n// Extend the Window interface to include fsAttributes and listInstance\r\ninterface FinsweetWindow extends Window {\r\n    fsAttributes: [string, (listInstances: any[]) => void][];\r\n    listInstance?: any; // Assuming listInstance can be any type; specify a more precise type if possible\r\n  }\r\n  \r\ndeclare let window: FinsweetWindow;\r\n\r\nwindow.fsAttributes = window.fsAttributes || [];\r\n\r\nexport class Sa5FinsweetLoad {\r\n\r\n    config; // Optional config\r\n\r\n    constructor(config = {}) {\r\n\r\n        this.config = config;\r\n\r\n    }\r\n\r\n    sortRandom(): void {\r\n        // Ensure listInstance is defined before attempting to access its properties\r\n        if (!window.listInstance) {\r\n            console.log('listInstance is not defined.');\r\n            return;\r\n        }\r\n\r\n        const { items } = window.listInstance;\r\n\r\n        console.log(\"items\", items);\r\n\r\n        // Function to shuffle array items in place\r\n        function shuffleArray(array: any[]): void { // Ideally, replace `any[]` with a more specific type\r\n            for (let i = array.length - 1; i > 0; i--) {\r\n                // Generate random index\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                // Swap elements array[i] and array[j]\r\n                [array[i], array[j]] = [array[j], array[i]];\r\n            }\r\n        }\r\n\r\n        // Shuffle the items array\r\n        shuffleArray(items);\r\n\r\n        // Assuming listInstance has a method named renderItems\r\n        // The existence of listInstance is checked at the beginning of the sort function\r\n        window.listInstance.renderItems();\r\n    }\r\n\r\n    init(): void {\r\n\r\n        window.fsAttributes.push([\r\n            'cmsload',\r\n            (listInstances: any[]) => { // Replace `any[]` with a more specific type if known\r\n              console.log('cmsload Successfully loaded!');\r\n          \r\n              const [listInstance] = listInstances;\r\n          \r\n              // Assign listInstance to the window object\r\n              window.listInstance = listInstance;\r\n          \r\n              // Call sort function\r\n              this.sortRandom();\r\n              \r\n              // Assuming listInstance has an 'on' method; adjust types as necessary\r\n              listInstance.on('renderitems', (renderedItems: any) => { // Replace `any` with a more specific type if known\r\n                console.log(\"renderedItems\", renderedItems);\r\n              });\r\n            },\r\n        ]);\r\n\r\n        // On DOM ready \r\n        document.addEventListener('DOMContentLoaded', () => {\r\n        \r\n            // Get the button element by its ID\r\n            const sortButton = document.getElementById('sort');\r\n        \r\n            // Add a click event listener to the button if it exists\r\n            sortButton?.addEventListener('click', this.sortRandom);\r\n        \r\n        });\r\n  \r\n\r\n\r\n    }\r\n\r\n}\r\n", "\n/**\n * SA5\n * webflow-finsweet\n * \n * Extensions and helper utils for Finsweet Attributes\n */\n\nimport { Sa5FinsweetLoad } from \"./webflow-finsweet/fs-load\";\n\n\n\nexport class Sa5Finsweet { \n\n    fsLoad: Sa5FinsweetLoad;\n\n    constructor() {\n\n        this.fsLoad = new Sa5FinsweetLoad();\n\n    }\n\n    public init(): void {\n\n        // Init FS Load extensions\n        this.fsLoad.init(); \n\n    }\n\n}"],
  "mappings": ";;AAmBA,SAAO,eAAe,OAAO,gBAAgB,CAAC;AAEvC,MAAM,kBAAN,MAAsB;AAAA,IAIzB,YAAY,SAAS,CAAC,GAAG;AAErB,WAAK,SAAS;AAAA,IAElB;AAAA,IAEA,aAAmB;AAEf,UAAI,CAAC,OAAO,cAAc;AACtB,gBAAQ,IAAI,8BAA8B;AAC1C;AAAA,MACJ;AAEA,YAAM,EAAE,MAAM,IAAI,OAAO;AAEzB,cAAQ,IAAI,SAAS,KAAK;AAG1B,eAAS,aAAa,OAAoB;AACtC,iBAAS,IAAI,MAAM,SAAS,GAAG,IAAI,GAAG,KAAK;AAEvC,gBAAM,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK,IAAI,EAAE;AAE5C,WAAC,MAAM,IAAI,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;AAAA,QAC9C;AAAA,MACJ;AAGA,mBAAa,KAAK;AAIlB,aAAO,aAAa,YAAY;AAAA,IACpC;AAAA,IAEA,OAAa;AAET,aAAO,aAAa,KAAK;AAAA,QACrB;AAAA,QACA,CAAC,kBAAyB;AACxB,kBAAQ,IAAI,8BAA8B;AAE1C,gBAAM,CAAC,YAAY,IAAI;AAGvB,iBAAO,eAAe;AAGtB,eAAK,WAAW;AAGhB,uBAAa,GAAG,eAAe,CAAC,kBAAuB;AACrD,oBAAQ,IAAI,iBAAiB,aAAa;AAAA,UAC5C,CAAC;AAAA,QACH;AAAA,MACJ,CAAC;AAGD,eAAS,iBAAiB,oBAAoB,MAAM;AAGhD,cAAM,aAAa,SAAS,eAAe,MAAM;AAGjD,oBAAY,iBAAiB,SAAS,KAAK,UAAU;AAAA,MAEzD,CAAC;AAAA,IAIL;AAAA,EAEJ;;;ACrFO,MAAM,cAAN,MAAkB;AAAA,IAIrB,cAAc;AAEV,WAAK,SAAS,IAAI,gBAAgB;AAAA,IAEtC;AAAA,IAEO,OAAa;AAGhB,WAAK,OAAO,KAAK;AAAA,IAErB;AAAA,EAEJ;",
  "names": []
}
