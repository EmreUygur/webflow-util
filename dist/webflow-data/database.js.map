{
  "version": 3,
  "sources": ["../../src/webflow-data/database.ts"],
  "sourcesContent": ["\n\n\n\nexport class Database {\n    data = new Map();\n\n    normalizeKey = function (key) {\n        return key.toLowerCase();\n    }\n\n    // Add specified JSON document under key.\n    add = function (key, json) {\n\n        key = this.normalizeKey(key);\n\n        // Convert string to JSON\n        if (typeof json == 'string') {\n            json = JSON.parse(json);\n        }\n\n        this.data.set(key, json);\n    }\n\n    getData = function (key) {\n\n        key = this.normalizeKey(key);\n\n        return this.data.get(key);\n    }\n    getDataSource = this.getData; // obsolete\n\n    getCountOfRecords = function (dataSourceName) {\n        return this.getDataSource(dataSourceName).length;\n    }\n\n    getDictionary = function (dataSourceName, keyField, valueField) {\n        var dict = new Map();\n\n        var ds = this.getDataSource(dataSourceName);\n\n//        console.log(ds);\n\n        for (var i = 0; i < ds.length; i++)\n        {\n//            console.log(`${0}: ${ds.length} ${ds[i].keyField} / ${ds[i].valueField}`);\n            dict.set(\n                ds[i][keyField],\n                ds[i][valueField]\n            );\n        }\n\n        console.log(dict);\n        return dict;\n    }\n\n    getDictionaryFromRow = function (dataSourceName, row) {\n        var dict = new Map();\n\n        var ds = this.getDataSource(dataSourceName);\n\n        for (const v in ds[row]) {\n            dict.set(\n                v,\n                ds[row][v]\n            );\n        }\n\n        return dict;\n    }\n\n} \n\n"],
  "mappings": ";;AAIO,MAAM,WAAN,MAAe;AAAA,IAAf;AACH,kBAAO,oBAAI,IAAI;AAEf,0BAAe,SAAU,KAAK;AAC1B,eAAO,IAAI,YAAY;AAAA,MAC3B;AAGA,iBAAM,SAAU,KAAK,MAAM;AAEvB,cAAM,KAAK,aAAa,GAAG;AAG3B,YAAI,OAAO,QAAQ,UAAU;AACzB,iBAAO,KAAK,MAAM,IAAI;AAAA,QAC1B;AAEA,aAAK,KAAK,IAAI,KAAK,IAAI;AAAA,MAC3B;AAEA,qBAAU,SAAU,KAAK;AAErB,cAAM,KAAK,aAAa,GAAG;AAE3B,eAAO,KAAK,KAAK,IAAI,GAAG;AAAA,MAC5B;AACA,2BAAgB,KAAK;AAErB,+BAAoB,SAAU,gBAAgB;AAC1C,eAAO,KAAK,cAAc,cAAc,EAAE;AAAA,MAC9C;AAEA,2BAAgB,SAAU,gBAAgB,UAAU,YAAY;AAC5D,YAAI,OAAO,oBAAI,IAAI;AAEnB,YAAI,KAAK,KAAK,cAAc,cAAc;AAI1C,iBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAC/B;AAEI,eAAK;AAAA,YACD,GAAG,GAAG;AAAA,YACN,GAAG,GAAG;AAAA,UACV;AAAA,QACJ;AAEA,gBAAQ,IAAI,IAAI;AAChB,eAAO;AAAA,MACX;AAEA,kCAAuB,SAAU,gBAAgB,KAAK;AAClD,YAAI,OAAO,oBAAI,IAAI;AAEnB,YAAI,KAAK,KAAK,cAAc,cAAc;AAE1C,mBAAW,KAAK,GAAG,MAAM;AACrB,eAAK;AAAA,YACD;AAAA,YACA,GAAG,KAAK;AAAA,UACZ;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA;AAAA,EAEJ;",
  "names": []
}
