{
  "version": 3,
  "sources": ["../src/webflow-core.ts", "../src/webflow-html/dynamic-attributes.ts", "../src/webflow-html.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Core Utilities\n */\n\n\n\n/*\n * Debugging class.\n */\n\nexport class WfuDebug {\n    \n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem('wfuDebug')); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n\n/*\n * webflow-html\n * Dynamic Attributes\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Applies all x- prefixed attributes to their elements without the prefix.\n * Designed to overcome limitations with Webflow's custom attributes reserved names. \n * Best paired with the new CMS databinding feature of Webflow's custom attributes. \n */\n\n\nimport { WfuDebug } from '../webflow-core';\n\n\n\ninterface Config {\n}\n\n\nexport class WfuHtmlDynamicAttributes {\n    config: Config;\n\n    constructor(config: Config) {\n        this.config = config;\n    }\n\n    Process() {\n\n        // Initialize debugging\n        let debug = new WfuDebug(\"wfu-html\");\n        debug.debug (\"Dynamic attributes processed.\", this.config);\n    \n        // Select all elements in the document\n        var allElements = document.querySelectorAll('*');\n\n        // Iterate over all elements\n        allElements.forEach(function(element) {\n\n            // Iterate over all attributes of each element\n            for (var i = 0; i < element.attributes.length; i++) {\n                var attr = element.attributes[i]; \n\n                // Check if attribute name starts with 'x-'\n                if (attr.name.startsWith('x-')) {\n                    // Do something with the element or attribute\n\n                    var newAttrName = attr.name.slice(2);\n                    // Set the new attribute on the element with the same value as the old attribute\n                    element.setAttribute(newAttrName, attr.value);\n\n//                    console.log('Element:', element, 'Attribute:', attr.name, 'Value:', attr.value);\n                }\n            }\n\n        });\n\n    }\n\n}\n  \n  \n", "/*\n * webflow-html\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * HTML Utilities\n */\n\nimport { WfuHtmlDynamicAttributes } from './webflow-html/dynamic-attributes'\n\ninterface Config {\n    dynamicAttributes: boolean;\n}\n\n\nexport class WfuHtml {\n    config: Config;\n\n    constructor(config: Config) {\n        this.config = config;\n    }\n\n    Process() {\n\n        if(this.config.dynamicAttributes) {\n            let obj = new WfuHtmlDynamicAttributes({});\n            obj.Process();\n        }\n\n    }\n\n}\n  \n  \n"],
  "mappings": "MAgBO,IAAMA,EAAN,KAAe,CAuBlB,YAAYC,EAAe,CArB3B,KAAQ,SAAoB,GAwBxB,KAAK,OAASA,CAElB,CAtBA,IAAI,SAAmB,CAInB,IAAIC,EAAgB,QAAQ,aAAa,QAAQ,UAAU,CAAC,EAI5D,OAAAA,EAAgBA,GAAiB,KAAK,SAE/BA,CACX,CACA,IAAI,QAAQC,EAAiB,CACzB,KAAK,SAAWA,CACpB,CAWA,MAAMC,EAAM,CACJ,KAAK,SACL,QAAQ,MAAMA,CAAI,CAC1B,CAGA,UAAW,CACH,KAAK,SACL,QAAQ,SAAS,CACzB,CAGA,SAASC,EAAmB,CAEpB,KAAK,SAGL,QAAQ,MAAM,KAAK,OAAQ,GAAGA,CAAI,CAE1C,CAEJ,EC7CO,IAAMC,EAAN,KAA+B,CAGlC,YAAYC,EAAgB,CACxB,KAAK,OAASA,CAClB,CAEA,SAAU,CAGM,IAAIC,EAAS,UAAU,EAC7B,MAAO,gCAAiC,KAAK,MAAM,EAGzD,IAAIC,EAAc,SAAS,iBAAiB,GAAG,EAG/CA,EAAY,QAAQ,SAASC,EAAS,CAGlC,QAAS,EAAI,EAAG,EAAIA,EAAQ,WAAW,OAAQ,IAAK,CAChD,IAAIC,EAAOD,EAAQ,WAAW,GAG9B,GAAIC,EAAK,KAAK,WAAW,IAAI,EAAG,CAG5B,IAAIC,EAAcD,EAAK,KAAK,MAAM,CAAC,EAEnCD,EAAQ,aAAaE,EAAaD,EAAK,KAAK,CAGhD,CACJ,CAEJ,CAAC,CAEL,CAEJ,EC9CO,IAAME,EAAN,KAAc,CAGjB,YAAYC,EAAgB,CACxB,KAAK,OAASA,CAClB,CAEA,SAAU,CAEH,KAAK,OAAO,mBACD,IAAIC,EAAyB,CAAC,CAAC,EACrC,QAAQ,CAGpB,CAEJ",
  "names": ["WfuDebug", "label", "wfuDebugValue", "active", "name", "args", "WfuHtmlDynamicAttributes", "config", "WfuDebug", "allElements", "element", "attr", "newAttrName", "WfuHtml", "config", "WfuHtmlDynamicAttributes"]
}
