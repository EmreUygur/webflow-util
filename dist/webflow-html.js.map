{
  "version": 3,
  "sources": ["../src/webflow-core/debug.ts", "../src/webflow-html/dynamic-attributes.ts", "../src/webflow-html/breakpoints.ts", "../src/webflow-html.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Debug Utilities\n */\n\n\n\nexport class Sa5Debug {\n    \n    private localStorageDebugFlag: string = 'sa5-debug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"sa5-core debug enabled (persistent).\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"sa5-core debug disabled (persistent).\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n\n/*\n * webflow-html\n * Dynamic Attributes\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Applies all x- prefixed attributes to their elements without the prefix.\n * Designed to overcome limitations with Webflow's custom attributes reserved names. \n * Best paired with the new CMS databinding feature of Webflow's custom attributes. \n */\n\n\nimport { Sa5Debug } from '../webflow-core/debug';\n\n\n\ninterface Config {\n}\n\n\nexport class Sa5HtmlDynamicAttributes {\n    config: Config;\n\n    constructor(config: Config) {\n        this.config = config;\n    }\n\n    init() {\n\n        // Initialize debugging\n        let debug = new Sa5Debug(\"sa5-html\");\n        debug.debug (\"Dynamic attributes initialized.\", this.config);\n    \n        // Select all elements in the document\n        var allElements = document.querySelectorAll('*');\n\n        // Iterate over all elements\n        allElements.forEach(function(element) {\n\n            // Iterate over all attributes of each element\n            for (var i = 0; i < element.attributes.length; i++) {\n                var attr = element.attributes[i]; \n\n                // Check if attribute name starts with 'x-'\n                if (attr.name.startsWith('x-')) {\n                    // Do something with the element or attribute\n\n                    var newAttrName = attr.name.slice(2);\n                    // Set the new attribute on the element with the same value as the old attribute\n                    element.setAttribute(newAttrName, attr.value);\n\n//                    console.log('Element:', element, 'Attribute:', attr.name, 'Value:', attr.value);\n                }\n            }\n\n        });\n\n    }\n\n}\n  \n// Register\nwindow[\"sa5\"] = window[\"sa5\"] || {};\nwindow[\"sa5\"][\"Sa5HtmlDynamicAttributes\"] = Sa5HtmlDynamicAttributes;\n\n\n", "\n\n/*\n * webflow-html\n * Breakpoints\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n */\n\n\nimport { Sa5Debug } from '../webflow-core/debug';\n\n\ninterface Config {\n    handleBreakpointChange?: ((breakpointName: string, e: MediaQueryListEvent) => void) | null;\n}\n\n// Webflow breakpoints\nexport const sa5Breakpoints = {\n    large1920: '(min-width: 1920px)',\n    large1440: '(min-width: 1440px) and (max-width: 1919px)',\n    large1280: '(min-width: 1280px) and (max-width: 1439px)',\n    desktop: '(min-width: 992px) and (max-width: 1279px)',\n    tablet: '(min-width: 768px) and (max-width: 991px)',\n    mobileLandscape: '(min-width: 480px) and (max-width: 767px)',\n    mobilePortrait: '(max-width: 479px)'\n}\n\n\nexport class Sa5Breakpoints {\n    config: Config;\n\n    constructor(config: Config) {\n        this.config = config;\n    }\n\n    init() {\n\n        // Initialize debugging\n        let debug = new Sa5Debug(\"sa5-html\");\n        debug.debug (\"Breakpoints initialized.\", this.config);\n    \n        // Create MediaQueryList and attach listeners for each breakpoint\n        for (let device in sa5Breakpoints) {\n            let mediaQueryList = window.matchMedia(sa5Breakpoints[device]);\n\n            // Register internal handler\n            mediaQueryList.addEventListener('change', this.handleBreakpointChange);\n\n            if (mediaQueryList.matches) {\n                this.handleBreakpointChange(\n                { \n                    media: mediaQueryList.media, \n                    matches: mediaQueryList.matches \n                } as MediaQueryListEvent); \n            }\n\n        }\n\n    }\n\n    // Breakpoint changed\n    handleBreakpointChange = ((e: MediaQueryListEvent) => {\n\n        // We only want matching events \n        if (!e.matches)\n            return;\n\n        // Identify breakpoint\n        var device = null;\n        for (let d in sa5Breakpoints) {\n            if (e.media == sa5Breakpoints[d]) {\n//                console.log(`Current device: ${d}`);\n                device = d; \n            }\n          }\n\n        // Notify any config-specified handler\n        if(this.config.handleBreakpointChange) \n            this.config.handleBreakpointChange(\n                device as string, \n                e\n            ); \n\n    });\n\n}\n\n// Register\nwindow[\"sa5\"] = window[\"sa5\"] || {};\nwindow[\"sa5\"][\"Sa5Breakpoints\"] = Sa5Breakpoints;\n\n\n  \n", "/*\n * webflow-html\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * HTML Utilities\n */\n\nimport { Sa5Debug } from './webflow-core/debug'\nimport { Sa5HtmlDynamicAttributes } from './webflow-html/dynamic-attributes'\nimport { Sa5Breakpoints } from './webflow-html/breakpoints'\n\ninterface Sa5HtmlConfig {\n\n    dynamicAttributes?: boolean | true;\n    handleBreakpointChange?: ((breakpointName: string, e: MediaQueryListEvent) => void) | null;\n//    handleOrientationChange?: ((orientationName: string, e: MediaQueryListEvent) => void) | null;\n\n    debug?: boolean | true;\n\n}\n\n\n\n\n\nexport class Sa5Html {\n    config: Sa5HtmlConfig;\n    debug: Sa5Debug; \n \n    constructor(config: Sa5HtmlConfig) {\n        this.config = config;\n\n        this.debug = new Sa5Debug(\"sa5-html\");\n        this.debug.enabled = this.config.debug; \n\n    }\n\n    init() {\n\n        this.debug.debug (\"sa5-html init.\");\n\n        // Init breakpoints\n        let breakpoints = new Sa5Breakpoints({\n            handleBreakpointChange: (breakpointName: string, e: MediaQueryListEvent) => {\n\n                window['sa5'] = window['sa5'] || {};\n                const sa5: any = window['sa5'];\n\n                // Get any global handler\n                const breakpointChangeHandler = sa5['breakpointChanged'];\n                if(breakpointChangeHandler) \n                    breakpointChangeHandler(breakpointName, e);\n\n            }\n        });\n        breakpoints.init();\n\n        // Init dynamic attributes\n        if(this.config.dynamicAttributes) {\n            let obj = new Sa5HtmlDynamicAttributes({});\n            obj.init();\n        }\n\n    }\n\n}\n  \n// Register\nwindow[\"sa5\"] = window[\"sa5\"] || {};\nwindow[\"sa5\"][\"Sa5Html\"] = Sa5Html;\n\n\n"],
  "mappings": "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",
  "names": []
}
